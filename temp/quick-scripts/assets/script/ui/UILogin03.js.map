{"version":3,"sources":["UILogin03.js"],"names":["app","require","cc","Class","extends","properties","EditBoxAccount","EditBox","EditBoxPsw","OnCreateInit","HeroAccountManager","ShareDefine","RegEvent","Event_CodeError","Event_ConnectFail","isToken","event","argDict","code","KickOut_AccountTokenError","string","KickOut_ServerClose","WaitForConfirm","ConfirmYN","UpdateAccessPoint","ShowSysMsg","OnShow","ShowAccountInfo","accountList","GetLocalAccountList","count","length","account","token","OnClick","btnName","btnNode","Click_btnLogin","Click_btnReg","ErrLog","charAccount","psw","AccountLogin","OneKeyRegAccount","OnEditBoxBegin","sender","OnConFirm","clickType","msgID","backArgList","QQQunLink","Client","GetClientConfigProperty","sys","openURL","ChangeAccessPoint"],"mappings":"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","file":"UILogin03.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\ui","sourcesContent":["/*\n    UILogin 登陆界面\n*/\nvar app = require(\"app\");\n\ncc.Class({\n    extends: require(\"BaseForm\"),\n\n    properties: {\n        EditBoxAccount: cc.EditBox,\n        EditBoxPsw: cc.EditBox,\n\n    },\n\n    //初始化\n    OnCreateInit:function(){\n        this.HeroAccountManager = app.HeroAccountManager();\n        this.ShareDefine = app.ShareDefine();\n\n\t    this.RegEvent(\"CodeError\", this.Event_CodeError);\n        this.RegEvent(\"ConnectFail\", this.Event_ConnectFail);\n\n        this.isToken = 0;\n    },\n\n\t//登录错误码\n\tEvent_CodeError:function(event){\n\t\tlet argDict = event;\n\t\tlet code = argDict[\"Code\"];\n\t\tif(code == this.ShareDefine.KickOut_AccountTokenError){\n\t\t\tthis.EditBoxPsw.string = \"\";\n\t\t}\n\t\telse if(code == this.ShareDefine.KickOut_ServerClose){\n\t\t\tthis.WaitForConfirm(\"Code_10016\", [], [], this.ShareDefine.ConfirmYN)\n\t\t}\n\t},\n\n\t//连接服务器失败\n\tEvent_ConnectFail:function(event){\n        this.UpdateAccessPoint();\n        let argDict = event;\n\t\tif(!argDict['bCloseByLogout'])\n\t\t\tthis.ShowSysMsg(\"Net_ConnectFail\");\n    },\n\n\t//--------------------显示函数----------------\n\n    OnShow:function(){\n        this.ShowAccountInfo();\n    },\n\n    //显示账号信息\n    ShowAccountInfo:function(){\n        let accountList = this.HeroAccountManager.GetLocalAccountList();\n        let count = accountList.length;\n\n        let account = \"\";\n        let token = \"\";\n\n        if(count){\n            account = accountList[count-1];\n            //token = this.HeroAccountManager.GetAccountToken(account);\n\t        //this.isToken = 1;\n        }\n\n        this.EditBoxAccount.string = account;\n        this.EditBoxPsw.string = '123456';\n\n    },\n\n    //---------点击函数---------------------\n\n    OnClick:function(btnName, btnNode){\n\t\t// this.HeroAccountManager.LoginAccountBySDK();\n        if(btnName == \"btnLogin\"){\n            this.Click_btnLogin();\n        }\n        else if(btnName == \"btnReg\"){\n            this.Click_btnReg();\n        }\n        else{\n            this.ErrLog(\"OnClick:%s not find\", btnName);\n        }\n    },\n\n    //点击登陆\n    Click_btnLogin:function(){\n        let charAccount = this.EditBoxAccount.string;\n        if(!charAccount){\n            this.ShowSysMsg(\"AccountLogin_NotInputAccount\")\n            return\n        }\n        let psw = '123456';\n        if(!psw){\n            this.ShowSysMsg(\"AccountLogin_NotInputPsw\")\n            return\n        }\n\n        //如果密码等于token为token登录\n        /*if(this.isToken){\n\t\t    psw = this.HeroAccountManager.GetAccountToken(charAccount);\n        }*/\n\n        //账号密码登陆\n        this.HeroAccountManager.AccountLogin(charAccount, psw, this.isToken);\n\n    },\n\n    //点击注册\n    Click_btnReg:function(){\n        this.HeroAccountManager.OneKeyRegAccount();\n    },\n\n    OnEditBoxBegin:function(sender){\n\n\t    //如果点击了密码输入,则清除token标示\n\t    /*if(sender == this.EditBoxPsw){\n\t\t    this.isToken = 0;\n\t\t    sender.string = \"\";\n\t    }*/\n    },\n\n\t//2次确认回调\n\tOnConFirm:function(clickType, msgID, backArgList){\n\n\t\tif(clickType != \"Sure\"){\n\t\t\treturn\n\t\t}\n\t\tif(msgID == \"Code_10016\"){\n\t\t\tlet QQQunLink = app.Client.GetClientConfigProperty(\"QQQunLink\");\n\t\t\tcc.sys.openURL(QQQunLink);\n\t\t}\n\t},\n    UpdateAccessPoint:function(){\n        app.HeroAccountManager().ChangeAccessPoint();\n    },\n});\n"]}