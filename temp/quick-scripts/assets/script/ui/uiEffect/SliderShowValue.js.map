{"version":3,"sources":["SliderShowValue.js"],"names":["app","require","cc","Class","extends","properties","MaxLabel","Label","NowLabel","OnLoad","JS_Name","node","name","SoundManager","IntegrateImage","SysDataManager","GetTableDict","slider","getComponent","Slider","maxValue","minValue","addProgress","progressAddValueDict","InitSlider","disValue","maxCount","Math","log2","ceil","log","LOG2E","index","progress","addValue","pow","value","minProgress","string","ShowValue","ChangeProgress","isAdd","nowProgress","nowText","SetWndImage","handle","progressList","Object","keys","SortList","count","length","nowValue","wndNode","sprite","Sprite","ErrLog","that","GetSpriteFrameByImageName","then","spriteFrame","catch","error","stack","imageName","imageInfo","bluebird","reject","Error","filePath","fileName","resType","SpriteFrame","startsWith","SpriteAtlas","ControlManager","CreateLoadPromise","getSpriteFrame","GetProgress","GetShowValue","floor","GetMaxValue"],"mappings":"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","file":"SliderShowValue.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiEffect","sourcesContent":["/*\n    SliderShowValue 滑动进度2进制增长带值显示\n*/\n\nvar app = require(\"app\")\n\ncc.Class({\n    extends: require(\"BaseComponent\"),\n\n    properties: {\n        //显示最大值文本\n        MaxLabel: cc.Label,\n        //显示当前文本\n        NowLabel: cc.Label,\n    },\n\n    // use this for initialization\n    OnLoad: function () {\n\n\t    this.JS_Name = this.node.name + \"_SliderShowValue\";\n\n\t    this.SoundManager = app.SoundManager();\n        this.IntegrateImage = app.SysDataManager().GetTableDict(\"IntegrateImage\");\n    \tthis.slider = this.node.getComponent(cc.Slider);\n\n    \tthis.maxValue = 0;\n    \tthis.minValue = 0;\n\t    //每次变化的进度\n\t    this.addProgress = 0.02;\n\n\t    this.progressAddValueDict = {};\n    },\n\n    InitSlider:function(minValue, maxValue){\n\n\t    this.minValue = minValue;\n\t    this.maxValue = maxValue;\n\n\t    //最小值比最大值大\n\t    if(minValue > maxValue){\n\t\t    this.minValue = maxValue;\n\t    }\n\n\t    this.progressAddValueDict = {};\n\n\t    //取最大值是2的几次方\n\t    let disValue = this.maxValue - this.minValue;\n\t    let maxCount = 0;\n\t    if(disValue > 0){\n\n\t\t    //微信没有存在log2接口\n\t\t    if(Math.log2){\n\t\t\t    maxCount = Math.ceil(Math.log2(disValue));\n\t\t    }\n\t\t    else{\n\t\t\t    maxCount =  Math.ceil(Math.log(disValue)*Math.LOG2E)\n\t\t    }\n\t    }\n\n\t    //至少1个刻度\n\t    if(maxCount <= 0){\n\t\t    maxCount = 1;\n\t    }\n\n\t    for(let index=1; index<=maxCount; index++){\n\t\t    let progress = index/maxCount;\n\t\t    let addValue = Math.pow(2, index);\n\n\t\t    let value = this.minValue + addValue;\n\t\t    //已经是最后一个值了\n\t\t    if(value >= this.maxValue){\n\t\t\t    this.progressAddValueDict[progress] = this.maxValue;\n\t\t    }\n\t\t    else{\n\t\t\t    this.progressAddValueDict[progress] = value;\n\t\t    }\n\t    }\n\n\t    if(disValue != 0){\n\t\t    //取最小进度的一半做为其实进度\n\t\t    let minProgress = (1/maxCount)/2;\n\t\t    //最小进度不能大于0.05\n\t\t    if(minProgress > this.addProgress){\n\t\t\t    minProgress = this.addProgress\n\t\t    }\n\t\t    this.progressAddValueDict[minProgress] = this.minValue\n\t\t    //每次变化的进度\n\t\t    this.addProgress = 0.02;\n\t    }\n\t    else{\n\t\t    //如果最大最小值是一样的 每次增加1\n\t\t    this.addProgress = 1;\n\t    }\n\n\t    if(this.MaxLabel){\n\t\t    this.MaxLabel.string = this.maxValue;\n\t    }\n\n        this.ShowValue();\n    },\n\n\n    ChangeProgress:function(isAdd){\n        let nowProgress = this.slider.progress;\n\n        if(isAdd){\n        \tif(nowProgress == 1){\n        \t\treturn 1\n        \t}\n        \tnowProgress += this.addProgress;\n        }\n        else{\n        \tif(!nowProgress){\n        \t\treturn 0\n        \t}\n        \tnowProgress -= this.addProgress;\n        }\n\n        if(nowProgress > 1){\n            nowProgress = 1;\n        }\n        else if(nowProgress < 0){\n            nowProgress = 0;\n        }\n\n        this.slider.progress = nowProgress;\n\n        this.ShowValue();\n\n        return nowProgress\n    },\n\n    ShowValue:function(){\n    \tlet nowProgress = this.slider.progress;\n\t\tlet nowText = \"\";\n\n        if(nowProgress >= 1){\n            this.SetWndImage(this.slider.handle, \"AllInImage\");\n\t        nowText = \"\";\n        }\n        else{\n            this.SetWndImage(this.slider.handle, \"NotAllInImage\");\n\n\t        let progressList = Object.keys(this.progressAddValueDict);\n\t        //从大到小\n\t        progressList.SortList(true);\n\t        let count = progressList.length;\n\t        let nowValue = 0;\n\n\t        for(let index=0; index<count; index++){\n\t\t        let progress = progressList[index];\n\t\t        if(progress <= nowProgress){\n\t\t\t        nowValue = this.progressAddValueDict[progress];\n\t\t\t        break\n\t\t        }\n\t        }\n\t        nowText = nowValue;\n        }\n\n\t    if(this.NowLabel){\n\t\t    this.NowLabel.string = nowText;\n\t    }\n\n    },\n\n    //设置精灵图片贴图\n    SetWndImage:function(wndNode, value){\n\n        let sprite = wndNode.getComponent(cc.Sprite);\n        if(!sprite){\n            this.ErrLog(\"SetWndImage(%s,%s) not find cc.Sprite\", wndNode.name, value);\n            return\n        }\n\n        let that = this;\n        this.GetSpriteFrameByImageName(value)\n            .then(function(spriteFrame){\n                if(spriteFrame){\n                    sprite.spriteFrame = spriteFrame;\n                }\n                else{\n                    that.ErrLog(\"SetWndImage(%s,%s) load spriteFrame fail\", wndNode.name, value);\n                }\n            })\n            .catch(function(error){\n                that.ErrLog(\"SetWndImage(%s,%s) error:%s\", wndNode.name, value, error.stack);\n            })\n\n    },\n\n\n\n    //获取图片的帧贴图对象\n    GetSpriteFrameByImageName:function(imageName){\n        let imageInfo = this.IntegrateImage[imageName];\n        if(!imageInfo){\n            this.ErrLog(\"GetSpriteFrameByImageName IntegrateImage.txt not find key(%s)\", imageName);\n            return app.bluebird.reject(new Error(\"IntegrateImage.txt not find image\"));\n        }\n        let filePath = imageInfo[\"FilePath\"];\n        let fileName = imageInfo[\"FileName\"];\n\n        let resType = cc.SpriteFrame;\n        //如果加载的是合图资源\n        if(filePath.startsWith(\"atlas\")){\n            resType = cc.SpriteAtlas;\n            if(!fileName){\n                this.ErrLog(\"GetSpriteFrameByImageName(%s) use atlas(%s) need appoint FileName\", imageName, filePath);\n                return app.bluebird.reject(new Error(\"image in cc.SpriteAtlas not appint FileName\"));\n            }\n        }\n        let that = this;\n        return app.ControlManager().CreateLoadPromise(filePath, resType)\n                        .then(function(spriteFrame){\n\n                            //如果是合图创建的模型,加载的是Atlas资源,需要获取文件名精灵帧\n                            if(resType == cc.SpriteAtlas){\n                                spriteFrame = spriteFrame.getSpriteFrame(fileName);\n                            }\n\n                            if(!spriteFrame){\n                                that.ErrLog(\"GetSpriteFrameByImageName(%s) not find spriteFrame\", imageName);\n                                return\n                            }\n                            return spriteFrame\n                        })\n    },\n\n    GetProgress:function(){\n        return this.slider.progress\n    },\n\n    GetShowValue:function(){\n\t    if(!this.NowLabel){\n\t\t    this.ErrLog(\"GetShowValue not NowLabel\");\n\t\t    return 0\n\t    }\n        let value = Math.floor(this.NowLabel.string);\n        return value\n    },\n\n    GetMaxValue:function(){\n        this.maxValue\n    },\n\n});\n"]}