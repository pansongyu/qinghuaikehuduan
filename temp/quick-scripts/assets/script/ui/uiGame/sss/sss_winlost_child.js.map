{"version":3,"sources":["sss_winlost_child.js"],"names":["app","require","cc","Class","extends","properties","OnLoad","LOGIC_MASK_COLOR","LOGIC_MASK_VALUE","PokerCard","ShowSpecData","setEnd","playerAll","index","player","posResultList","node","getChildByName","active","beishu","getComponent","Label","string","doubleNum","difen","baseMark","cardNode","rankeds","dunPos","dunPai1","i","children","length","card","ShowCard","dunPai2","dunPai3","cardType","GetPokeCard","poker","isShowIcon1","isShowLandowner","hideBg","type","type1","type2","num","cardColor","GetCardColor","cardValue","GetCardValue","numNode","numSp","Sprite","iconSp","icon1_Sp","spriteFrame","pokerDict","newPoker","SubCardValue","temp","substring"],"mappings":"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","file":"sss_winlost_child.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiGame\\sss","sourcesContent":["/*\n UICard01-04 牌局吃到的牌显示\n */\n\nlet app = require(\"app\");\n\ncc.Class({\n\textends: require(\"BasePoker_winlost_child\"),\n\n\tproperties: {\n\n    },\n\n\t// use this for initialization\n\tOnLoad: function () {\n        this.LOGIC_MASK_COLOR = 0xF0;\n        this.LOGIC_MASK_VALUE = 0x0F;\n        this.PokerCard = app.PokerCard();\n\t},\n    ShowSpecData:function(setEnd,playerAll,index){\n        let player = setEnd.posResultList[index];\n        //倍数\n        this.node.getChildByName(\"lb_beiShu\").active = true;\n        let beishu = this.node.getChildByName(\"lb_beiShu\").getComponent(cc.Label);\n\n        beishu.string = player.doubleNum;\n\n        //底分\n        this.node.getChildByName(\"lb_difen\").active = true;\n        let difen = this.node.getChildByName(\"lb_difen\").getComponent(cc.Label);\n        difen.string = player.baseMark;\n        let cardNode = this.node.getChildByName(\"cardList\");\n        if (setEnd.rankeds[index]) {\n            let dunPos = setEnd.rankeds[index][\"dunPos\"];\n            let dunPai1 = cardNode.getChildByName(\"dunPai1\");\n            for (let i = 0; i < dunPai1.children.length; i++) {\n                let card = dunPai1.children[i];\n                this.ShowCard(dunPos[\"first\"][i], card);\n            }\n            let dunPai2 = cardNode.getChildByName(\"dunPai2\");\n            for (let i = 0; i < dunPai2.children.length; i++) {\n                let card = dunPai2.children[i];\n                this.ShowCard(dunPos[\"second\"][i], card);\n            }\n            let dunPai3 = cardNode.getChildByName(\"dunPai3\");\n            for (let i = 0; i < dunPai3.children.length; i++) {\n                let card = dunPai3.children[i];\n                this.ShowCard(dunPos[\"third\"][i], card);\n            }\n            dunPai1.active=true;\n            dunPai2.active=true;\n            dunPai3.active=true;\n        }else{\n            let dunPai1 = cardNode.getChildByName(\"dunPai1\");\n            dunPai1.active=false;\n            let dunPai2 = cardNode.getChildByName(\"dunPai2\");\n            dunPai2.active=false;\n            let dunPai3 = cardNode.getChildByName(\"dunPai3\");\n            dunPai3.active=false;\n        }\n        \n    },\n    ShowCard: function (cardType, node) {\n        // let newPoker = this.PokerCard.SubCardValue(cardType);\n        this.GetPokeCard(cardType, node);\n        if (cardType == 0) {\n            node.getChildByName(\"poker_back\").active = true;\n        } else {\n            node.getChildByName(\"poker_back\").active = false;\n        }\n    },\n    GetPokeCard: function (poker, cardNode, isShowIcon1 = true, isShowLandowner = false, hideBg = false) {\n        if (0 == poker) {\n            cardNode.getChildByName(\"poker_back\").active = true;\n            return;\n        }\n        let type = \"\";\n        let type1 = \"\";\n        let type2 = \"\";\n        let num = \"\";\n        let cardColor = this.GetCardColor(poker);\n        let cardValue = this.GetCardValue(poker);\n        let numNode = cardNode.getChildByName(\"num\");\n        numNode.active = true;\n        if (cardColor == 0) {\n            type = \"bg_diamond1_\";\n            type1 = type + 1;\n            type2 = type + 2;\n            // if (cardValue > 10) {\n            if (cardValue > 10 && cardValue < 14) {\n                type2 = \"bg_red_\" + cardValue;\n                // type1 = \"\";\n                // type2 = \"bg_diamond_\" + cardValue;\n            }\n            num = \"red_\" + cardValue;\n        } else if (cardColor == 16) {\n            type = \"bg_club1_\";\n            type1 = type + 1;\n            type2 = type + 2;\n            // if (cardValue > 10) {\n            if (cardValue > 10 && cardValue < 14) {\n                type2 = \"bg_blue_\" + cardValue;\n                // type1 = \"\";\n                // type2 = \"bg_club_\" + cardValue;\n            }\n            num = \"black_\" + cardValue;\n        } else if (cardColor == 32) {\n            type = \"bg_heart1_\";\n            type1 = type + 1;\n            type2 = type + 2;\n            // if (cardValue > 10) {\n            if (cardValue > 10 && cardValue < 14) {\n                type2 = \"bg_red_\" + cardValue;\n                // type1 = \"\";\n                // type2 = \"bg_heart_\" + cardValue;\n            }\n            num = \"red_\" + cardValue;\n        } else if (cardColor == 48) {\n            type = \"bg_spade1_\";\n            type1 = type + 1;\n            type2 = type + 2;\n            // if (cardValue > 10) {\n            if (cardValue > 10 && cardValue < 14) {\n                type2 = \"bg_blue_\" + cardValue;\n                // type1 = \"\";\n                // type2 = \"bg_spade_\" + cardValue;\n            }\n            num = \"black_\" + cardValue;\n        } else if (cardColor == 64) {//双数小鬼   0x42-0x4e\n            numNode.active = false;//2,3,4,5,6,7,8,9,a\n            if (cardValue % 2 == 0) {//双数小鬼\n                type1 = \"icon_small_king_01\";\n                type2 = \"icon_small_king\";\n            } else if (cardValue % 2 == 1) {//单数大鬼\n                type1 = \"icon_big_king_01\";\n                type2 = \"icon_big_king\";\n            }\n        }\n        let numSp = cardNode.getChildByName(\"num\").getComponent(cc.Sprite);\n        let iconSp = cardNode.getChildByName(\"icon\").getComponent(cc.Sprite);\n        let icon1_Sp = cardNode.getChildByName(\"icon_1\").getComponent(cc.Sprite);\n        /*numSp.spriteFrame = this.pokerAtlas.getSpriteFrame(num);\n        iconSp.spriteFrame = this.pokerAtlas.getSpriteFrame(type1);\n        icon1_Sp.spriteFrame = this.pokerAtlas.getSpriteFrame(type2);*/\n        numSp.spriteFrame = this.PokerCard.pokerDict[num];\n        iconSp.spriteFrame = this.PokerCard.pokerDict[type1];\n        icon1_Sp.spriteFrame = this.PokerCard.pokerDict[type2];\n        if (hideBg) {\n            cardNode.getChildByName(\"poker_back\").active = false;\n        }\n    },\n    //获取牌值\n    GetCardValue:function(poker) { \n        let newPoker = this.PokerCard.SubCardValue(poker);\n        if(newPoker == '0x41'){\n            return 99;\n        }\n        else if(newPoker == '0x42'){\n            return 100;\n        }\n        return newPoker&this.LOGIC_MASK_VALUE; \n    },\n    \n    //获取花色\n    GetCardColor:function(poker) { \n        let newPoker = this.PokerCard.SubCardValue(poker);\n        return newPoker&this.LOGIC_MASK_COLOR;\n    },\n    SubCardValue:function(poker){\n        let temp = \"\";\n        if(poker.length > 4){\n            temp = poker;\n            temp = temp.substring(0, temp.length - 1);\n        }\n        else{\n            temp = poker;\n        }\n\n        return temp;\n    },\n});\n"]}