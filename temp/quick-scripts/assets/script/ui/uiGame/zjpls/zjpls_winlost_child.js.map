{"version":3,"sources":["zjpls_winlost_child.js"],"names":["app","require","cc","Class","extends","properties","cardPrefab","Prefab","OnLoad","LOGIC_MASK_COLOR","LOGIC_MASK_VALUE","PokerCard","ShowSpecData","setEnd","playerAll","index","player","posResultList","node","getChildByName","active","difen","getComponent","Label","string","baseMark","cardNode","rankeds","dunPos","special","specialNode","imagePath","that","loader","loadRes","SpriteFrame","error","spriteFrame","ErrLog","Sprite","zjid","pid","allCards","pokers","first","concat","second","third","tonghuas","SanTongHua","i","length","j","push","children","child","name","card","instantiate","addChild","ShowCard","cardType","newPoker","SubCardValue","GetPokeCard","gui","GetGuiPai","poker","indexOf","tonghua","GetSameColor","bInList","CheckPokerInList","sort","a","b","JoinGuiPia","len","guipai","ten","parseInt","tagCard","sameColorList","pokerColor","GetCardColor","tagCardColor","GetCardValue","list","item","pos"],"mappings":"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","file":"zjpls_winlost_child.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiGame\\zjpls","sourcesContent":["/*\n UICard01-04 牌局吃到的牌显示\n */\n\nlet app = require(\"app\");\n\ncc.Class({\n\textends: require(\"BasePoker_winlost_child\"),\n\n\tproperties: {\n        cardPrefab:cc.Prefab,\n    },\n\n\t// use this for initialization\n\tOnLoad: function () {\n        this.LOGIC_MASK_COLOR = 0xF0;\n        this.LOGIC_MASK_VALUE = 0x0F;\n        this.PokerCard = app.PokerCard();\n\t},\n    ShowSpecData:function(setEnd,playerAll,index){\n        let player = setEnd.posResultList[index];\n        //倍数\n        //this.node.getChildByName(\"lb_beiShu\").active = true;\n        //let beishu = this.node.getChildByName(\"lb_beiShu\").getComponent(cc.Label);\n\n        //beishu.string = player.doubleNum;\n\n        //底分\n        this.node.getChildByName(\"lb_difen\").active = true;\n        let difen = this.node.getChildByName(\"lb_difen\").getComponent(cc.Label);\n        difen.string = player.baseMark;\n\n\n        //显示底牌\n        let cardNode=this.node.getChildByName('card');\n        let rankeds=setEnd.rankeds[index];\n        let dunPos = rankeds.dunPos;\n        let special = rankeds.special;\n        if(special != -1){\n            //显示特殊牌型\n            let specialNode = cardNode.getChildByName('special_card');\n            specialNode.active = true;\n            let imagePath = \"texture/game/zjpls/special/\"+special;\n            //加载图片精灵\n            let that = this;\n            cc.loader.loadRes(imagePath, cc.SpriteFrame, function (error, spriteFrame) {\n                if(error){\n                    that.ErrLog(\"ShowMap imagePath(%s) loader error:%s\", imagePath, error);\n                    return\n                }\n                specialNode.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n            });\n        }\n\n        if(setEnd.zjid == player.pid){\n            cardNode.getChildByName('zhuangjia').active = true;\n        }\n        let allCards = [];\n        if(special == 85 || special == 95){\n            let pokers = dunPos.first.concat(dunPos.second,dunPos.third);\n            let tonghuas = this.SanTongHua(pokers);\n            for(let i = 0; i < tonghuas.length; i++){\n                for(let j = 0; j < tonghuas[i].length; j++){\n                    allCards.push(tonghuas[i][j]);\n                }\n            }\n        }else{\n            allCards = dunPos.first.concat(dunPos.second,dunPos.third);\n        }\n        for(let j = 0; j < cardNode.children.length; j++){\n            let child = cardNode.children[j];\n            if(child.name == 'zhuangjia' || child.name == 'beishu' || child.name == 'special_card'){\n                continue;\n            } \n            if(!child.getChildByName(\"cardPrefab\")){\n                let card = cc.instantiate(this.cardPrefab);\n                child.addChild(card);\n                this.ShowCard(allCards[j], card);\n            }else{\n                let card = child.getChildByName(\"cardPrefab\");\n                this.ShowCard(allCards[j], card);\n            }\n        }        \n    },\n    ShowCard:function(cardType, node){\n        let newPoker = this.PokerCard.SubCardValue(cardType);\n        this.PokerCard.GetPokeCard(newPoker, node);\n        node.getChildByName(\"poker_back\").active = false;\n    },\n\n    SanTongHua:function(pokers){\n        let gui = this.GetGuiPai(pokers);\n        let tonghuas = [];\n        for(let i = 0; i < pokers.length; i++){\n            let poker = pokers[i];\n            if(gui.indexOf(poker) != -1) continue;\n            let tonghua = this.GetSameColor(pokers, poker);\n            let bInList = this.CheckPokerInList(tonghuas, poker);\n            if(tonghua.length >= 5 && !bInList){\n                tonghuas[tonghuas.length] = tonghua;\n            }\n            else if(tonghua.length < 5 && !bInList){\n                tonghuas[tonghuas.length] = tonghua;\n            }\n        }\n        \n        tonghuas.sort(function(a, b){\n            return a.length - b.length;\n        });\n\n        let JoinGuiPia = function(tonghua, gui, len){\n            if(tonghua.length == len) return;\n            for(let i = 0; i < gui.length; i++){\n                if(gui[i] == 'undefined') continue;\n                tonghua.push(gui[i]);\n                gui[i] = 'undefined';\n                if(tonghua.length == len){\n                    break;\n                }\n            }\n        }\n\n        if(gui.length){\n            JoinGuiPia(tonghuas[0], gui, 3);\n            JoinGuiPia(tonghuas[1], gui, 5);\n            JoinGuiPia(tonghuas[2], gui, 5);\n        }\n\n        return tonghuas;\n    },\n    GetGuiPai:function(pokers){\n        let guipai = [];\n        for(let i = 0; i < pokers.length; i++){\n            let poker = pokers[i];\n            let newPoker = this.PokerCard.SubCardValue(poker);\n            let ten = parseInt(newPoker,16);\n            if(ten >= 65){\n                guipai.push(poker);\n            }\n        }\n        return guipai;\n    },\n\n    //获取同一花色\n    GetSameColor:function(pokers, tagCard) { \n        let sameColorList = [];\n        for (let i = 0; i < pokers.length; i++) {\n            let poker = pokers[i];\n            let pokerColor = this.GetCardColor(poker);\n            let tagCardColor = this.GetCardColor(tagCard);\n\n            if (pokerColor == tagCardColor){\n                sameColorList[sameColorList.length] = poker;\n            }\n        }\n        return sameColorList;\n    },\n    //获取牌值\n    GetCardValue:function(poker) { \n        let newPoker = this.PokerCard.SubCardValue(poker);\n        if(newPoker == '0x41'){\n            return 99;\n        }\n        else if(newPoker == '0x42'){\n            return 100;\n        }\n        return newPoker&this.LOGIC_MASK_VALUE; \n    },\n    \n    //获取花色\n    GetCardColor:function(poker) { \n        let newPoker = this.PokerCard.SubCardValue(poker);\n        return newPoker&this.LOGIC_MASK_COLOR;\n    },\n    CheckPokerInList:function(list, tagCard) { \n        if (list.length == 0) return false;\n    \n        let bInList = false;\n        for (let i = 0; i < list.length; i++) {\n            let item = list[i];\n            let pos = item.indexOf(tagCard);\n          \n\n            if (pos >= 0){\n                bInList = true;\n            }\n        }\n        return bInList\n    },\n});\n"]}