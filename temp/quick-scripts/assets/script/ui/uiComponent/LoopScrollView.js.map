{"version":3,"sources":["LoopScrollView.js"],"names":["LoopScrollView","cc","Class","extends","require","properties","ScrollView","CreateChildCount","Integer","Spacing","OnLoad","ScrollEndTypeList","EventType","SCROLL_TO_TOP","SCROLL_TO_BOTTOM","SCROLL_TO_LEFT","SCROLL_TO_RIGHT","ScrollUpdateInterval","scrollDir","passSecond","node","on","ScrollEnded","baseForm","getComponent","OnScrollEnded","RefreshData","dataList","totalDataList","totalCount","length","totalHeight","itemHeight","content","height","totalWidth","itemWidth","width","allChildList","GetAllChildComponentByName","scrollViewChildComponentName","haveCreateCount","createCount","index","userData","pos","v2","itemAnchorY","itemAnchorX","CreateScrollViewChildForm","stopAutoScroll","isScrollToLast","scrollToBottom","scrollToRight","scrollToTop","scrollToLeft","InitScrollData","childComponentName","childFormPrefab","lastContentPosY","lastContentPosX","ClearAllChildComponentByName","vertical","horizontal","ErrLog","data","anchorX","anchorY","view","getChildByName","viewHeight","viewWidth","zorderLv","argument","childFormNode","NewChildFormNode","childFormComponent","OnCreate","addChild","AddChildFormComponent","ShowForm","GetScrollView","GetChildFormPrefab","GetChildHeight","GetChildWidth","GetChildIndex","IndexOf","GetPositionInView","worldPos","parent","convertToWorldSpaceAR","position","viewPos","convertToNodeSpaceAR","OnScrollViewEvent","scrollView","eventType","eventData","SCROLLING","ScrollToIndex","indexOffset","scrollToOffset","ScrollToChild","childIndex","y","x","update","dt","OnCheckReusability","OnCheckVerticalReusability","OnCheckHorizontalReusability","allChildFormList","childCount","limitLeft","limitRight","allChildFormLength","isLeft","newPosX","GetFormProperty","oldUserData","newChildIndex","setPositionX","SetFormProperty","OnShow","limitDown","limitUp","isDown","newPosY","setPositionY","module","exports"],"mappings":"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","file":"LoopScrollView.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiComponent","sourcesContent":["/*\n LoopScrollView scrollview循环滚动(独立于界面系统,可以被所有界面使用的组件)\n */\n\nvar LoopScrollView = cc.Class({\n\n    extends: require(\"BaseComponent\"),\n\n    properties: {\n        ScrollView:cc.ScrollView,\n        \n        CreateChildCount:{\n            \"default\": 16,\n            \"tooltip\":\"创建的子类个数\",\n            \"type\": cc.Integer\n        },\n\n        Spacing:{\n            \"default\": 10,\n            \"tooltip\":\"子类间隔\",\n            \"type\": cc.Integer\n        }\n    },\n\n    OnLoad:function(){\n        //滑动到边界\n        this.ScrollEndTypeList = [\n            cc.ScrollView.EventType.SCROLL_TO_TOP,\n            cc.ScrollView.EventType.SCROLL_TO_BOTTOM,\n            cc.ScrollView.EventType.SCROLL_TO_LEFT,\n            cc.ScrollView.EventType.SCROLL_TO_RIGHT,\n        ];\n\n        //0.2秒检测一次\n        this.ScrollUpdateInterval = 0.1;\n\n        //TODO:BUG OnLoad 会在 InitScrollData之后被调用..所以不能定义初始化变量\n        // //所有数据列表\n        // this.totalDataList = [];\n\n        // //追加的滑动控件子类界面组件名\n        // this.scrollViewChildComponentName = \"\";\n\n        // //物件高\n        // this.itemHeight = 0;\n        // this.itemWidth = 0;\n\n        // //上次更新的content滑动Y坐标\n        // this.lastContentPosY = 0;\n        // this.lastContentPosX = 0;\n\n        // //视口宽高\n        // this.viewHeight = 0;\n        // this.viewWidth = 0;\n\n        // //子界面的锚点\n        // this.itemAnchorX = 0.5;\n        // this.itemAnchorY = 0.5;\n\n        // //滑动方向\n         this.scrollDir = \"\";\n\n        // this.childFormPrefab = null;\n\n        //更新时间开关\n        this.passSecond = 0;\n\n        this.ScrollView.node.on('scroll-ended', this.ScrollEnded, this);\n    },\n\n    ScrollEnded:function(){\n        let baseForm = this.getComponent(\"BaseForm\");\n        baseForm.OnScrollEnded();\n    },\n\n    //------------创建接口------------------\n\n    RefreshData:function(dataList){\n        this.totalDataList = dataList;\n        let totalCount = this.totalDataList.length;\n\n        if(this.scrollDir == \"vertical\"){\n            //设置滑动控件的最大滑动高度\n            let totalHeight = totalCount * (this.itemHeight + this.Spacing) + this.Spacing;\n            this.ScrollView.content.height = totalHeight;\n        }\n        else{\n            //设置滑动控件的最大滑动高度\n            let totalWidth = totalCount * (this.itemWidth + this.Spacing) + this.Spacing;\n            this.ScrollView.content.width = totalWidth;\n        }\n\n        let baseForm = this.getComponent(\"BaseForm\");\n        let allChildList = baseForm.GetAllChildComponentByName(this.scrollViewChildComponentName);\n        let haveCreateCount = allChildList.length;\n\n        //如果创建的子类已经是缓存上限了\n        if(haveCreateCount >= this.CreateChildCount){\n            return\n        }\n\n        let createCount = this.CreateChildCount;\n        //总数没有达到上限\n        if(createCount > totalCount){\n            createCount = totalCount\n        }\n\n        //创建限定个数的子界面\n        for(let index=haveCreateCount; index<createCount; index++){\n            let userData = this.totalDataList[index];\n            let pos = null;\n            if(this.scrollDir == \"vertical\"){\n                pos = cc.v2(0, -this.itemHeight * (1-this.itemAnchorY + index) - this.Spacing * (index + 1));\n            }\n            else{\n                pos = cc.v2(this.itemWidth * (1-this.itemAnchorX + index) + this.Spacing * (index + 1), 0);\n            }\n            this.CreateScrollViewChildForm(index, userData, pos);\n        }\n\n        this.ScrollView.stopAutoScroll();\n\n        if(this.isScrollToLast && haveCreateCount >= createCount){\n            if(this.scrollDir == \"vertical\"){\n                this.ScrollView.scrollToBottom();\n            }\n            else{\n                this.ScrollView.scrollToRight();\n            }\n        }\n        else{\n            if(this.scrollDir == \"vertical\"){\n                this.ScrollView.scrollToTop();\n            }\n            else{\n                this.ScrollView.scrollToLeft();\n            }\n        }\n\n\n    },\n\n    //初始化滑动数据\n    InitScrollData:function(childComponentName, childFormPrefab, dataList, itemHeight=0, isScrollToLast){\n\n        if(!isScrollToLast){\n            isScrollToLast = false;\n        }\n\n        this.isScrollToLast = isScrollToLast;\n        //上次更新的content滑动Y坐标\n        this.lastContentPosY = 0;\n        this.lastContentPosX = 0;\n\n        this.scrollViewChildComponentName = childComponentName;\n        this.childFormPrefab = childFormPrefab;\n\n        this.getComponent(\"BaseForm\").ClearAllChildComponentByName(childComponentName);\n\n        this.totalDataList = dataList;\n        let totalCount = this.totalDataList.length;\n        let createCount = this.CreateChildCount;\n\n        //总是没有达到上限\n        if(createCount > totalCount){\n            createCount = totalCount\n        }\n\n        if(this.ScrollView.vertical){\n            this.scrollDir = \"vertical\";\n        }\n        else if(this.ScrollView.horizontal){\n            this.scrollDir = \"horizontal\";\n        }\n        else{\n            this.ErrLog(\"ScrollView not find scrollDir\");\n            return\n        }\n\n        if(this.scrollDir == \"vertical\"){\n            //有可能高度不是ChildFormPrefab的高度 (如:UICardPack_Child子界面)\n            if(itemHeight){\n                this.itemHeight = itemHeight;\n            }\n            else{\n                this.itemHeight = this.childFormPrefab.data.height;\n                if(!this.itemHeight){\n                    this.ErrLog(\"childFormPrefab not height\");\n                    return\n                }\n            }\n            //设置滑动控件的最大滑动高度\n            let totalHeight = totalCount * (this.itemHeight + this.Spacing) + this.Spacing;\n            this.ScrollView.content.height = totalHeight;\n        }\n        else{\n            //有可能高度不是ChildFormPrefab的高度 (如:UICardPack_Child子界面)\n            if(itemHeight){\n                this.itemWidth = itemHeight;\n            }\n            else{\n                this.itemWidth = this.childFormPrefab.data.width;\n                if(!this.itemWidth){\n                    this.ErrLog(\"childFormPrefab not width\");\n                    return\n                }\n            }\n            //设置滑动控件的最大滑动高度\n            let totalWidth = totalCount * (this.itemWidth + this.Spacing) + this.Spacing;\n            this.ScrollView.content.width = totalWidth;\n        }\n\n        this.itemAnchorX = this.childFormPrefab.data.anchorX;\n        this.itemAnchorY = this.childFormPrefab.data.anchorY;\n\n        let view = this.ScrollView.node.getChildByName(\"view\");\n        this.viewHeight = view.height;\n        this.viewWidth = view.width;\n\n\n        //创建限定个数的子界面\n        for(let index=0; index<createCount; index++){\n            let userData = this.totalDataList[index];\n\n            let pos = null;\n            if(this.scrollDir == \"vertical\"){\n                pos = cc.v2(0, -this.itemHeight * (1-this.itemAnchorY + index) - this.Spacing * (index + 1));\n            }\n            else{\n                pos = cc.v2(this.itemWidth * (1-this.itemAnchorX + index) + this.Spacing * (index + 1), 0);\n            }\n            this.CreateScrollViewChildForm(index, userData, pos);\n        }\n\n        this.ScrollView.stopAutoScroll();\n\n\n        if(this.scrollDir == \"vertical\"){\n            this.ScrollView.scrollToTop();\n        }\n        else{\n            this.ScrollView.scrollToLeft();\n        }\n        //this.Log(\"InitScrollData(%s),(%s),(%s,%s),(%s),(%s)\", childComponentName, this.scrollDir, totalCount, createCount, this.viewHeight, this.itemHeight);\n\n    },\n\n    //创建循环滑动子类界面\n\n    /*\n     区别于CreateChildForm，循环滚动列表提供的特殊接口\n     */\n    CreateScrollViewChildForm:function(index, userData=0, pos=null, zorderLv=0, argument=null){\n\n        let baseForm = this.getComponent(\"BaseForm\");\n        let childFormNode = baseForm.NewChildFormNode(this.scrollViewChildComponentName, this.childFormPrefab)\n        let childFormComponent = childFormNode.getComponent(this.scrollViewChildComponentName);\n        if(!childFormComponent){\n            this.ErrLog(\"CreateChildForm childFormNode not find (%s)\", this.scrollViewChildComponentName);\n            return\n        }\n\n        childFormComponent.OnCreate(baseForm, this.scrollViewChildComponentName, index, userData, pos);\n        this.ScrollView.content.addChild(childFormNode, zorderLv);\n\n        baseForm.AddChildFormComponent(this.scrollViewChildComponentName, childFormComponent);\n        \n        childFormComponent.ShowForm(argument);\n\n        return childFormComponent\n\n    },\n\n\n    //-------------获取借口-------------\n    GetScrollView:function(){\n        return this.ScrollView\n    },\n\n    GetChildFormPrefab:function(){\n        return this.childFormPrefab\n    },\n\n    GetChildHeight:function(){\n        return this.itemHeight\n    },\n\n    GetChildWidth:function(){\n        return this.itemWidth\n    },\n\n    //获取子界面的索引位置\n    GetChildIndex:function(userData){\n        return this.totalDataList.IndexOf(userData)\n    },\n\n    // get item position in scrollview's node space\n    GetPositionInView: function (childFormNode) {\n        //子界面的世界坐标\n        let worldPos = childFormNode.parent.convertToWorldSpaceAR(childFormNode.position);\n        //子界面在滑动界面的坐标\n        let viewPos = this.ScrollView.node.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    },\n\n    //------------点击函数------------------\n\n    //滑动回调\n    OnScrollViewEvent:function(scrollView, eventType, eventData){\n        //如果是滑动,需要检测那些子类已经划出屏幕外\n        if(cc.ScrollView.EventType.SCROLLING == eventType){\n\n        }\n    },\n\n    ScrollToIndex:function(index, indexOffset){\n        this.ScrollView.scrollToOffset(cc.v2((index)*this.childFormPrefab.data.width + index*indexOffset, 0));\n    },\n\n    //滑动到指定子类 TODO:有BUG可能滑动了多个页面导致循环子类不能更新显示\n    ScrollToChild:function(userData){\n        let childIndex = this.totalDataList.IndexOf(userData);\n        if(childIndex < 0){\n            this.ErrLog(\"ScrollToChild(%s) not find\", userData);\n            return\n        }\n        if(this.scrollDir == \"vertical\"){\n            this.ScrollView.content.y = (childIndex-1)*this.itemHeight;\n            this.ScrollView.scrollToOffset(cc.v2(0, childIndex*(this.itemHeight + this.Spacing)), 0.5);\n        }\n        else{\n            this.ScrollView.content.x = (childIndex-1)*this.itemWidth;\n            this.ScrollView.scrollToOffset(cc.v2(0, childIndex*(this.itemWidth + this.Spacing)), 0.5);\n        }\n    },\n\n    //没帧回掉\n    update: function (dt) {\n\n        this.passSecond += dt;\n        if(this.passSecond >= this.ScrollUpdateInterval){\n            this.OnCheckReusability();\n            this.passSecond = 0;\n        }\n    },\n\n\n    OnCheckReusability:function(){\n        \n        if(this.scrollDir == \"vertical\"){\n            this.OnCheckVerticalReusability();\n        }\n        else if(this.scrollDir == \"horizontal\"){\n            this.OnCheckHorizontalReusability();\n        }\n        else if(this.scrollDir){\n            this.ErrLog(\"scrollDir:%s\", this.scrollDir)\n        }\n\n    },\n\n    //水平方向\n    OnCheckHorizontalReusability:function(){\n        //没有滑动变化\n        if(this.ScrollView.content.x == this.lastContentPosX){\n            return\n        }\n        let baseForm = this.getComponent(\"BaseForm\");\n\n        let allChildFormList = baseForm.GetAllChildComponentByName(this.scrollViewChildComponentName);\n        let childCount = allChildFormList.length;\n\n\n        //视口上边界Y坐标\n        let limitLeft = -this.viewWidth/2;\n        //视口下边界Y坐标\n        var limitRight = this.viewWidth/2;\n\n        //创建的子控件总长度之和\n        let allChildFormLength = (this.itemWidth + this.Spacing) * childCount;\n\n        //判断滑动方向\n        let isLeft = this.ScrollView.content.x < this.lastContentPosX;\n\n        for (let index = 0; index < childCount; index++) {\n\n            let childFormComponent = allChildFormList[index];\n            let childFormNode = childFormComponent.node;\n            let viewPos = this.GetPositionInView(childFormNode);\n\n            if(isLeft) {\n                //如果是需要检测的子界面坐标加上半高 < 下边界=>既子界面完全划出视野访问\n                if (viewPos.x + this.itemWidth*(1-this.itemAnchorX) < limitLeft){\n\n                    let newPosX = childFormNode.x + allChildFormLength;\n\n                    //this.ErrLog(\"Left (%s) newPosX:%s,%s\", index, newPosX, childFormNode.x);\n                    //如果计算出的新坐标已经在顶层可见了,则设置子界面从底层到顶层\n                    if(newPosX < this.ScrollView.content.width){\n\n                        let childIndex = childFormComponent.GetFormProperty(\"ChildIndex\");\n                        let oldUserData = childFormComponent.GetFormProperty(\"UserData\");\n\n                        let newChildIndex = childIndex + childCount;\n                        let userData = this.totalDataList[newChildIndex];\n                        \n                        if(userData){\n                            childFormNode.setPositionX(newPosX);\n                            childFormComponent.SetFormProperty(\"UserData\", userData);\n                            childFormComponent.SetFormProperty(\"ChildIndex\", newChildIndex);\n                            childFormComponent.OnShow();\n                        }\n                        else{\n                            this.ErrLog(\"Left childIndex(%s,%s)=>(%s,%s)\", childIndex, oldUserData, newChildIndex, userData);\n                        }\n\n                    }\n                }\n            }\n            else {\n                if (viewPos.x - this.itemWidth*this.itemAnchorX > limitRight){\n                    \n                    let newPosX = childFormNode.x - allChildFormLength;\n\n                    //this.ErrLog(\"Right (%s) newPosX:%s,%s\", index, newPosX, childFormNode.x);\n\n                    //如果计算出的新坐标底层可见了,则设置子界面从顶层到底层\n                    if(newPosX > 0){\n                        let childIndex = childFormComponent.GetFormProperty(\"ChildIndex\");\n                        let oldUserData = childFormComponent.GetFormProperty(\"UserData\");\n\n                        let newChildIndex = childIndex - childCount;\n                        let userData = this.totalDataList[newChildIndex];\n                        \n                        if(userData){\n                            childFormNode.setPositionX(newPosX);\n                            childFormComponent.SetFormProperty(\"UserData\", userData);\n                            childFormComponent.SetFormProperty(\"ChildIndex\", newChildIndex);\n                            childFormComponent.OnShow();\n                        }\n                        else{\n                            this.ErrLog(\"Right childIndex(%s,%s)=>(%s,%s)\", childIndex, oldUserData, newChildIndex, userData);\n                        }\n                        \n                    }\n                }\n            }\n        }\n        this.lastContentPosX = this.ScrollView.content.x;\n    },\n\n    //垂直方向\n    OnCheckVerticalReusability:function(){\n\n        //没有滑动变化\n        if(this.ScrollView.content.y == this.lastContentPosY){\n            return\n        }\n        let baseForm = this.getComponent(\"BaseForm\");\n        let allChildFormList = baseForm.GetAllChildComponentByName(this.scrollViewChildComponentName);\n        let childCount = allChildFormList.length;\n\n\n        //视口上边界Y坐标\n        let limitDown = -this.viewHeight/2;\n        //视口下边界Y坐标\n        var limitUp = this.viewHeight/2;\n\n        //创建的子控件总长度之和\n        let allChildFormLength = (this.itemHeight + this.Spacing) * childCount;\n\n        //判断滑动方向\n        let isDown = this.ScrollView.content.y < this.lastContentPosY;\n\n        for (let index = 0; index < childCount; index++) {\n\n            let childFormComponent = allChildFormList[index];\n            let childFormNode = childFormComponent.node;\n            let viewPos = this.GetPositionInView(childFormNode);\n\n            //this.Log(\"index:%s,%s\", index, viewPos);\n\n            if(isDown) {\n                //如果是需要检测的子界面坐标加上半高 < 下边界=>既子界面完全划出视野访问\n                if (viewPos.y + this.itemHeight*(1-this.itemAnchorY) < limitDown){\n\n                    let newPosY = childFormNode.y + allChildFormLength;\n                    //this.ErrLog(\"Down (%s) newPosY:%s,%s\", index, newPosY, childFormNode.y);\n\n                    //如果计算出的新坐标已经在顶层可见了,则设置子界面从底层到顶层\n                    if(newPosY < 0){\n\n                        let childIndex = childFormComponent.GetFormProperty(\"ChildIndex\");\n                        let oldUserData = childFormComponent.GetFormProperty(\"UserData\");\n\n                        let newChildIndex = childIndex - childCount;\n                        let userData = this.totalDataList[newChildIndex];\n                        \n                        if(userData){\n                            childFormNode.setPositionY(newPosY);\n                            childFormComponent.SetFormProperty(\"UserData\", userData);\n                            childFormComponent.SetFormProperty(\"ChildIndex\", newChildIndex);\n                            childFormComponent.OnShow();\n                        }\n                        else{\n                            this.ErrLog(\"Down childIndex(%s,%s)=>(%s,%s)\", childIndex, oldUserData, newChildIndex, userData);\n                        }\n                    }\n                }\n            }\n            else {\n                if (viewPos.y - this.itemHeight*this.itemAnchorY > limitUp){\n                    \n                    let newPosY = childFormNode.y - allChildFormLength;\n                    //this.ErrLog(\"UP (%s) newPosY:%s,%s\", index, newPosY, childFormNode.y);\n\n                    //如果计算出的新坐标底层可见了,则设置子界面从顶层到底层\n                    if(newPosY > -this.ScrollView.content.height){\n                        \n                        let childIndex = childFormComponent.GetFormProperty(\"ChildIndex\");\n                        let oldUserData = childFormComponent.GetFormProperty(\"UserData\");\n\n                        let newChildIndex = childIndex + childCount;\n                        let userData = this.totalDataList[newChildIndex];\n                        \n                        if(userData){\n                            childFormNode.setPositionY(newPosY);\n                            childFormComponent.SetFormProperty(\"UserData\", userData);\n                            childFormComponent.SetFormProperty(\"ChildIndex\", newChildIndex);\n                            childFormComponent.OnShow();\n                        }\n                        else{\n                            this.ErrLog(\"Up childIndex(%s,%s)=>(%s,%s)\", childIndex, oldUserData, newChildIndex, userData);\n                        }\n                    }\n                }\n            }\n        }\n        this.lastContentPosY = this.ScrollView.content.y;\n    },\n})\n\nmodule.exports = LoopScrollView;"]}