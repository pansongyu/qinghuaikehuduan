{"version":3,"sources":["PlayerRankManager.js"],"names":["app","require","PlayerRankManager","BaseClass","extend","Init","JS_Name","NetManager","ShareDefine","RegNetPack","OnPack_InitRankInfo","OnReload","Log","playerWinSetRankInfo","playerIntegralRankInfo","isLoadWinSetRank","isLoadIntegralRank","myWinSetRankID","myIntegralRankID","serverPack","rankType","rankPlayerInfoList","count","length","clientHeroID","HeroManager","GetHeroID","rankInfo","clientRankID","heroImageDict","index","rankPlayerInfo","pid","RankType_WinSetCount","RankType_Integral","ErrLog","WeChatManager","InitHeroHeadImageByDict","Client","OnEvent","GetPlayerWinSetRankInfo","SendInitRankInfo","GetMyWinSetRankID","GetPlayerIntegralRankInfo","GetMyIntegralRankID","SendPack","g_PlayerRankManager","exports","GetModel"],"mappings":"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","file":"PlayerRankManager.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\dbmanager\\PlayerRank","sourcesContent":["/*\n    玩家排行榜模块\n*/\nvar app = require('app');\n\nvar PlayerRankManager = app.BaseClass.extend({\n\n    Init:function(){\n        this.JS_Name = \"PlayerRankManager\";\n\n        this.NetManager = app.NetManager();\n        this.ShareDefine = app.ShareDefine();\n\n\t    this.NetManager.RegNetPack(\"rank.C2227InitRankInfo\", this.OnPack_InitRankInfo, this);\n\n\t    this.OnReload();\n\n        this.Log(\"Init\");\n    },\n\n    //切换账号\n\tOnReload:function(){\n\t    //玩家胜局排版数据\n\t    this.playerWinSetRankInfo = {};\n\t    //玩家战绩积分排行\n\t    this.playerIntegralRankInfo = { };\n\n\t\tthis.isLoadWinSetRank = false;\n\t\tthis.isLoadIntegralRank = false;\n\n\t    //我的排名\n\t    this.myWinSetRankID = 0;\n\t\t//我的排名\n        this.myIntegralRankID = 0;\n    },\n\n    //------------封包函数------------------\n\n\t//服务器推送初始化\n\tOnPack_InitRankInfo:function(serverPack){\n\n\t\tlet rankType = serverPack[\"rankType\"];\n\t\tlet rankPlayerInfoList = serverPack[\"rankPlayerInfoList\"];\n\t\tlet count = rankPlayerInfoList.length;\n\n\t\tlet clientHeroID = app.HeroManager().GetHeroID();\n\n\t\tlet rankInfo = {};\n\t\tlet clientRankID = 0;\n\n\t\tlet heroImageDict = {};\n\n\t\tfor(let index=0; index<count; index++){\n\t\t\tlet rankPlayerInfo = rankPlayerInfoList[index];\n\t\t\trankInfo[rankPlayerInfo[\"rankID\"]] = rankPlayerInfo;\n\t\t\tlet pid = rankPlayerInfo[\"pid\"];\n\t\t\tif(clientHeroID == pid){\n\t\t\t\tclientRankID = rankPlayerInfo[\"rankID\"];\n\t\t\t}\n\t\t\theroImageDict[pid] = rankPlayerInfo[\"headImageUrl\"];\n\t\t}\n\n\t\tif(rankType == this.ShareDefine.RankType_WinSetCount){\n\t\t\tthis.playerWinSetRankInfo = rankInfo;\n\t\t\tthis.myWinSetRankID = clientRankID;\n\t\t\tthis.isLoadWinSetRank = true;\n\t\t}\n\t\telse if(rankType == this.ShareDefine.RankType_Integral){\n\t\t\tthis.playerIntegralRankInfo = rankInfo;\n\t\t\tthis.myIntegralRankID = clientRankID;\n\t\t\tthis.isLoadIntegralRank = true;\n\t\t}\n\t\telse{\n\t\t\tthis.ErrLog(\"OnInitData not find:%s\", rankType);\n\t\t\treturn;\n\t\t}\n\n\t\tapp.WeChatManager().InitHeroHeadImageByDict(heroImageDict);\n\n\t\tapp.Client.OnEvent(\"InitPlayerRank\", {\"RankType\":rankType});\n\t},\n\n    //--------------获取接口------------------------\n\t//获取玩家的胜局排行字典\n    GetPlayerWinSetRankInfo:function(){\n\t    this.SendInitRankInfo(this.ShareDefine.RankType_WinSetCount);\n    \treturn this.playerWinSetRankInfo\n    },\n\n    //获取客户端自身胜局排名\n    GetMyWinSetRankID:function(){\n        return this.myWinSetRankID\n    },\n\n\t//获取玩家的积分排行字典\n    GetPlayerIntegralRankInfo:function(){\n\t    this.SendInitRankInfo(this.ShareDefine.RankType_Integral);\n        return this.playerIntegralRankInfo\n    },\n\n    //获取客户端自身积分排名\n\tGetMyIntegralRankID:function(){\n        return this.myIntegralRankID\n    },\n\n\n    //---------------发包接口------------------------\n\t//自动初始化管理器数据封包\n\tSendInitRankInfo:function(rankType){\n\n\t\tif(rankType == this.ShareDefine.RankType_WinSetCount){\n\t\t\t//如果请求的数据已经初始化过了\n\t\t\tif(this.isLoadWinSetRank){\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\telse if(rankType == this.ShareDefine.RankType_Integral){\n\t\t\t//如果请求的数据已经初始化过了\n\t\t\tif(this.isLoadIntegralRank){\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\tthis.NetManager.SendPack(\"rank.C2227InitRankInfo\", {\"rankType\":rankType});\n\t},\n});\n\n\nvar g_PlayerRankManager = null;\n\n/**\n * 绑定模块外部方法\n */\nexports.GetModel = function(){\n    if(!g_PlayerRankManager){\n        g_PlayerRankManager = new PlayerRankManager();\n    }\n    return g_PlayerRankManager;\n}"]}