{"version":3,"sources":["XLAppManager.js"],"names":["app","require","XLAppManager","BaseClass","extend","Init","JS_Name","ShareDefine","HeroAccountManager","NetManager","LocalDataManager","ComTool","dataInfo","OnReload","Login","XlOpenID","GetConfigProperty","SendLoginByXLAuthorization","NativeManager","CallToNative","CheckLoginBySDK","accessTokenInfo","sdkToken","sdkAccountID","ErrLog","GetSDKProperty","property","hasOwnProperty","GetSDK","OnNativeNotifyXLLogin","dataDict","errCode","code","IsDoLogining","GetXlUserInfo","SysLog","setTimeout","SysNotifyManager","ShowSysMsg","console","log","GetOpenIDUrl","SendHttpRequest","serverUrl","argString","requestType","sendPack","url","join","dataStr","JSON","stringify","httpRequest","XMLHttpRequest","timeout","open","setRequestHeader","that","onerror","OnConnectHttpFail","readyState","status","ontimeout","onreadystatechange","OnReceiveHttpPack","responseText","send","httpResText","serverPack","parse","openID","error","SendPack","success","ServerTimeManager","InitLoginData","WorldInfoManager","accountID","success2","SetConfigProperty","g_XLAppManager","exports","GetModel"],"mappings":"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","file":"XLAppManager.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\sdk","sourcesContent":["\n/**\n * Created by guoliangxuan on 2017/3/16.\n */\n/**\n * XLAppManager.js 闲聊appSDK.\n */\nvar app = require('app');\n\nvar XLAppManager = app.BaseClass.extend({\n    Init:function() {\n        this.JS_Name = \"XLAppManager\";\n        this.ShareDefine = app.ShareDefine();\n        this.HeroAccountManager = app.HeroAccountManager();\n        this.NetManager = app.NetManager();\n        this.LocalDataManager = app.LocalDataManager();\n        this.ComTool = app.ComTool();\n\t    this.dataInfo = {};\n    },\n\n\tOnReload:function(){\n\t},\n\n\t//------------调用接口---------------\n\t//微信授权\n\tLogin:function(){\n\t\t//如果本地缓存了accessToken\n\t\tlet XlOpenID = this.LocalDataManager.GetConfigProperty(\"Account\", \"XlOpenID\");\n\t\tif(XlOpenID){\n\t\t\tthis.SendLoginByXLAuthorization(XlOpenID);\n\t\t}\n\t\telse{\n\t\t\tapp.NativeManager().CallToNative(\"OnXLLogin\", []);\n\t\t}\n\n\t},\n\n\t//检查登录是否是短线重登\n\tCheckLoginBySDK:function(){\n\t\t//如果本地缓存了accessToken\n\t\tlet accessTokenInfo = this.LocalDataManager.GetConfigProperty(\"Account\", \"XLAccessTokenInfo\");\n\t\tlet sdkToken = \"\";\n\t\tlet sdkAccountID = 0;\n\t\t//直接登录服务器\n\t\tif(accessTokenInfo){\n\t\t\tsdkToken = accessTokenInfo[\"SDKToken\"];\n\t\t\tsdkAccountID = accessTokenInfo[\"AccountID\"];\n\t\t}\n\n\t\tif(sdkAccountID && sdkToken){\n\t\t\tthis.ErrLog(\"CheckLoginBySDK sdkaccountid and sdktoken have\");\n\t\t\treturn true;\n\t\t}\n\t\tthis.ErrLog(\"CheckLoginBySDK sdkaccountid and sdktoken not have\");\n\t\treturn false;\n\t},\n\t//----------------获取接口------------------------\n\n\tGetSDKProperty:function(property){\n\t\tif(!this.dataInfo.hasOwnProperty(property)){\n\t\t\tthis.ErrLog(\"GetSDKProperty not find property:%s\", property);\n\t\t\treturn\n\t\t}\n\t\treturn this.dataInfo[property];\n\t},\n\n\tGetSDK:function(){\n\t\treturn {};\n\t},\n\n\t//--------------回调接口-----------------------------\n\n    //闲聊登录\n\tOnNativeNotifyXLLogin:function(dataDict){\n        let errCode = dataDict[\"ErrCode\"];\n\n\t\t//0:成功\n\t\t//-1:普通错误类型,\n\t\t//-2:用户点击取消并返回\n\t\t//-3:发送失败\n\t\t//-4:授权失败\n\n\t\tif(errCode == 0){\n\t\t\tthis.dataInfo = dataDict;\n\t\t\tlet code = this.dataInfo[\"Code\"];\n\t\t\tif(!code){\n\t\t\t\tthis.ErrLog(\"SendLoginByXLAuthorization not find Code:\", this.dataInfo);\n\t\t\t\tthis.HeroAccountManager.IsDoLogining(false);\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.GetXlUserInfo(code);\n\t\t\t//this.SendLoginByXLAuthorization(code);\n\t\t}\n\t\telse if(errCode == -2){\n\t\t\tthis.SysLog(\"OnNativeNotifyWXLogin Cancel\");\n\t\t\tsetTimeout(function(){\n\t\t\t\tapp.SysNotifyManager().ShowSysMsg(\"CodeErrorMsg\", [\"闲聊授权失败\"]);\n\t\t\t},100);\n\t\t\t\n\t\t\tthis.HeroAccountManager.IsDoLogining(false);\n\t\t}\n\t\telse{\n\t\t\tthis.ErrLog(\"OnNativeNotifyWXLogin dataDict:\", dataDict);\n\t\t\tsetTimeout(function(){\n\t\t\t\tapp.SysNotifyManager().ShowSysMsg(\"CodeErrorMsg\", [\"闲聊授权失败\"]);\n\t\t\t},100);\n\t\t\t\n\t\t\tthis.HeroAccountManager.IsDoLogining(false);\n\t\t}\n\n    },\n\n    GetXlUserInfo:function(code){\n    \tconsole.log(\"闲聊登录获取玩家信息:code==\" + code);\n    \t//获取access Url\n    \tthis.GetOpenIDUrl = \"http://code.qicaiqh.com/qinghuaiXL.php?code=\"+code;\n        this.SendHttpRequest(this.GetOpenIDUrl,\"\", \"GET\",{});\n    },\n\n    SendHttpRequest:function(serverUrl, argString, requestType, sendPack){\n\t\t// app.NetRequest().SendHttpRequest(serverUrl, argString, requestType, sendPack, 2000, \n        //     this.OnReceiveHttpPack.bind(this), \n        //     this.OnConnectHttpFail.bind(this),\n        //     null,\n        //     this.OnConnectHttpFail.bind(this),\n        // );\n        var url = [serverUrl, argString].join(\"\")\n\n        var dataStr = JSON.stringify(sendPack);\n\n        //每次都实例化一个，否则会引起请求结束，实例被释放了\n        var httpRequest = new XMLHttpRequest();\n\n        httpRequest.timeout = 2000;\n\n\n        httpRequest.open(requestType, url, true);\n        //服务器json解码\n        httpRequest.setRequestHeader(\"Content-Type\", \"application/json\");\n        var that = this;\n        httpRequest.onerror = function(){\n            that.ErrLog(\"httpRequest.error:%s\", url);\n            that.OnConnectHttpFail(serverUrl, httpRequest.readyState, httpRequest.status);\n        };\n        httpRequest.ontimeout = function(){\n            \n        };\n        httpRequest.onreadystatechange = function(){\n            //执行成功\n            if (httpRequest.status == 200){\n                if(httpRequest.readyState == 4){\n                    that.OnReceiveHttpPack(serverUrl, httpRequest.responseText);\n                }\n            }\n            else{\n                that.OnConnectHttpFail(serverUrl, httpRequest.readyState, httpRequest.status);\n                that.ErrLog(\"onreadystatechange(%s,%s)\", httpRequest.readyState, httpRequest.status);\n            }\n        };\n        httpRequest.send(dataStr);\n\n    },\n    OnReceiveHttpPack:function(serverUrl, httpResText){\n        try{\n        \tconsole.log(\"xllogin OnReceiveHttpPack = \" + httpResText);\n            let serverPack = JSON.parse(httpResText);\n            if(serverPack[\"err_code\"]==0){\n            \tlet openID=serverPack['data']['openId'];\n            \tthis.SendLoginByXLAuthorization(openID);\n            }\n        }\n        catch (error){\n            \n        }\n    },\n    OnConnectHttpFail:function(serverUrl, readyState, status){\n        \n    },\n\n\n    //----------------发包接口------------------------\n\t//发送授权登录\n    SendLoginByXLAuthorization:function(XlOpenID){\n        //openID发送给服务端\n        let that=this;\n        app['XlOpenID']=XlOpenID;\n        this.NetManager.SendPack(\"base.C1008LoginXL\", {\"xlUnionid\":XlOpenID},function(success){\n            app['XlOpenID']=\"\";\n            app.ServerTimeManager().InitLoginData(success);\n\t\t\tapp.WorldInfoManager().InitLoginData(success);\n            that.NetManager.SendPack(\"base.C1006RoleLogin\",{\"accountID\":success.accountID},function(success2){\n            \tthat.LocalDataManager.SetConfigProperty(\"Account\", \"XlOpenID\",XlOpenID);\n                //自动登录大厅\n            },function(error){\n            });\n\n        },function(error){\n            that.LocalDataManager.SetConfigProperty(\"Account\", \"XlOpenID\",\"\");\n        });\n    },\n});\n\n\nvar g_XLAppManager = null;\n\n/**\n * 绑定模块外部方法\n */\nexports.GetModel = function(){\n    if(!g_XLAppManager){\n        g_XLAppManager = new XLAppManager();\n    }\n    return g_XLAppManager;\n};\n"]}