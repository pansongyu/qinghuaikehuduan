{"version":3,"sources":["LineAppManager.js"],"names":["app","require","LineAppManager","BaseClass","extend","Init","JS_Name","ShareDefine","SysDataManager","HeroAccountManager","NetManager","ControlManager","HeroManager","SysNotifyManager","LocalDataManager","dataInfo","Log","OnReload","GetSDKProperty","property","hasOwnProperty","ErrLog","Login","accessTokenInfo","GetConfigProperty","accessToken","sdkAccountID","AccountType","SDKType_LineApp","console","log","SendLoginByLine","NativeManager","CallToNative","OnNativeNotifyLineLogin","headImgUrl","nickName","userId","error","LoginAccountBySDK","g_LineAppManager","exports","GetModel"],"mappings":"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","file":"LineAppManager.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\sdk","sourcesContent":["/*\n\t  LineAppManager.js   类似微信的聊天软件sdk\n */\nvar app = require('app');\n\nvar LineAppManager = app.BaseClass.extend({\n\n\tInit: function () {\n\t\tthis.JS_Name = \"LineAppManager\";\n\n\t\tthis.ShareDefine = app.ShareDefine();\n\t\tthis.SysDataManager = app.SysDataManager();\n\t\tthis.HeroAccountManager = app.HeroAccountManager();\n\t\tthis.NetManager = app.NetManager();\n\t\tthis.ControlManager = app.ControlManager();\n\t\tthis.HeroManager = app.HeroManager();\n\t\tthis.SysNotifyManager = app.SysNotifyManager();\n\t\tthis.LocalDataManager = app.LocalDataManager();\n\n\n\t\t// app.Client.RegEvent(\"PlayerLoginOK\", this.OnEvent_LinePlayerLoginOK, this);\n\n\t\tthis.dataInfo = {};\n\n\t\t//玩家第3方头像spriteFrame缓存字典\n\t\t//{heroID:{\"HeadImageUrl\":\"XX\",\"SpriteFrame\":null}}\n\t\t// this.heroHeadSpriteFrame = {};\n\n\t\tthis.Log(\"Init\");\n\t},\n\n\tOnReload: function () {\n\t\t//这里不能reload，不然会导致登录不了，故直接return\n\t\treturn;\n\t},\n\n\tGetSDKProperty: function (property) {\n\t\tif (!this.dataInfo.hasOwnProperty(property)) {\n\t\t\tthis.ErrLog(\"GetSDKProperty not find property:%s\", property);\n\t\t\treturn\n\t\t}\n\n\t\treturn this.dataInfo[property];\n\t},\n\n\t//---------------授权接口--------------------\n\n\t// Line授权\n\tLogin: function () {\n\t\t// 如果本地缓存了accessToken\n\t\tlet accessTokenInfo = this.LocalDataManager.GetConfigProperty(\"Account\", \"AccessTokenInfo\");\n\t\tlet accessToken = \"\";\n\t\tlet sdkAccountID = 0;\n\t\tlet AccountType = 0;\n\t\t// 直接登录服务器\n\t\tif (accessTokenInfo) {\n\t\t\tsdkAccountID = accessTokenInfo[\"userId\"];\n\t\t\taccessToken = accessTokenInfo[\"accessToken\"];\n\t\t\tAccountType = accessTokenInfo[\"AccountType\"];\n\t\t}\n\t\tthis.dataInfo = accessTokenInfo;\n\t\tif (sdkAccountID && AccountType == this.ShareDefine.SDKType_LineApp) {\n\t\t\t//使用上次的授权缓存token\n\t\t\tconsole.log(\"Line login 缓存了token，直接验证\");\n\t\t\tthis.SendLoginByLine(accessTokenInfo, accessToken, 0);\n\t\t}\n\t\telse {\n\t\t\tapp.NativeManager().CallToNative(\"OnLineLogin\", []);\n\t\t}\n\t},\n\n\t// line 登录\n\tOnNativeNotifyLineLogin: function (dataInfo) {\n\t\tconsole.log(\"OnNativeNotifyLineLogin dataInfo: \", dataInfo);\n\t\tlet accessTokenInfo = {\n\t\t\theadImgUrl: dataInfo[\"headImgUrl\"],\n\t\t\tnickName: dataInfo[\"nickName\"],\n\t\t\tuserId: dataInfo[\"userId\"],\n\t\t\taccessToken: dataInfo[\"accessToken\"],\n\t\t}\n\n\t\tthis.dataInfo = accessTokenInfo;\n\t\tthis.SendLoginByLine(accessTokenInfo, dataInfo[\"accessToken\"], 0);\n\t},\n\n\t// 发送授权登录\n\tSendLoginByLine: function (accessTokenInfo, accessToken, sdkAccountID) {\n\t\tconsole.error(\"line login 开始发送授权登录\");\n\t\tthis.HeroAccountManager.LoginAccountBySDK(this.ShareDefine.SDKType_LineApp, accessToken, accessTokenInfo, sdkAccountID);\n\t},\n\n\n});\n\nvar g_LineAppManager = null;\n\n/**\n * 绑定模块外部方法\n */\nexports.GetModel = function () {\n\tif (!g_LineAppManager) {\n\t\tg_LineAppManager = new LineAppManager();\n\t}\n\treturn g_LineAppManager;\n}"]}