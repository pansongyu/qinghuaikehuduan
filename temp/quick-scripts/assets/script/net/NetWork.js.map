{"version":3,"sources":["NetWork.js"],"names":["emitter","require","app","Request","BaseClass","extend","Init","id","event","param","callback","errcb","MessageType","None","Response","Notify","copyArray","dest","doffset","src","soffset","length","copy","index","EgretReadByteArray","buffer","dataview","DataView","offset","readByte","ret","getUint8","readShort","getInt16","readInt","getInt32","readUTF","tempBuffer","slice","strdecode","bytes","Uint8Array","array","charCode","end","hasEot","cc","error","push","e","String","fromCharCode","apply","EgretWriteByteArray","ArrayBuffer","getBuffer","retBuffer","writeByte","value","setUint8","writeShort","setInt16","writeInt","setInt32","writeUTF","str","strBuffer","strencode","byteArray","i","charCodeAt","codes","j","_buffer","NetWork","JS_Name","isTestWss","ShareDefine","AllowReConnectCount","socket","isConnectIng","cacheRequestList","host","port","url","join","reConnectTimeID","bDisconnectByLogout","handshakeCallback","eventCallback","BigPack","Array","OnReload","IsDevelopment","requests","requestid","losts","isReconnecting","connectAccountID","clearTimeout","tryReConnectCount","InitConnectInfo","accountID","InitWebSocket","console","log","SysLog","readyState","Connected","Log","Connect","ControlManager","CheckVpnUsed","bind","close","disconnect","WebSocket","binaryType","onopen","OnOpen","onmessage","OnMessage","onerror","OnError","onclose","OnClose","that","setTimeout","ReConnect","IsOpenVpn","Disconnect","Client","OnEvent","GetNewRequest","req","pop","ReConnectByTipSureBtn","byLogout","byte","messageType","srcType","srcId","descType","descId","eventName","sequence","errorCode","strBody","body","allPack","nowPack","data","toLocaleLowerCase","BigstrBody","ErrLog","JSON","parse","stack","NetLog","UpdateHearTime","errorFunc","UpdateAccessPoint","HeroAccountManager","clientConfig","GetClientConfig","gameServerIP","gameServerPort","target","URL","type","RequestReConnect","sendPack","ReConnectSuccess","ReConnectFail","head","write","SendLostPack","lostCount","AddLostPack","errorCallback","message","strMsg","stringify","send","g_NetWork","exports","GetModel"],"mappings":"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","file":"NetWork.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\net","sourcesContent":["var emitter = require('emitter');\n\nvar app = require('app');\n\n\nvar Request = app.BaseClass.extend({\n\tInit: function () {\n\t\tthis.id = null;\n\t\tthis.event = null;\n\t\tthis.param = null;\n\t\tthis.callback = null; //(msg: any) => void;\n\t\tthis.errcb = null; //(head: any, code: number, msg: string) => void;\n\t},\n})\n\nvar MessageType = {\n\tNone: 0, // 空白定义\n\t/**\n\t * 对request的反馈，无需回包\n\t */\n\tResponse: 1,\n\t/**\n\t * 向其他服务器请求，必定回包\n\t */\n\tRequest: 2,\n\t/**\n\t * 向其他服务器发送监控信息，无需回包\n\t */\n\tNotify: 3,\n}\n\nvar copyArray = function (dest, doffset, src, soffset, length) {\n\tif ('function' === typeof src.copy) {\n\t\t// Buffer\n\t\tsrc.copy(dest, doffset, soffset, soffset + length);\n\t} else {\n\t\t// Uint8Array\n\t\tfor (var index = 0; index < length; index++) {\n\t\t\tdest[doffset++] = src[soffset++];\n\t\t}\n\t}\n};\n\nvar EgretReadByteArray = app.BaseClass.extend({\n\tInit: function (buffer) {\n\t\tthis.buffer = buffer;\n\t\tthis.dataview = new DataView(this.buffer);\n\t\tthis.offset = 0;\n\t},\n\n\treadByte: function () {\n\t\tvar ret = this.dataview.getUint8(this.offset);\n\t\tthis.offset += 1;\n\t\treturn ret;\n\t},\n\n\treadShort: function () {\n\t\tvar ret = this.dataview.getInt16(this.offset);\n\t\tthis.offset += 2;\n\t\treturn ret;\n\t},\n\n\treadInt: function () {\n\t\tvar ret = this.dataview.getInt32(this.offset);\n\t\tthis.offset += 4;\n\t\treturn ret;\n\t},\n\n\treadUTF: function () {\n\t\tvar length = this.dataview.getInt16(this.offset);\n\t\tthis.offset += 2;\n\t\tvar tempBuffer = this.buffer.slice(this.offset, this.offset + length);\n\t\t//cc.error(\"length\",this.offset, length, tempBuffer, tempBuffer.byteLength);\n\t\tthis.offset += length;\n\t\tvar ret = this.strdecode(tempBuffer);\n\t\treturn ret;\n\t},\n\n\t// // ArrayBuffer转为字符串，参数为ArrayBuffer对象\n\t// ab2str:function(buf) {\n\t//     return String.fromCharCode.apply(null, new Uint16Array(buf));\n\t// },\n\n\t/**\n   * client decode\n   * msg String data\n   * return Message Object\n   */\n\tstrdecode: function (buffer) {\n\t\tvar bytes = new Uint8Array(buffer);\n\t\tvar array = [];\n\t\tvar offset = 0;\n\t\tvar charCode = 0;\n\t\tvar end = bytes.length;\n\t\t//cc.error('befor Protocol.strdecode length:', end);\n\t\tvar hasEot = false;\n\t\twhile (offset < end) {\n\t\t\ttry {\n\t\t\t\tif (bytes[offset] < 128) {\n\t\t\t\t\tcharCode = bytes[offset];\n\t\t\t\t\toffset += 1;\n\t\t\t\t\tif (charCode == 4) {\n\t\t\t\t\t\tcc.error('find strdecode eot');\n\t\t\t\t\t\thasEot = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else if (bytes[offset] < 224) {\n\t\t\t\t\tcharCode = ((bytes[offset] & 0x3f) << 6) + (bytes[offset + 1] & 0x3f);\n\t\t\t\t\toffset += 2;\n\t\t\t\t} else {\n\t\t\t\t\tcharCode = ((bytes[offset] & 0x0f) << 12) + ((bytes[offset + 1] & 0x3f) << 6) + (bytes[offset + 2] & 0x3f);\n\t\t\t\t\toffset += 3;\n\t\t\t\t}\n\t\t\t\tarray.push(charCode);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tcc.error(e);\n\t\t\t}\n\t\t}\n\t\tif (hasEot)\n\t\t\tarray.push(\"}\");\n\n\t\tvar ret = String.fromCharCode.apply(null, array);\n\t\t//cc.error('after Protocol.strdecode length:', array.length, array, ret);\n\t\treturn ret;\n\t},\n})\n\nvar EgretWriteByteArray = app.BaseClass.extend({\n\tInit: function (length) {\n\t\tthis.buffer = new ArrayBuffer(length);\n\t\tthis.dataview = new DataView(this.buffer);\n\t\tthis.offset = 0;\n\t},\n\n\tgetBuffer: function () {\n\t\t//cc.error(this.buffer.byteLength, this.offset);\n\t\tvar retBuffer = this.buffer.slice(0, this.offset);\n\t\t//cc.error(\"getBuffer\", retBuffer);\n\t\treturn this.buffer;\n\t},\n\n\twriteByte: function (value) {\n\t\tvar ret = this.dataview.setUint8(this.offset, value);\n\t\tthis.offset += 1;\n\t\t//cc.error('offset:', this.offset);\n\t},\n\n\twriteShort: function (value) {\n\t\tvar ret = this.dataview.setInt16(this.offset, value);\n\t\tthis.offset += 2;\n\t\t//cc.error('offset:', this.offset);\n\t},\n\n\twriteInt: function (value) {\n\t\tvar ret = this.dataview.setInt32(this.offset, value);\n\t\tthis.offset += 4;\n\t\t//cc.error('offset:', this.offset);\n\t},\n\n\twriteUTF: function (str) {\n\t\t//cc.error(this.dataview, str, str.length);\n\t\tvar strBuffer = this.strencode(str);\n\t\tthis.writeShort(strBuffer.length);\n\t\tcopyArray(new Uint8Array(this.buffer), this.offset, strBuffer, 0, strBuffer.length);\n\t\tthis.offset += strBuffer.length;\n\n\t\t//cc.error(this.dataview, strBuffer.length);\n\t\t//cc.error('offset:', this.offset);\n\t},\n\n\tstrencode: function (str) {\n\t\tvar byteArray = new Uint8Array(str.length * 3);\n\t\tvar offset = 0;\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tvar charCode = str.charCodeAt(i);\n\t\t\tvar codes = null;\n\t\t\tif (charCode <= 0x7f) {\n\t\t\t\tcodes = [charCode];\n\t\t\t} else if (charCode <= 0x7ff) {\n\t\t\t\tcodes = [0xc0 | (charCode >> 6), 0x80 | (charCode & 0x3f)];\n\t\t\t} else {\n\t\t\t\tcodes = [0xe0 | (charCode >> 12), 0x80 | ((charCode & 0xfc0) >> 6), 0x80 | (charCode & 0x3f)];\n\t\t\t}\n\t\t\tfor (var j = 0; j < codes.length; j++) {\n\t\t\t\tbyteArray[offset] = codes[j];\n\t\t\t\t++offset;\n\t\t\t}\n\t\t}\n\t\tvar _buffer = new Uint8Array(offset);\n\t\tcopyArray(_buffer, 0, byteArray, 0, offset);\n\t\treturn _buffer;\n\t},\n})\n\n\nvar NetWork = app.BaseClass.extend({\n\n\tInit: function () {\n\t\tthis.JS_Name = \"NetWork\";\n\t\t// this.isTestWss = true;\n\t\tthis.isTestWss = false;\n\t\tthis.ShareDefine = app.ShareDefine();\n\n\t\t//最大允许尝试重连次数\n\t\tthis.AllowReConnectCount = 3;\n\n\t\t//事件分发模块\n\t\tthis.emitter = new emitter();\n\n\t\t//当前连接\n\t\tthis.socket = null;\n\t\tthis.isConnectIng = false;//websocket正在连接中(js websoket有bug用自定义的)\n\t\t//缓存的请求对象列表\n\t\tthis.cacheRequestList = [];\n\n\t\t//连接服务器IP地址\n\t\tthis.host = \"127.0.0.1\";\n\t\tthis.port = 9999;\n\t\tthis.url = ['ws://', this.host, ':', this.port].join(\"\");\n\n\t\t//延迟重连的事件ID\n\t\tthis.reConnectTimeID = 0;\n\n\t\tthis.bDisconnectByLogout = false;\n\t\t//连接成功回调\n\t\tthis.handshakeCallback = null;\n\n\t\tthis.eventCallback = null;\n\n\t\t//大包\n\t\tthis.BigPack = new Array();\n\n\t\tthis.OnReload();\n\n\t},\n\n\t//是否开发者模式\n\tIsDevelopment: function () {\n\t\treturn app.ShareDefine().IsDevelopment\n\t},\n\n\tOnReload: function () {\n\n\t\t//发送的封包堆积字典\n\t\tthis.requests = {}; // id：req\n\t\t//封包序列号\n\t\tthis.requestid = 1;\n\n\t\t//发包失败缓存列表\n\t\tthis.losts = [];\n\n\t\t//是否在处理重连中\n\t\tthis.isReconnecting = false;\n\t\t//是否在连接中\n\t\tthis.isConnectIng = false;\n\t\t//客户端当前连接登录的accountID\n\t\tthis.connectAccountID = 0\n\n\t\tif (this.reConnectTimeID) {\n\t\t\tclearTimeout(this.reConnectTimeID);\n\t\t\tthis.reConnectTimeID = 0;\n\t\t}\n\n\t\t//尝试重连次数\n\t\tthis.tryReConnectCount = 0;\n\t},\n\n\t//初始化连接的玩家账号\n\tInitConnectInfo: function (accountID) {\n\t\t//记录客户端当前连接登录的accountID\n\t\tthis.connectAccountID = accountID;\n\t},\n\n\t//初始化连接\n\tInitWebSocket: function (host, port, eventCallback, handshakeCallback) {\n\t\tconsole.log(\"初始化连接socket\");\n\t\tthis.SysLog(\"InitWebSocket(%s:%s)\", host, port, \"w-g\");\n\n\t\tthis.handshakeCallback = handshakeCallback;\n\t\tthis.eventCallback = eventCallback;\n\t\tif (this.isTestWss) {\n\t\t\tport = 9988;\n\t\t}\n\t\tlet readyState = 0;\n\t\tif (this.Connected() && this.socket) {\n\t\t\treadyState = this.socket.readyState;\n\t\t}\n\n\t\t//已经连接成功,直接回调握手函数\n\t\tif (this.Connected() && this.socket && (readyState == 1) && this.host == host && this.port == port) {\n\t\t\tthis.Log(\"连接未断开\");\n\t\t\tthis.handshakeCallback(false);\n\t\t}\n\t\telse {\n\t\t\tthis.host = host;\n\t\t\tthis.port = port;\n\t\t\tif (this.isTestWss) {\n\t\t\t\tthis.url = ['wss://', host, ':', port].join(\"\");\n\t\t\t} else {\n\t\t\t\tthis.url = ['ws://', host, ':', port].join(\"\");\n\t\t\t}\n\t\t\t// this.url = ['ws://', host, ':', port].join(\"\");\n\t\t\tthis.Connect();\n\t\t}\n\t},\n\n\t// 连接Java服务器\n\tConnect: function () {\n\t\tif (app.ControlManager().CheckVpnUsed(this.Connect.bind(this))) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.socket) {\n\t\t\tconsole.log(\"socket连接已存在，需先关闭\");\n\t\t\tif (this.socket.close) {\n\t\t\t\tthis.socket.close();\n\t\t\t}\n\t\t\telse if (this.socket.disconnect) {\n\t\t\t\tthis.socket.disconnect();\n\t\t\t}\n\t\t\tthis.socket = null;\n\t\t}\n\t\tlet url = this.url;\n\n\t\tthis.socket = new WebSocket(this.url);\n\t\tconsole.log(\"连接Java服务器:\" + this.url);\n\t\tthis.SysLog(\"开始连接:%s 是否重连(%s)\", this.url, this.isReconnecting, \"w-g\");\n\t\tthis.socket.binaryType = 'arraybuffer';\n\t\tthis.socket.onopen = this.OnOpen.bind(this);\n\t\tthis.socket.onmessage = this.OnMessage.bind(this);\n\t\tthis.socket.onerror = this.OnError.bind(this);\n\t\tthis.socket.onclose = this.OnClose.bind(this); // 服务器断开\n\t\tlet that = this;\n\t\tsetTimeout(function () {\n\t\t\tif (that.isConnectIng == true) {\n\t\t\t\tconsole.log(\"setTimeout 已经检测到连接成功\");\n\t\t\t} else {\n\t\t\t\tthat.OnClose({ \"type\": 'timeout', \"target\": { \"URL\": url } });\n\t\t\t}\n\t\t}, 2000);\n\t},\n\n\t//发起重连\n\tReConnect: function () {\n\t\tif (app.ControlManager().IsOpenVpn()) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.Disconnect();\n\n\t\t//玩家登录服务器后,才需要建立重连,否则不重连,登录过程当断网处理,否则登录请求一直重连\n\t\tif (this.connectAccountID) {\n\t\t\tif (this.isReconnecting) {\n\t\t\t\tconsole.log(\"已经在重连中,不需要尝试重连\");\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tconsole.log(\"重连中...\");\n\t\t\tthis.isReconnecting = true;\n\t\t\tthis.Connect();\n\t\t\tapp.Client.OnEvent(\"ModalLayer\", \"StartReConnect\");\n\t\t\treturn true\n\t\t}\n\t\telse {\n\t\t\tthis.SysLog(\"没有玩家建立连接,不需要重连\");\n\t\t\tthis.isReconnecting = false;\n\t\t\treturn false\n\t\t}\n\n\t},\n\n\t//创建一个新的封包事件结构体\n\tGetNewRequest: function () {\n\n\t\tlet req = this.cacheRequestList.pop();\n\t\tif (!req) {\n\t\t\treq = new Request();\n\t\t}\n\t\treq.id = this.requestid++;\n\n\t\t//修改请求头ID,避免超过字段值\n\t\tif (this.requestid >= 60000) {\n\t\t\tthis.requestid = 1;\n\t\t}\n\t\treturn req\n\t},\n\n\t//是否连接中\n\tConnected: function () {\n\t\treturn this.isConnectIng;\n\t},\n\tReConnectByTipSureBtn: function () {\n\t\tif (this.reConnectTimeID)\n\t\t\tclearTimeout(this.reConnectTimeID);\n\n\t\tthis.tryReConnectCount = 0;\n\t\tthis.reConnectTimeID = 0;\n\t\tlet that = this;\n\t\tthis.reConnectTimeID = setTimeout(function () {\n\t\t\tthat.isReconnecting = false;\n\t\t\tthat.ReConnect();\n\t\t}, 100);\n\t},\n\t//----------回掉函数------------------\n\t//连接开启\n\tOnOpen: function (event) {\n\t\tif (this.isTestWss) {\n\t\t\tconsole.error(\"WebSocket 连接开启 OnOpen: \", event);\n\t\t}\n\t\t//如果是重连成功回调\n\t\tif (this.isReconnecting) {\n\t\t\tthis.SysLog(\"重连成功 OnOpen(%s)\", this.url, \"w-g\");\n\t\t}\n\t\telse {\n\t\t\tthis.SysLog(\"连接成功 OnOpen(%s)\", this.url, \"w-g\");\n\t\t}\n\n\t\tif (this.reConnectTimeID) {\n\t\t\tclearTimeout(this.reConnectTimeID);\n\t\t\tthis.reConnectTimeID = 0;\n\t\t}\n\n\t\tthis.isConnectIng = true;\n\t\tthis.tryReConnectCount = 0;\n\t\t//连接成功回调\n\t\tif (this.handshakeCallback) {\n\t\t\t//回调确认是重连在置为false\n\t\t\tthis.handshakeCallback(this.isReconnecting);\n\t\t}\n\t\tthis.isReconnecting = false;\n\t},\n\n\t//断开连接\n\tDisconnect: function (byLogout = false) {\n\t\tif (this.isTestWss) {\n\t\t\tconsole.error(\"WebSocket 断开连接:  \", byLogout);\n\t\t}\n\t\tif (this.isConnectIng && this.socket) {\n\t\t\tif (this.socket.close) {\n\t\t\t\tthis.socket.close();\n\t\t\t}\n\t\t\telse if (this.socket.disconnect) {\n\t\t\t\tthis.socket.disconnect();\n\t\t\t}\n\t\t\tthis.SysLog(\"Disconnect(%s)\", this.url);\n\t\t\tthis.socket = null;\n\t\t\tthis.isConnectIng = false;\n\t\t\tif (byLogout)\n\t\t\t\tthis.bDisconnectByLogout = true;\n\t\t}\n\t},\n\n\t//接受到数据\n\tOnMessage: function (event) {\n\t\tlet byte = \"\";\n\t\tlet messageType = 0;\n\t\tlet srcType = 0;\n\t\tlet srcId = 0;\n\t\tlet descType = 0;\n\t\tlet descId = 0;\n\t\tlet eventName = \"\";\n\t\tlet sequence = 0;\n\t\tlet errorCode = 0;\n\t\tlet strBody = \"\";\n\t\tlet body = {};\n\t\tlet allPack = 0;\n\t\tlet nowPack = 0;\n\n\t\ttry {\n\t\t\tbyte = new EgretReadByteArray(event.data);\n\n\t\t\tmessageType = byte.readByte();\n\t\t\tsrcType = byte.readByte();\n\t\t\tsrcId = (byte.readInt() << 32) + byte.readInt();\n\t\t\tdescType = byte.readByte();\n\t\t\tdescId = (byte.readInt() << 32) + byte.readInt();\n\n\t\t\tallPack = byte.readShort();\n\t\t\tnowPack = byte.readShort();\n\t\t\teventName = byte.readUTF().toLocaleLowerCase();\n\n\t\t\tsequence = byte.readShort();\n\t\t\terrorCode = byte.readShort();\n\t\t\tstrBody = byte.readUTF();\n\n\t\t\tif (allPack > 1) {\n\t\t\t\tthis.BigPack[nowPack] = strBody;\n\t\t\t\tif (this.BigPack.length == allPack) {\n\t\t\t\t\tlet BigstrBody = '';\n\t\t\t\t\tfor (let i = 0; i < allPack; i++) {\n\t\t\t\t\t\tBigstrBody = BigstrBody + this.BigPack[i];\n\t\t\t\t\t};\n\t\t\t\t\tstrBody = BigstrBody;\n\t\t\t\t\tthis.BigPack = [];\n\t\t\t\t} else {\n\t\t\t\t\tthis.ErrLog(\"NetWork allPack error length:%s\", allPack);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (errorCode) {\n\t\t\t\tbody = { \"Msg\": strBody };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbody = JSON.parse(strBody);\n\t\t\t}\n\n\t\t\tthis.Log(\"OnMessage(%s,%s,%s,%s,%s)\", messageType, srcType, srcId, descType, descId);\n\t\t}\n\t\tcatch (error) {\n\t\t\tthis.ErrLog(\"OnMessage error:%s\", error.stack);\n\t\t\treturn\n\t\t}\n\n\t\tif (this.IsDevelopment()) {\n\t\t\tthis.NetLog(\"[Recv](%s,%s,%s):\", sequence, eventName, errorCode, body, \"b-gb\");\n\t\t}\n\n\t\tif (errorCode) {\n\t\t\tthis.eventCallback(\"OnCodeError\", [eventName, errorCode, body]);\n\t\t}\n\t\telse {\n\t\t\t//更新心跳包\n\t\t\tapp.Client.UpdateHearTime();\n\t\t\tthis.eventCallback(\"OnReceive\", [eventName, body]);\n\t\t}\n\n\t\tvar req = this.requests[sequence];\n\t\t//请求事件可能注册了回调函数\n\t\tif (!req) {\n\t\t\treturn\n\t\t}\n\t\t//单次回调事件,删除记录\n\t\tdelete this.requests[sequence];\n\n\t\ttry {\n\t\t\tif (errorCode) {\n\t\t\t\tvar errorFunc = req.errcb;\n\t\t\t\tif (errorFunc) {\n\t\t\t\t\terrorFunc(body);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (req.callback) {\n\t\t\t\treq.callback(body);\n\t\t\t}\n\t\t}\n\t\tcatch (error) {\n\t\t\tthis.ErrLog(\"error:%s\", error.stack, body);\n\t\t}\n\t},\n\tUpdateAccessPoint: function () {\n\t\tapp.HeroAccountManager().UpdateAccessPoint();\n\t\tlet clientConfig = app.Client.GetClientConfig();\n\t\tlet gameServerIP = clientConfig[\"GameServerIP\"];\n\t\tlet gameServerPort = clientConfig[\"GameServerPort\"];\n\t\t//换节点\n\t\tthis.url = ['ws://', gameServerIP, ':', gameServerPort].join(\"\");\n\t},\n\t//连接错误\n\tOnError: function (event) {\n\t\tif (this.isTestWss) {\n\t\t\tconsole.error(\"WebSocket 连接错误 OnError: \", event);\n\t\t}\n\t\tif (this.url != event.target.URL) {\n\t\t\treturn;\n\t\t}\n\t\t//如果重连中,网络连接失败\n\t\tif (this.isReconnecting) {\n\t\t\tthis.ErrLog(\"大厅重连失败\");\n\t\t\t//如果有启动重连定时时间,清除掉回调\n\t\t\tif (this.reConnectTimeID) {\n\t\t\t\tclearTimeout(this.reConnectTimeID);\n\t\t\t}\n\t\t\tthis.tryReConnectCount++;\n\t\t\tlet that = this;\n\t\t\tthis.reConnectTimeID = setTimeout(function () {\n\t\t\t\tthat.UpdateAccessPoint();\n\t\t\t\tthat.isReconnecting = false;\n\t\t\t\tthat.ReConnect();\n\t\t\t}, 2000);\n\t\t}\n\t\telse {\n\t\t\t//连接错误\n\t\t\tthis.eventCallback(\"OnError\");\n\t\t}\n\t},\n\n\t//关闭请求(服务器关闭请求)\n\tOnClose: function (event) {\n\t\tif (this.isTestWss) {\n\t\t\tconsole.error(\"WebSocket 关闭请求(服务器关闭请求) OnClose: \", event);\n\t\t}\n\t\tif (this.url != event.target.URL) {\n\t\t\treturn;\n\t\t}\n\t\tthis.ErrLog(\"OnClose:%s,%s\", this.url, event.type);\n\t\tif (this.isReconnecting) {\n\t\t\tthis.Log(\"OnClose isReconnecting\");\n\t\t}\n\t\telse {\n\t\t\tthis.eventCallback(\"OnClose\", [this.bDisconnectByLogout]);\n\t\t\t//初始化回调\n\t\t\t// this.handshakeCallback = null;\n\n\t\t\t// this.eventCallback = null;\n\t\t\tthis.Disconnect();\n\t\t}\n\t\tthis.isConnectIng = false;\n\n\t\tif (this.bDisconnectByLogout) {//自己断开的不自动重连\n\t\t\tthis.bDisconnectByLogout = false;\n\t\t\tthis.isReconnecting = false;\n\t\t\treturn\n\t\t}\n\n\t\tif (0 == this.tryReConnectCount) {\n\t\t\tthis.ErrLog('NetWork OnClose tryReConnect');\n\t\t\tthis.tryReConnectCount++;\n\t\t\tif (this.reConnectTimeID) {\n\t\t\t\tclearTimeout(this.reConnectTimeID);\n\t\t\t\tthis.reConnectTimeID = 0;\n\t\t\t}\n\t\t\tlet that = this;\n\t\t\tthis.reConnectTimeID = setTimeout(function () {\n\t\t\t\tthat.UpdateAccessPoint();\n\t\t\t\tthat.isReconnecting = false;\n\t\t\t\tthat.ReConnect();\n\t\t\t}, 1000);\n\t\t}\n\t},\n\n\t//-------------------发包接口----------------\n\n\t//发送登录授权封包,请求重新绑定链接\n\tRequestReConnect: function (eventName, sendPack) {\n\n\t\t//还没有建立连接不能发送重连封包请求\n\t\tif (!this.Connected()) {\n\t\t\tthis.ErrLog(\"RequestReConnect not Connected\");\n\t\t\t//关闭模态层\n\t\t\tapp.Client.OnEvent(\"ModalLayer\", \"ReceiveNet\");\n\t\t\treturn\n\t\t}\n\t\teventName = eventName.toLocaleLowerCase();\n\n\t\t// 发送请求\n\t\tlet req = this.GetNewRequest();\n\t\treq.event = eventName;\n\t\treq.param = sendPack;\n\t\treq.callback = this.ReConnectSuccess.bind(this);\n\t\treq.errcb = this.ReConnectFail.bind(this);\n\n\t\tthis.requests[req.id] = req;\n\n\t\tvar head = {\n\t\t\tmessageType: MessageType.Request,\n\t\t\tevent: eventName,\n\t\t\tsequence: req.id\n\t\t};\n\n\t\tif (this.IsDevelopment()) {\n\t\t\tthis.NetLog(\"[ReConnect](%s) : \", eventName, sendPack, \"b-g\");\n\t\t}\n\t\t//先发送一个重连封包,直接调用write,不调用Request避免被挤压\n\t\tthis.write(head, sendPack);\n\t},\n\n\t//登录重新授权成功\n\tReConnectSuccess: function () {\n\n\t\tthis.isReconnecting = false;\n\t\t//在发送挤压封包\n\t\tthis.SendLostPack();\n\t},\n\n\t//重新授权失败\n\tReConnectFail: function (eventName, errorCode, body) {\n\t\t// 网络已经连接,重连token授权登录失败\n\t\t// 依据errorCode类型:\n\t\t// 1:弹框提示,2次授权登录,需要依然保持isReconnecting=true状态.\n\t\t// 2:非法性退到登录场景,不允许重连\n\t\t//关闭模态层\n\t\tapp.Client.OnEvent(\"ModalLayer\", \"ReceiveNet\");\n\t},\n\n\t//发送重连后挤压的封包\n\tSendLostPack: function () {\n\t\tlet lostCount = this.losts.length;\n\t\t// 重连成功发送残留封包\n\t\tfor (var index = 0; index < lostCount; index++) {\n\t\t\tvar req = this.losts[index];\n\t\t\tif (this.IsDevelopment()) {\n\t\t\t\tthis.NetLog(\"[SendLost](%s):\", req.head.event, req.param, \"b-g\");\n\t\t\t}\n\t\t\tthis.write(req.head, req.param);\n\t\t}\n\t\tthis.losts = [];\n\t},\n\n\t//追加丢失的封包\n\tAddLostPack: function (head, sendPack) {\n\t\tlet eventName = head.event;\n\n\t\tlet lostCount = this.losts.length;\n\t\tfor (let index = 0; index < lostCount; index++) {\n\t\t\tvar req = this.losts[index];\n\t\t\t//存在相同的封包,过滤???\n\t\t\tif (req[\"head\"][\"event\"] == eventName) {\n\t\t\t\tthis.SysLog(\"AddLostPack have find(%s):\", eventName, req[\"param\"], sendPack);\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\tthis.losts.push({ head: head, param: sendPack });\n\t\tconsole.log(\"重连建立中,积压封包(%s):\", eventName, sendPack);\n\t},\n\n\t// 发送封包请求 可以携带callback，errorCallback回调\n\tRequest: function (eventName, sendPack, callback = null, errorCallback = null) {\n\t\tif (app.ControlManager().IsOpenVpn()) {\n\t\t\treturn;\n\t\t}\n\t\teventName = eventName.toLocaleLowerCase();\n\n\t\t// 发送请求\n\t\tlet req = this.GetNewRequest();\n\t\treq.event = eventName;\n\t\treq.param = sendPack;\n\t\treq.callback = callback;\n\t\treq.errcb = errorCallback;\n\n\t\tthis.requests[req.id] = req;\n\n\t\tvar head = {\n\t\t\tmessageType: MessageType.Request,\n\t\t\tevent: eventName,\n\t\t\tsequence: req.id\n\t\t};\n\n\t\tif (this.Connected()) {\n\t\t\t//如果还在重连建立中,积压封包\n\t\t\tif (this.isReconnecting) {\n\t\t\t\tconsole.log(\"重连中,不能发送封包\");\n\t\t\t\tthis.AddLostPack(head, sendPack);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.IsDevelopment()) {\n\t\t\t\t\tthis.NetLog(\"[Send](%s) : \", eventName, sendPack, \"b-g\");\n\t\t\t\t}\n\t\t\t\tthis.write(head, sendPack);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"未建立连接,不能发送封包\");\n\t\t\t//如果成功开启重连,则积压封包\n\t\t\tif (this.ReConnect()) {\n\t\t\t\tthis.AddLostPack(head, sendPack);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.SysLog(\"未建立连接,不能发送封包(%s):\", eventName, sendPack);\n\t\t\t\t//关闭模态层\n\t\t\t\tapp.Client.OnEvent(\"ModalLayer\", \"ReceiveNet\");\n\t\t\t}\n\t\t}\n\t},\n\n\t//通知服务器\n\tNotify: function (eventName, sendPack) {\n\t\teventName = eventName.toLocaleLowerCase();\n\t\tvar head = {\n\t\t\tmessageType: MessageType.Notify,\n\t\t\tevent: eventName,\n\t\t\tsequence: 0\n\t\t};\n\n\t\tif (this.Connected()) {\n\t\t\t//如果还在重连建立中,积压封包\n\t\t\tif (this.isReconnecting) {\n\t\t\t\tthis.AddLostPack(head, sendPack);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.IsDevelopment()) {\n\t\t\t\t\tthis.NetLog(\"[Notify](%s) : \", eventName, sendPack, \"b-g\");\n\t\t\t\t}\n\t\t\t\tthis.write(head, sendPack);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t//如果成功开启重连,则积压封包\n\t\t\tif (this.ReConnect()) {\n\t\t\t\tthis.AddLostPack(head, sendPack);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.SysLog(\"未建立连接,不能发送封包(%s):\", eventName, sendPack);\n\t\t\t\t//关闭模态层\n\t\t\t\tapp.Client.OnEvent(\"ModalLayer\", \"ReceiveNet\");\n\t\t\t}\n\t\t}\n\t},\n\n\t// 发送数据/* head:{ messageType: number, event: string, sequence: number }*/\n\twrite: function (head, message) {\n\t\t//this.Log(\"write:%s\", head.event);\n\t\ttry {\n\t\t\tvar strMsg = JSON.stringify(message);\n\t\t}\n\t\tcatch (error) {\n\t\t\tthis.ErrLog(\"write error:%s \", error.stack);\n\t\t\treturn\n\t\t}\n\t\tvar length = 1 + 2 + 2 + head.event.length * 3 + 2 + strMsg.length * 3;\n\t\t// console.log('[send]: length %s, event:%s, length:%s, msg:%s, length:%s', length, head.event, strMsg, head.event.length, strMsg.length);\n\t\tvar byte = new EgretWriteByteArray(length);\n\t\t//创建 ByteArray 对象\n\t\tbyte.writeByte(head.messageType);//消息类型\n\t\tbyte.writeShort(head.sequence);//消息序列号\n\t\tbyte.writeUTF(head.event);//数据类型\n\t\tbyte.writeUTF(strMsg);//消息体\n\t\t//发送数据\n\t\tthis.socket.send(byte.getBuffer());\n\t},\n})\n\n\nvar g_NetWork = null;\n\n/**\n * 绑定模块外部方法\n */\nexports.GetModel = function () {\n\tif (!g_NetWork) {\n\t\tg_NetWork = new NetWork();\n\t}\n\treturn g_NetWork;\n}"]}