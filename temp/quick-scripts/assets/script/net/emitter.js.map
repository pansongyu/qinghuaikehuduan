{"version":3,"sources":["emitter.js"],"names":["module","exports","Emitter","obj","mixin","key","prototype","on","addEventListener","event","fn","target","_callbacks","isRegetEventByTarget","i","length","console","log","push","once","self","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","slice","call","len","listeners","hasListeners"],"mappings":"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","file":"emitter.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\net","sourcesContent":["\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`. when occurred error, call errcb.\n *\n * @param {String} event\n * @param {Function} fn\n * @param {Function} errcb\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn, target){\n\n  //注册回掉函数绑定运行对象\n  if(!target){\n    target = this;\n  }\n  fn.target = target;\n\n  this._callbacks = this._callbacks || {};\n\n  //同一个event只能被一个target注册一次\n  let isRegetEventByTarget = false;\n  if (this._callbacks[event]) {\n    for (let i = 0; i < this._callbacks[event].length; i++) {\n        if (this._callbacks[event][i].target == target) {\n          isRegetEventByTarget = true;\n          this._callbacks[event][i] = fn;\n          break;\n        }\n    }\n  }\n  if (isRegetEventByTarget) {\n    console.log(event +\" 事件已经被同一个target注册\");\n    return this;\n  }\n\n  (this._callbacks[event] = this._callbacks[event] || []).push(fn);\n\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn, target){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  if(!target){\n    target = this;\n  }\n\n  function on() {\n    self.off(event, on);\n    fn.apply(target, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n  \n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  \n  this._callbacks = this._callbacks || {};\n  var callbacks = this._callbacks[event];\n  if(!callbacks) {\n    return this\n  }\n\n  var args = [].slice.call(arguments, 1);\n\n  callbacks = callbacks.slice(0);\n\n  for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(callbacks[i].target, args);\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n"]}