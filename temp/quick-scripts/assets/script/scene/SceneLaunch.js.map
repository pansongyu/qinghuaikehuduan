{"version":3,"sources":["SceneLaunch.js"],"names":["app","require","cc","Class","extends","Component","properties","errorNode","Node","LabelRes","Label","bar","default","type","ProgressBar","barUpdate","barApkUpdate","lbProcess","lbUpdateProcess","LabelUpdating","lbApkUpdateProcess","LabelApkUpdating","logo","logoSprite","SpriteFrame","xinhua","onLoad","LocalDataManager","SetConfigProperty","State_InitClient","State_ShowHealthForm","State_StartUpDate","State_LoadJSFile","State_WaitJSFileLoad","State_EndUpDate","State_SendGateHttp","State_LoadText","State_LoadRes","State_StartGame","State_RunGame","State_StartUpNextDate","State_LoadResFail","State_ClientOutOfDate","initState","progress","string","allTableDataDict","clientConfig","localConfig","gateServerUrl","gateSendPack","Client","OnInitClientData","debugModel","InitTable","InitRes","InitResDir","totalCount","AllTableNameList","length","AllResNameList","AllResJsonNameList","ShareDefine","ClientVersion","nowTick","Date","now","OutOfDataTick","sys","isNative","LoadFirstConfig","LoadFirstConfigWeb","localStorage","setItem","ChangeLogo","hasOwnProperty","getComponent","Sprite","spriteFrame","HideXinHua","active","GetMsg","argList","logText","js","formatStr","apply","Log","log","SysLog","ErrLog","error","console","that","ControlManager","CreateLoadPromise","then","textData","OnLoadFirstConfig","catch","stack","textDataList","text","split","count","index","dataString","replace","startsWith","dataList","keyName","shift","value","join","endsWith","JSON","parse","stringify","InitDebug","isDebug","CheckDebugSign","GetDebugModel","node","addChild","CheckHotUpdate","GetClientConfigProperty","LoadLogin","scheduleOnce","percent","HotUpdateMgr","Destroy","Init","ApkUpdateMgr","CheckVersion","ListChoice","targetList","Math","floor","random","AllTableDict","Object","keys","PerTimeTableCount","loadTableCount","AllResDict","PerTimeResCount","loadResCount","AllResJsonDict","UpdateProcess","startCompress","OnEvent_LoadApkProess","event","downLoadMgr","DownLoadMgr","toString","detail","GetDownLoadStateProgress","GetDownLoadStateError","update","dt","OnUpdate","OnLoadTable","OnLoadRes","removeChild","ReSetClientConfig","OnInitClientFinish","RegEvent","MultiPoint","serverIP","AccessPoint","GetConfigProperty","AccountActive","myCityID","getItem","CityPoints","CityPointsList","indexOf","allCount","tableName","pop","keyNameList","tablePath","RawAsset","resName","pathName","resPath","resType","SpriteAtlas","fileData","SendHttpRequest","serverUrl","argString","requestType","sendPack","IsOpenVpn","url","dataStr","timeOut","httpRequest","XMLHttpRequest","timeout","open","setRequestHeader","onerror","OnConnectHttpFail","readyState","status","ontimeout","UseLocalConfig","onreadystatechange","OnReceiveHttpPack","responseText","send","ChangeMPID","ComTool","IsIOS","vetsion","NativeManager","CallToNative","pack4","pack5","pack","pack2","pack3","httpResText","serverPack","OnClick","eventTouch","eventData","btnNode","currentTarget","btnName","name","Click_btn_tryLoad"],"mappings":"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","file":"SceneLaunch.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\scene","sourcesContent":["/*\r\n    客户端启动场景，不受场景管理\r\n*/\r\n\r\nvar app = require(\"app\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        errorNode:cc.Node,\r\n        LabelRes:cc.Label,\r\n        //给node添加组件cc.ProgressBar\r\n        bar: {\r\n            default: null,\r\n            type: cc.ProgressBar,    \r\n        },\r\n        barUpdate: {\r\n            default: null,\r\n            type: cc.ProgressBar,    \r\n        },\r\n        barApkUpdate: {\r\n            default: null,\r\n            type: cc.ProgressBar,    \r\n        },\r\n        //给node添加组件cc.Label\r\n        lbProcess: {\r\n            default: null,\r\n            type: cc.Label,    \r\n        },\r\n        lbUpdateProcess: {\r\n            default: null,\r\n            type: cc.Label,    \r\n        },\r\n        LabelUpdating:cc.Label,\r\n        lbApkUpdateProcess: {\r\n            default: null,\r\n            type: cc.Label,    \r\n        },\r\n        LabelApkUpdating:cc.Label,\r\n        logo:cc.Node,\r\n        logoSprite:[cc.SpriteFrame],\r\n        xinhua:cc.Node,\r\n    },\r\n\r\n    //加载\r\n    onLoad: function () {\r\n        //节点更新回默认节点\r\n        app.LocalDataManager().SetConfigProperty(\"Account\", \"AccessPoint\",0);\r\n        //客户端启动初始状态\r\n        this.State_InitClient = 0;\r\n        //显示健康提示语\r\n        this.State_ShowHealthForm = 1;\r\n        //客户端更新资源状态\r\n        this.State_StartUpDate = 2;\r\n        //加载js文件\r\n        this.State_LoadJSFile = 3;\r\n        //等待js文件加载完成回调\r\n        this.State_WaitJSFileLoad = 4;\r\n        //更新完成状态\r\n        this.State_EndUpDate = 5;\r\n        //发送请求gateserver下载配置\r\n        this.State_SendGateHttp = 6;\r\n        //加载txt配置\r\n        this.State_LoadText = 7;\r\n        this.State_LoadRes = 8;\r\n        //进入游戏状态\r\n        this.State_StartGame = 9;\r\n        //已经在运行游戏状态\r\n        this.State_RunGame = 10;\r\n        //需要更新下一个资源中\r\n        this.State_StartUpNextDate = 11;\r\n        //下载资源失败\r\n        this.State_LoadResFail = 12;\r\n        //客户端过期\r\n        this.State_ClientOutOfDate = 13;\r\n\r\n        this.initState = this.State_InitClient;\r\n\r\n        this.bar.progress = 0;\r\n        \r\n        this.barUpdate.progress = 0;\r\n\r\n        this.lbProcess.string = \"0%\";\r\n        \r\n        this.lbUpdateProcess.string=\"0%\";\r\n\r\n        this.barApkUpdate.progress = 0;\r\n        \r\n        this.lbApkUpdateProcess.string=\"0%\";\r\n\r\n        //所有表数据字典\r\n        this.allTableDataDict = {};\r\n\r\n        //下载的客户端配置\r\n        this.clientConfig = {};\r\n\r\n        //本地读取的配置\r\n        this.localConfig = {};\r\n\r\n        this.gateServerUrl = \"\";\r\n        this.gateSendPack = null;\r\n\r\n        //从全局空间获取客户端ClientManager\r\n        this.Client = app.Client;\r\n    \r\n        this.Client.OnInitClientData(\"\", 1);\r\n\r\n        this.debugModel = null;\r\n\r\n        this.InitTable();\r\n\r\n        this.InitRes();\r\n\r\n        this.InitResDir();\r\n\r\n        this.totalCount = this.AllTableNameList.length + this.AllResNameList.length + this.AllResJsonNameList.length;\r\n        if(this.LabelRes){\r\n            this.LabelRes.string = app.ShareDefine().ClientVersion;\r\n        }\r\n\r\n        let nowTick = Date.now();\r\n        this.OutOfDataTick = 0;\r\n        if(this.OutOfDataTick && nowTick >= this.OutOfDataTick){\r\n            this.initState = this.State_ClientOutOfDate;\r\n        }\r\n        else{\r\n            if (cc.sys.isNative || true) {\r\n                this.LoadFirstConfig();\r\n            }else{\r\n                this.LoadFirstConfigWeb();\r\n            }\r\n            \r\n        }\r\n        //重新初始化切换游戏的本地保存数据\r\n        cc.sys.localStorage.setItem(\"switchGameData\", \"\");\r\n        cc.sys.localStorage.setItem(\"switchRecord\", \"\");\r\n        cc.sys.localStorage.setItem(\"curRunGame\", \"hall\");\r\n        cc.sys.localStorage.setItem(\"packName\", \"pingxiang\");\r\n        this.ChangeLogo();\r\n        app[\"tanchuang\"]=1;\r\n\r\n    },\r\n    ChangeLogo:function(){\r\n        if(typeof(this.logo)==\"undefined\" || this.logo==null || this.logo==false){\r\n            return;\r\n        }\r\n        if(!this.logo.hasOwnProperty(\"_components\")){\r\n            return;\r\n        }\r\n        this.logo.getComponent(cc.Sprite).spriteFrame=this.logoSprite[0];\r\n    },\r\n    HideXinHua:function(){\r\n         this.xinhua.active=false;\r\n    },\r\n\r\n    GetMsg:function(argList){\r\n        let logText = cc.js.formatStr.apply(null, argList);\r\n        return \"SceneLaunch\" + \"\\t\" + logText;\r\n    },\r\n\r\n    Log:function(...argList){\r\n        cc.log(this.GetMsg(argList));\r\n    },\r\n\r\n    SysLog:function(...argList){\r\n        cc.log(this.GetMsg(argList));\r\n    },\r\n\r\n    ErrLog:function(...argList){\r\n        cc.error(this.GetMsg(argList));\r\n    },\r\n\r\n    //初始化加载debug文件\r\n    LoadFirstConfig:function(){\r\n        console.log(\"LoadFirstConfig start\");\r\n        let that = this;\r\n        this.Client.ControlManager.CreateLoadPromise(\"firstConfig\")\r\n            .then(function(textData){\r\n\r\n                if(!that.OnLoadFirstConfig(textData)){\r\n                    that.ErrLog(\"OnLoadFirstConfig(%s) fail\", textData);\r\n                    that.initState = that.State_LoadResFail;\r\n                }\r\n            })\r\n            .catch (function(error){\r\n                that.ErrLog(\"OnLoadFirstConfig:%s error\", error.stack);\r\n                that.initState = that.State_LoadResFail;\r\n            })\r\n    },\r\n\r\n    LoadFirstConfigWeb:function(){\r\n        console.log(\"LoadFirstConfigWeb start\");\r\n        let that = this;\r\n        this.Client.ControlManager.CreateLoadPromise(\"firstConfigWeb\")\r\n            .then(function(textData){\r\n\r\n                if(!that.OnLoadFirstConfig(textData)){\r\n                    that.ErrLog(\"OnLoadFirstConfig(%s) fail\", textData);\r\n                    that.initState = that.State_LoadResFail;\r\n                }\r\n            })\r\n            .catch (function(error){\r\n                that.ErrLog(\"OnLoadFirstConfig:%s error\", error.stack);\r\n                that.initState = that.State_LoadResFail;\r\n            })\r\n    },\r\n\r\n    //解析配置\r\n    OnLoadFirstConfig:function(textData){\r\n        this.localConfig = {};\r\n        try{\r\n            let textDataList = textData.text.split(\"\\n\");\r\n            let count = textDataList.length;\r\n            for(let index=0; index<count; index++){\r\n                //去除空格\r\n                let dataString = textDataList[index].replace(/(\\s*$)/g, \"\");\r\n                if(!dataString){\r\n                    continue\r\n                }\r\n                if(dataString.startsWith(\"#\")){\r\n                    continue\r\n                }\r\n                let dataList = dataString.split(\"=\");\r\n                if(dataList.length < 2){\r\n                    this.ErrLog(\"OnLoadFirstConfig dataString:%s error\", dataString);\r\n                    continue\r\n                }\r\n                let keyName = dataList.shift().replace(/(\\s*$)/g, \"\");\r\n\r\n                //有可能是多个等于号,后续的分割列表合并成一个做为value\r\n                let value = \"\";\r\n                if(dataList.length != 1){\r\n                    value = dataList.join(\"=\");\r\n                }\r\n                else{\r\n                    value = dataList[0];\r\n                }\r\n                value = value.replace(/(\\s*$)/g, \"\");\r\n                //如果是List或者Dict\r\n                if(keyName.endsWith(\"List\") || keyName.endsWith(\"Dict\")){\r\n                    value = JSON.parse(value);\r\n                }\r\n                this.localConfig[keyName] = value;\r\n            }\r\n        }\r\n        catch (error){\r\n            this.ErrLog(\"OnLoadFirstConfig(%s) error:%s\", textData, error.stack);\r\n            return false\r\n        }\r\n\r\n        //跳过从服务器拉取配置\r\n        // let gateServerIP = 0;\r\n        // let dbGateServerInfo = app.LocalDataManager().GetConfigProperty(\"DebugInfo\", \"GateServerInfo\");\r\n        // //优先使用本地数据库缓存\r\n        // if(dbGateServerInfo && dbGateServerInfo[\"GateServerIP\"]){\r\n        //     gateServerIP = dbGateServerInfo[\"GateServerIP\"];\r\n        // }\r\n        // else{\r\n        //     gateServerIP = this.localConfig[\"GateServerIP\"];\r\n        //     gateServerIP=this.MultiPoint(gateServerIP);\r\n        // }\r\n\r\n        // //如果没有配置IP,使用本地配置\r\n        // if(gateServerIP){\r\n        //     let gateServerPort = 0;\r\n        //     //优先使用本地数据库缓存\r\n        //     if(dbGateServerInfo && dbGateServerInfo[\"GateServerPort\"]){\r\n        //         gateServerPort = dbGateServerInfo[\"GateServerPort\"];\r\n        //     }\r\n        //     else{\r\n        //         gateServerPort = this.ListChoice(this.localConfig[\"GateServerPortList\"]);\r\n        //     }\r\n        //     if(!gateServerPort){\r\n        //         this.ErrLog(\"localConfig and dbGateServerInfo not find gateServerPort:\", this.localConfig, dbGateServerInfo);\r\n        //         return false\r\n        //     }\r\n        //     this.gateServerUrl = [\"http://\", gateServerIP, \":\", gateServerPort, \"/ClientPack\"].join(\"\");\r\n        //     console.error(\"this.gateServerUrl: \", this.gateServerUrl);\r\n        //     //存放到app作用域\r\n        //     app[\"GateServerInfo\"] = {\"GateServerIP\":gateServerIP, \"GateServerPort\":gateServerPort};\r\n\r\n        //     this.gateSendPack = {\r\n        //                             \"Head\":0xFF10,\r\n        //                             \"GameID\":this.localConfig[\"GameID\"],\r\n        //                             \"ConfigVersion\":this.localConfig[\"ConfigVersion\"],\r\n        //                         };\r\n        //     //开始请求客户端配置\r\n        //     this.initState = this.State_SendGateHttp;\r\n        //     this.SendHttpRequest(this.gateServerUrl, \"?Sign=ddcat\", \"POST\", this.gateSendPack);\r\n        // }\r\n        // //不需要下载远程配置,使用本地配置\r\n        // else{\r\n            app[\"GateServerInfo\"] = {\"GateServerIP\":\"0.0.0.0\", \"GateServerPort\":0};\r\n            this.initState = this.State_LoadText;\r\n            this.clientConfig = JSON.parse(JSON.stringify(this.localConfig));\r\n        //}\r\n        //保存到本地供子游戏调用\r\n        cc.sys.localStorage.setItem(\"localConfig\", JSON.stringify(this.localConfig));\r\n        //判断是否显示debug\r\n        this.InitDebug();\r\n\r\n        return true;\r\n    },\r\n\r\n    //初始化debug\r\n    InitDebug:function(){\r\n\r\n        let isDebug = app.Client.CheckDebugSign(this.localConfig[\"debug\"]);\r\n\r\n        //校验debug签名是否一样\r\n        if(isDebug){\r\n            this.Client.InitDebug(true);\r\n\r\n            let debugModel = this.Client.GetDebugModel();\r\n            if(debugModel){\r\n                this.node.addChild(debugModel.node, 10000);\r\n                this.debugModel = debugModel;\r\n            }\r\n        }\r\n        else{\r\n            this.Client.InitDebug(false);\r\n        }\r\n    },\r\n\r\n    CheckHotUpdate:function(){\r\n        console.log(\"apkVersion:\"+app.Client.GetClientConfigProperty(\"apkVersion\"));\r\n        if (!cc.sys.isNative){\r\n            //不是真机，直接调用登录\r\n            app.Client.LoadLogin();\r\n            return;\r\n        }\r\n        this.scheduleOnce(function(){\r\n            let percent=app[\"updatepercent\"];\r\n            console.log(\"CheckHotUpdate timeout begin\");\r\n            if(!percent){\r\n                console.log(\"CheckHotUpdate timeout Destroy\");\r\n                app.Client.LoadLogin();\r\n                app.HotUpdateMgr().Destroy();\r\n            }\r\n        },10);\r\n        app.HotUpdateMgr().Init();\r\n        app.ApkUpdateMgr().CheckVersion(app.Client.GetClientConfigProperty(\"apkUpdateURL\"),app.Client.GetClientConfigProperty(\"apkVersion\"));\r\n    \r\n\r\n    },\r\n\r\n    //列表随机\r\n    ListChoice:function(targetList){\r\n        var length = targetList.length;\r\n        if(length < 1){\r\n            return null;\r\n        }\r\n        return targetList[Math.floor(Math.random()*(length))];\r\n    },\r\n\r\n    //初始化表数据\r\n    InitTable:function(){\r\n        this.AllTableDict = {\r\n            \"DiamondStore\":null,\r\n            \"Effect\":null,\r\n            \"Face\":null,\r\n            \"FirstCharge\":null,\r\n            \"gameCreate\":null,\r\n            \"GameHelp\":null,\r\n            \"gameList\":null,\r\n            \"gametype\":null,\r\n            \"Gift\":null,\r\n            \"IntegrateImage\":null,\r\n            \"keywords\":null,\r\n            \"NewSysMsg\":null,\r\n            \"practice\":null,\r\n            \"robot\":null,\r\n            \"roomcost\":null,\r\n            \"SceneInfo\":null,\r\n            \"signin\":null,\r\n            \"Sound\":null,\r\n            \"trusteeshipTime\":null,\r\n            \"selectCity\":null,\r\n            \"ServiceAgreement\":null\r\n        };\r\n        this.AllTableNameList = Object.keys(this.AllTableDict);\r\n        \r\n        //每次加载几张配置表\r\n        this.PerTimeTableCount = 2;\r\n        this.loadTableCount = 0;\r\n    },\r\n\r\n    InitRes:function(){\r\n\r\n        this.AllResDict = {\r\n            //\"soccer_font\":\"font\",\r\n            \"UILogin\":\"ui\",\r\n        };\r\n        this.AllResNameList = Object.keys(this.AllResDict);\r\n       \r\n        this.PerTimeResCount = 1;\r\n        this.loadResCount = 0;\r\n    },\r\n\r\n    InitResDir:function(){\r\n\r\n        this.AllResJsonDict = {\r\n        }\r\n        this.AllResJsonNameList = Object.keys(this.AllResJsonDict);\r\n    },\r\n    UpdateProcess:function(){\r\n\r\n        // let percent = Math.floor((this.loadTableCount + this.loadResCount)*100.0/this.totalCount);\r\n        let percent=app[\"updatepercent\"];\r\n        //this.SysLog(\"UpdateProcess  percent=%s, active:%s\",percent, this.barUpdate.node.active);\r\n        let startCompress=app[\"startCompress\"];\r\n        if(!percent){\r\n            percent = 0;\r\n        }\r\n\r\n        if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n        \r\n        if(percent > 0.1 && this.barUpdate.node.active == false){\r\n            this.SysLog(\"UpdateProcess set active true\");\r\n            this.barUpdate.node.active = true;\r\n            this.barApkUpdate.node.active = false;\r\n        }\r\n        //this.SysLog(\"UpdateProcess  percent=%s, active:%s\",percent, this.barUpdate.node.active);\r\n        if (startCompress) {\r\n            this.LabelUpdating.string=\"资源包解压中...\";\r\n            this.lbUpdateProcess.string ='';\r\n        }else{\r\n            if(percent==100){\r\n                this.LabelUpdating.string=\"资源更新完成\";\r\n                this.lbUpdateProcess.string = `${percent}%`;\r\n            }else{\r\n                this.LabelUpdating.string=\"正在更新资源中\";\r\n                this.lbUpdateProcess.string = `${percent}%`;\r\n            }\r\n        }\r\n        \r\n        this.barUpdate.progress = percent/100.0;\r\n        \r\n        //this.SysLog(\"percent:%s, processtest:%s\", this.barUpdate.progress, this.lbUpdateProcess.string);\r\n    },\r\n\r\n    OnEvent_LoadApkProess:function(event){\r\n        this.xinhua.active=false;\r\n        let downLoadMgr = app.DownLoadMgr();\r\n        this.SysLog(\"scene OnEvent_LoadApkProess event=%s,state:%s, progress:%s\",event.toString(), event.detail[\"state\"], downLoadMgr.GetDownLoadStateProgress() );\r\n        if (event.detail[\"state\"] == downLoadMgr.GetDownLoadStateProgress()) {\r\n            var percent = event.detail[\"proess\"];\r\n            //this.SysLog(\"scene OnEvent_LoadApkProess progress=%s\",percent);\r\n            //app[\"updatepercent\"] = percent;\r\n            if(!percent){\r\n                percent=   0;\r\n            }\r\n            //this.SysLog(\"OnEvent_LoadApkProess 22222 percent=%s\",percent);\r\n            if(percent==100){\r\n                this.LabelApkUpdating.string=\"游戏更新完成\";\r\n            }else{\r\n                this.LabelApkUpdating.string=\"正在更新游戏中\";\r\n            }\r\n            this.barApkUpdate.progress = percent/100.0;\r\n            this.lbApkUpdateProcess.string = `${percent}%`;\r\n        } else if(event.detail[\"state\"] == downLoadMgr.GetDownLoadStateError()) {\r\n            this.LabelApkUpdating.string=\"游戏更新失败,请检查网络！\";\r\n        }\r\n    },\r\n\r\n    //每帧回掉\r\n    update: function (dt) {\r\n        //this.SysLog(\"UpdateProcess  update\");\r\n        //没有初始化客户端实例\r\n        if(!this.Client){\r\n            return\r\n        }\r\n\r\n        if(this.debugModel){\r\n            this.debugModel.OnUpdate(dt);\r\n        }\r\n\r\n        this.UpdateProcess();\r\n\r\n        switch (this.initState){\r\n\r\n            case this.State_InitClient:\r\n                \r\n                break;\r\n\r\n            case this.State_SendGateHttp:\r\n                break;\r\n            case this.State_LoadText:\r\n                this.OnLoadTable();\r\n                break\r\n\r\n            case this.State_LoadRes:\r\n               this.OnLoadRes();\r\n                break\r\n            \r\n            case this.State_StartGame:\r\n                this.initState = this.State_RunGame;\r\n                if(this.debugModel){\r\n                    this.node.removeChild(this.debugModel.node);\r\n                }\r\n                this.ReSetClientConfig();\r\n                this.Client.OnInitClientFinish(this.allTableDataDict, this.clientConfig);\r\n\r\n                if(this.Client) this.Client.RegEvent(\"LoadApkProess\", this.OnEvent_LoadApkProess, this);\r\n                // let needReloadScene = cc.sys.localStorage.getItem(\"needReloadScene\");\r\n                // if (needReloadScene && needReloadScene != \"\") {\r\n                //     console.log(\"直接加载主场景\");\r\n                //     app.SceneManager().LoadScene(\"mainScene\");\r\n                // }else{\r\n                //     this.CheckHotUpdate();\r\n                // }\r\n                this.CheckHotUpdate();\r\n                break\r\n\r\n            case this.State_RunGame:\r\n                break\r\n\r\n            case this.State_LoadResFail:\r\n                break\r\n                \r\n            case this.State_ClientOutOfDate:\r\n                break\r\n\r\n            default:\r\n                break\r\n        }\r\n    },\r\n    ReSetClientConfig:function(){\r\n        return;\r\n        /*this.clientConfig['GameServerIP']=this.MultiPoint(this.clientConfig['GameServerIP']);\r\n        this.clientConfig['AccountServerIP']=this.MultiPoint(this.clientConfig['AccountServerIP']);\r\n        this.clientConfig['OrderServerIP']=this.MultiPoint(this.clientConfig['OrderServerIP']);\r\n        this.clientConfig['ResServerIP']=this.MultiPoint(this.clientConfig['ResServerIP']);*/\r\n    },\r\n    MultiPoint:function(serverIP){\r\n        if(serverIP==\"\"){\r\n            return \"\";\r\n        }\r\n        if(!cc.sys.isNative){\r\n            return serverIP;\r\n        }\r\n        if(this.localConfig[\"IsGaoFang\"]==0){\r\n            //fitst配置了高防\r\n            return serverIP;\r\n        }\r\n        let AccessPoint=app.LocalDataManager().GetConfigProperty(\"Account\", \"AccessPoint\");\r\n        if(AccessPoint>0){\r\n             if(AccessPoint==1){\r\n                 return 'line1.'+serverIP;\r\n             }else if(AccessPoint==2){\r\n                 return 'line2.'+serverIP;\r\n             }else if(AccessPoint==3){\r\n                 return 'line3.'+serverIP;\r\n             }\r\n        }\r\n        let AccountActive = app.LocalDataManager().GetConfigProperty(\"Account\", \"AccountActive\");\r\n        //如果该城市有独立节点，则调用本城市自己的节点\r\n        let myCityID = cc.sys.localStorage.getItem(\"myCityID\");\r\n        if(myCityID){\r\n            let CityPoints=this.localConfig[\"CityPoints\"];\r\n            if(CityPoints){\r\n                let CityPointsList=CityPoints.split(',');\r\n                if(CityPointsList.indexOf(myCityID)>-1){\r\n                    //用户选择的城市有配置独立的节点\r\n                    if(AccountActive>10){\r\n                        return 'h'+myCityID+'.'+serverIP; //活跃用户\r\n                    }else{\r\n                        return 'c'+myCityID+'.'+serverIP; //普通用户\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(AccountActive>100){\r\n            serverIP='a100.'+serverIP;\r\n        }else if(AccountActive>50){\r\n            serverIP='i50.'+serverIP;\r\n        }else if(AccountActive>10){\r\n            serverIP='x10.'+serverIP;\r\n        }\r\n\r\n\r\n        return serverIP;\r\n    },\r\n\r\n    //加载表数据回掉\r\n    OnLoadTable:function(){\r\n\r\n        let that = this;\r\n        let allCount = Object.keys(this.AllTableDict).length;\r\n        \r\n        //加载完所有表格\r\n        if(this.loadTableCount >= allCount){\r\n            this.initState = this.State_LoadRes;\r\n        }\r\n\r\n        for(let index = 0; index < this.PerTimeTableCount; index++){\r\n\r\n            let tableName = this.AllTableNameList.pop();\r\n            //已经发送所有表请求\r\n            if(!tableName){\r\n                break\r\n            }\r\n            let keyNameList = this.AllTableDict[tableName];\r\n            let tablePath = 'jsonData/' + tableName;\r\n\r\n            this.Client.ControlManager.CreateLoadPromise(tablePath, cc.RawAsset)\r\n                                    .then(function(textData){\r\n                                        that.loadTableCount += 1;\r\n                                        that.allTableDataDict[tableName] = {\"Data\":textData, \"KeyNameList\":keyNameList};\r\n                                    })\r\n                                    .catch(function(error){\r\n                                        that.ErrLog(\"tablePath(%s) error:%s\", tablePath, error.stack);\r\n                                        that.initState = that.State_LoadResFail;\r\n                                    })\r\n        }\r\n    },\r\n\r\n    //加载其他资源\r\n    OnLoadRes:function(){\r\n        let that = this;\r\n        let allCount = Object.keys(this.AllResDict).length;\r\n        \r\n        //加载完所有\r\n        if(this.loadResCount >= allCount){\r\n            this.initState = this.State_StartGame;\r\n        }\r\n\r\n        for(let index = 0; index < this.PerTimeResCount; index++){\r\n\r\n            let resName = this.AllResNameList.pop();\r\n            //已经发送所有表请求\r\n            if(!resName){\r\n                break\r\n            }\r\n            let pathName = this.AllResDict[resName];\r\n            let resPath = pathName + '/' + resName;\r\n\r\n            let resType = \"\";\r\n            //如果加载河图\r\n            if(pathName == \"atlas\"){\r\n                resType = cc.SpriteAtlas;\r\n            }\r\n\r\n            this.Client.ControlManager.CreateLoadPromise(resPath, resType)\r\n                                    .then(function(fileData){\r\n                                        that.loadResCount += 1;\r\n                                    })\r\n                                    .catch(function(error){\r\n                                        that.ErrLog(\"resPath(%s) error:%s\", resPath, error.stack);\r\n                                        that.initState = that.State_LoadResFail;\r\n                                    })\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * 发送HTTP请求\r\n     * * @param requestType POST or GET\r\n     */\r\n    SendHttpRequest:function(serverUrl, argString, requestType, sendPack){\r\n        // app.NetRequest().SendHttpRequest(serverUrl, argString, requestType, sendPack, 3000, \r\n        //     this.OnReceiveHttpPack.bind(this), \r\n        //     this.OnConnectHttpFail.bind(this),\r\n        //     this.UseLocalConfig.bind(this),\r\n        //     this.OnConnectHttpFail.bind(this),\r\n        // );\r\n        if (app.ControlManager().IsOpenVpn()) {\r\n            return;\r\n        }\r\n        var url = [serverUrl, argString].join(\"\")\r\n\r\n        var dataStr = JSON.stringify(sendPack);\r\n        let timeOut=false;\r\n        //每次都实例化一个，否则会引起请求结束，实例被释放了\r\n        var httpRequest = new XMLHttpRequest();\r\n\r\n        httpRequest.timeout = 3000;\r\n\r\n\r\n        httpRequest.open(requestType, url, true);\r\n        //服务器json解码\r\n        httpRequest.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n        var that = this;\r\n        httpRequest.onerror = function(){\r\n            that.ErrLog(\"httpRequest.error:%s\", url);\r\n            that.OnConnectHttpFail(serverUrl, httpRequest.readyState, httpRequest.status);\r\n        };\r\n        httpRequest.ontimeout = function(){\r\n            timeOut=true;\r\n            that.UseLocalConfig();\r\n        };\r\n        httpRequest.onreadystatechange = function(){\r\n            if(timeOut==true){\r\n                return;\r\n            }\r\n            //执行成功\r\n            if (httpRequest.status == 200){\r\n                if(httpRequest.readyState == 4){\r\n                    that.OnReceiveHttpPack(serverUrl, httpRequest.responseText);\r\n                }\r\n            }\r\n            else{\r\n                that.OnConnectHttpFail(serverUrl, httpRequest.readyState, httpRequest.status);\r\n                that.ErrLog(\"onreadystatechange(%s,%s)\", httpRequest.readyState, httpRequest.status);\r\n            }\r\n        };\r\n        httpRequest.send(dataStr);\r\n\r\n    },\r\n\r\n    //HTTP请求失败\r\n    OnConnectHttpFail:function(serverUrl, readyState, status){\r\n        /*this.ErrLog(\"OnConnectHttpFail(%s, %s,%s)\", serverUrl, readyState, status);\r\n        this.initState = this.State_LoadResFail;\r\n        this.errorNode.active = 1;*/\r\n        this.UseLocalConfig();    \r\n        this.ChangeMPID();\r\n    },\r\n    UseLocalConfig:function(){\r\n        app[\"GateServerInfo\"] = {\"GateServerIP\":\"0.0.0.0\", \"GateServerPort\":0};\r\n        this.initState = this.State_LoadText;\r\n        this.clientConfig = JSON.parse(JSON.stringify(this.localConfig));\r\n        //保存到本地供子游戏调用\r\n        cc.sys.localStorage.setItem(\"localConfig\", JSON.stringify(this.localConfig));\r\n    },\r\n    ChangeMPID:function(){\r\n        if(app.ComTool().IsIOS()){\r\n            let vetsion=app.NativeManager().CallToNative(\"getVersion\", [], \"String\");\r\n            if (typeof(vetsion) != \"undefined\") {\r\n                if(vetsion.startsWith(\"10.\")){\r\n                    this.clientConfig[\"MPID\"] =\"dph_majia\";\r\n                }\r\n                if(vetsion.startsWith(\"11.\")){\r\n                    this.clientConfig[\"MPID\"] =\"dph_majia2\";\r\n                }\r\n                if(vetsion.startsWith(\"12.\")){\r\n                    this.clientConfig[\"MPID\"] =\"dph_majia3\";\r\n                }\r\n            }\r\n            let pack4=cc.sys.localStorage.getItem(\"myPack4\");\r\n            if(pack4==\"hall_split\"){\r\n                this.clientConfig[\"MPID\"] =\"dph_ios4\";\r\n                return;\r\n            }\r\n            let pack5=cc.sys.localStorage.getItem(\"myPack5\");\r\n            if(pack5==\"hall_split\"){\r\n                this.clientConfig[\"MPID\"] =\"dph_ios2\";\r\n                return;\r\n            }\r\n            let pack=cc.sys.localStorage.getItem(\"myPack\");\r\n            if(pack==\"hall_split\"){\r\n                this.clientConfig[\"MPID\"] =\"dph_ios\";\r\n                return;\r\n            }\r\n            let pack2=cc.sys.localStorage.getItem(\"myPack2\");\r\n            if(pack2==\"hall_split\"){\r\n                this.clientConfig[\"MPID\"] =\"dph_ios2\";\r\n                return;\r\n            }\r\n            let pack3=cc.sys.localStorage.getItem(\"myPack3\");\r\n            if(pack3==\"hall_split\"){\r\n                this.clientConfig[\"MPID\"] =\"dph_ios3\";\r\n                return;\r\n            }\r\n            \r\n        }\r\n    },\r\n    //http请求回复\r\n    OnReceiveHttpPack:function(serverUrl, httpResText){\r\n        try{\r\n\r\n            let serverPack = JSON.parse(httpResText);\r\n            if(typeof(serverPack)== 'object' && serverPack){\r\n                if(serverPack[\"IsSuccess\"] == 1){\r\n                    this.clientConfig = serverPack[\"ClientConfig\"];\r\n                    //追加本地标示\r\n                    this.clientConfig[\"GameID\"] = this.localConfig[\"GameID\"];\r\n                    this.clientConfig[\"ConfigVersion\"] = this.localConfig[\"ConfigVersion\"];\r\n                    this.clientConfig[\"MPID\"] = this.localConfig[\"MPID\"];\r\n                    this.initState = this.State_LoadText;\r\n                    this.SysLog(\"LoadClientConfig success\");\r\n                    //保存到本地供子游戏调用\r\n                    cc.sys.localStorage.setItem(\"localConfig\", JSON.stringify(this.clientConfig));\r\n                }\r\n                else{\r\n                    this.clientConfig = {};\r\n                    this.initState = this.State_LoadResFail;\r\n                    this.errorNode.active = 1;\r\n                }\r\n            }else{\r\n                this.UseLocalConfig();\r\n            }\r\n            this.ChangeMPID();\r\n        }\r\n        catch (error){\r\n            this.initState = this.State_LoadResFail;\r\n            this.clientConfig = {};\r\n            this.ChangeMPID();\r\n        }\r\n    },\r\n\r\n    OnClick:function(eventTouch, eventData){\r\n        let btnNode = eventTouch.currentTarget;\r\n        let btnName = btnNode.name;\r\n\r\n        if(btnName == \"btn_tryLoad\"){\r\n            this.Click_btn_tryLoad();\r\n        }\r\n        else{\r\n            this.ErrLog(\"OnClick not find:%s\", btnName);\r\n        }\r\n    },\r\n\r\n    Click_btn_tryLoad:function(){\r\n        this.errorNode.active = 0;\r\n\r\n        if(!this.gateServerUrl){\r\n            this.ErrLog(\"Click_btn_tryLoad not find gateServerUrl\");\r\n            return\r\n        }\r\n\r\n        //开始请求客户端配置\r\n        this.initState = this.State_SendGateHttp;\r\n        this.SendHttpRequest(this.gateServerUrl, \"?Sign=ddcat\", \"POST\", this.gateSendPack);\r\n    },\r\n\r\n    \r\n\r\n});\r\n"]}