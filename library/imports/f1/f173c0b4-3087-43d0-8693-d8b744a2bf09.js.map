{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\sdk/assets\\script\\sdk\\hall_NativeNotify.js"],"names":["app","require","window","hall_NativeNotify","OnNativeNotify","eventType","eventDataString","console","log","dataDict","JSON","parse","WeChatAppManager","OnNativeNotifyWXLogin","XLAppManager","OnNativeNotifyXLLogin","LineAppManager","OnNativeNotifyLineLogin","FacebookAppManager","OnNativeNotifyFacebookLogin","OnNativeNotifyFacebookUserInfo","OnNativeNotifyWXShare","OnNativeNotifyWXPay","Client","OnEvent","DownLoadMgr","OnDownLoadEvent","LocationOnStartMgr","OnGetLocationCallBack","OnGetLocationForBaiduMapCallBack","error"],"mappings":"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","file":"hall_NativeNotify.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\sdk","sourcesContent":["/*\n * \tNativeManager.js\n * \t移动端接口管理器\n *\n *\tauthor:hongdian\n *\tdate:2014-10-28\n *\tversion:1.0\n *\n * 修改时间 修改人 修改内容:\n *\n * change: \"2014-10-28 20:24\" hongdian 同步C++\n *\n */\nvar app = require(\"app\");\n/**\n * 类构造\n */\nwindow.hall_NativeNotify = {\n    //native平台回调\n    OnNativeNotify: function (eventType, eventDataString) {\n        try {\n            console.log(\"hall_NativeNotify OnNativeNotify eventType:\" + eventType + \",eventDataString:\" + eventDataString);\n            // this.ErrLog(\"OnNativeNotify eventType:%s, eventDataString:%s\",eventType, eventDataString);\n            let dataDict = JSON.parse(eventDataString);\n            if (dataDict[\"subGameName\"] != \"hall\") {\n                return;\n            }\n            if (eventType == \"wechat\") { //微信登录\n                app.WeChatAppManager().OnNativeNotifyWXLogin(dataDict);\n            } else if (eventType == \"XLLogin\") {  //闲聊登录\n                app.XLAppManager().OnNativeNotifyXLLogin(dataDict);\n            }\n            else if (eventType == \"OnLineSDKLogin\") {  // line 登录\n                app.LineAppManager().OnNativeNotifyLineLogin(dataDict);\n            }\n            else if (eventType == \"OnFacebookSDKLogin\") {  // Facebook 登录\n                app.FacebookAppManager().OnNativeNotifyFacebookLogin(dataDict);\n            }\n            else if (eventType == \"OnFacebookUserInfo\") {  // Facebook 用户信息\n                app.FacebookAppManager().OnNativeNotifyFacebookUserInfo(dataDict);\n            }\n            else if (eventType == \"wechatShare\") {  //微信分享\n                app.WeChatAppManager().OnNativeNotifyWXShare(dataDict);\n            } else if (eventType == \"wechatPay\") { //微信支付\n                app.WeChatAppManager().OnNativeNotifyWXPay(dataDict);\n            } else if (eventType == \"onBatteryLevel\") { //电量回掉\n                app.Client.OnEvent(\"EvtBatteryLevel\", { \"Level\": dataDict[\"Level\"], \"status\": dataDict[\"status\"] });\n            } else if (eventType == \"apkProess\") { //下载apk进度\n                app.Client.OnEvent(\"LoadApkProess\", { \"progress\": dataDict[\"proess\"] });\n            } else if (eventType == \"download\") { //下载\n                app.DownLoadMgr().OnDownLoadEvent(dataDict);\n            } else if (eventType == \"palyAudioFinsh\") { //播放完成\n                app.Client.OnEvent(\"palyAudioFinsh\", {});\n            } else if (eventType == \"AudioError\") {//录音失败\n                app.Client.OnEvent(\"AudioError\", {});\n            } else if (eventType == \"AudioStopError\") {//录音失败\n                app.Client.OnEvent(\"AudioStopError\", {});\n            } else if (eventType == \"MedioRecordError\") {//播放失败\n                app.Client.OnEvent(\"MedioRecordError\", {});\n            } else if (eventType == \"wellPrepared\") {//准备录音\n                app.Client.OnEvent(\"wellPrepared\", {});\n            } else if (eventType == \"RecordAudioFinsh\") { //录音完成\n                app.Client.OnEvent(\"RECORDAUDIOFINSH\", {});\n            } else if (eventType == \"GETLOCATION\") { //获取定位\n                app.LocationOnStartMgr().OnGetLocationCallBack(dataDict);\n            } else if (eventType == \"OnGetLocationForBaiduMapCallBack\") { //获取百度定位结果\n                app.LocationOnStartMgr().OnGetLocationForBaiduMapCallBack(dataDict);\n            } else if (eventType == \"copyText\") { //获取定位\n                app.Client.OnEvent(\"OnCopyTextNtf\", dataDict);\n            } else if (eventType == \"getClipboardText\") { //获取剪切板数据\n                app.Client.OnEvent(\"OnGetClipboardTextNtf\", dataDict);\n            } else if (eventType == \"DDShare\") {\n                app.Client.OnEvent(\"OnDDShare\", dataDict);\n            } else if (eventType == \"XLShare\") {\n                app.Client.OnEvent(\"OnXLShare\", dataDict);\n            } else if (eventType == \"OnUploadImageCallBack\") {\n                app.Client.OnEvent(\"OnUploadImage\", dataDict);\n            } else if (eventType == \"CheckMicPermission\") {\n                app.Client.OnEvent(\"CheckMicPermission\", dataDict);\n            }\n            else {\n                // this.ErrLog(\"OnNativeNotify not find eventType:%s\", eventType);\n                console.log(\"hall_NativeNotify OnNativeNotify not find eventType: \" + eventType);\n            }\n        }\n        catch (error) {\n            if (eventType == 'wechatShare') {\n                //还是给分享成功回调\n                app.WeChatAppManager().OnNativeNotifyWXShare({ \"ErrCode\": 0 });\n            } else {\n                // this.ErrLog(\"OnNativeNotify(%s,%s) error(%s), error.stack:%s\", eventType, eventDataString, error, error.stack);\n                console.log(\"hall_NativeNotify OnNativeNotify error: \" + eventType);\n            }\n        }\n    },\n}"]}