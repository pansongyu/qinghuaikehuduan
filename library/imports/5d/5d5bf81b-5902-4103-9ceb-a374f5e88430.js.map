{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\ui/assets\\script\\ui\\UILogin02.js"],"names":["app","require","cc","Class","extends","properties","btnLogin","Button","toggle_agrgee","Toggle","btn_userAgree","OnCreateInit","SDKManager","RegEvent","Event_CodeError","Event_ConnectFail","Event_ChangeBtnState","event","argDict","detail","code","ShareDefine","KickOut_ServerClose","WaitForConfirm","ConfirmYN","ShowSysMsg","Client","OnEvent","BtnState","SysLog","isWebAnstanll","NativeManager","CallToNative","interactable","enableAutoGrayEffect","OnShow","isChecked","console","log","node","active","onLoginYouKe","HeroAccountManager","accountList","GetLocalAccountList","count","length","account","token","GetAccountToken","AccountLogin","OneKeyRegAccount","OnClick","btnName","btnNode","LoginBySDK","OnTimer","passSecond","IsDoLogining","scheduleOnce","sys","isNative","LoginByLineSDK","FormManager","ShowForm","ErrLog"],"mappings":";;;;;;AAAA;;;AAGA,IAAIA,MAAMC,QAAQ,KAAR,CAAV;;AAEAC,GAAGC,KAAH,CAAS;AACLC,UAASH,QAAQ,UAAR,CADJ;;AAGLI,aAAY;AACRC,YAASJ,GAAGK,MADJ;AAERC,iBAAcN,GAAGO,MAFT;AAGRC,iBAAcR,GAAGK;AAHT,EAHP;;AASRI,eAAa,wBAAU;AACtB,OAAKC,UAAL,GAAkBZ,IAAIY,UAAJ,EAAlB;AACA,OAAKC,QAAL,CAAc,WAAd,EAA2B,KAAKC,eAAhC;AACA,OAAKD,QAAL,CAAc,aAAd,EAA6B,KAAKE,iBAAlC;AACA,OAAKF,QAAL,CAAc,gBAAd,EAAgC,KAAKG,oBAArC;AACA,EAdO;;AAgBR;AACAF,kBAAgB,yBAASG,KAAT,EAAe;AAC9B,MAAIC,UAAUD,MAAME,MAApB;AACA,MAAIC,OAAOF,QAAQ,MAAR,CAAX;AACA,MAAGE,QAAQ,KAAKC,WAAL,CAAiBC,mBAA5B,EAAgD;AAC/C,QAAKC,cAAL,CAAoB,YAApB,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,KAAKF,WAAL,CAAiBG,SAA3D;AACA;AACD,EAvBO;;AAyBR;AACAT,oBAAkB,2BAASE,KAAT,EAAe;AAChC,MAAIC,UAAUD,MAAME,MAApB;AACA,MAAG,CAACD,QAAQ,gBAAR,CAAJ,EACC,KAAKO,UAAL,CAAgB,iBAAhB;AACDzB,MAAI0B,MAAJ,CAAWC,OAAX,CAAmB,gBAAnB,EAAqC,EAAC,SAAQ,CAAT,EAArC;AACA;AACA3B,MAAI0B,MAAJ,CAAWC,OAAX,CAAmB,YAAnB,EAAiC,YAAjC;AACA,EAjCO;;AAmCR;AACGX,uBAAqB,8BAASC,KAAT,EACrB;AACC,MAAIW,WAAWX,MAAME,MAAN,CAAa,OAAb,CAAf;AACA,OAAKU,MAAL,CAAY,kCAAZ,EAA+CD,QAA/C;;AAEA,MAAIE,gBAAgB9B,IAAI+B,aAAJ,GAAoBC,YAApB,CAAiC,kBAAjC,EAAqD,EAArD,CAApB;;AAEA,MAAIJ,YAAY,CAAhB,EAAmB;AAClB,QAAKtB,QAAL,CAAc2B,YAAd,GAA6B,CAA7B;AACG,QAAK3B,QAAL,CAAc4B,oBAAd,GAAqC,CAArC;AACH,GAHD,MAGO,IAAGJ,aAAH,EAAkB;AACxB,QAAKxB,QAAL,CAAc2B,YAAd,GAA6B,CAA7B;AACG,QAAK3B,QAAL,CAAc4B,oBAAd,GAAqC,CAArC;AACA;AACNlC,OAAI0B,MAAJ,CAAWC,OAAX,CAAmB,YAAnB,EAAiC,YAAjC;AACG;AACD,EApDI;AAqDLQ,SAAO,kBAAU;AAChB,OAAK3B,aAAL,CAAmB4B,SAAnB,GAA+B,IAA/B;AACAC,UAAQC,GAAR,CAAY,kBAAZ;;AAEA,MAAIR,gBAAgB9B,IAAI+B,aAAJ,GAAoBC,YAApB,CAAiC,kBAAjC,EAAqD,EAArD,CAApB;AACA,MAAG,CAACF,aAAJ,EAAkB;AACjB;AACA,QAAKxB,QAAL,CAAciC,IAAd,CAAmBC,MAAnB,GAA4B,CAA5B;AACA,GAHD,MAGK;AACJ,QAAKlC,QAAL,CAAciC,IAAd,CAAmBC,MAAnB,GAA4B,CAA5B;AACA;AACD,EAhEI;;AAkELC,eAAa,wBAAU;AACtB,OAAKZ,MAAL,CAAY,cAAZ;AACA,MAAIa,qBAAqB1C,IAAI0C,kBAAJ,EAAzB;AACA,MAAIC,cAAcD,mBAAmBE,mBAAnB,EAAlB;AACG,MAAIC,QAAQF,YAAYG,MAAxB;;AAEA,MAAIC,UAAU,EAAd;AACA,MAAIC,QAAQ,EAAZ;;AAEA,MAAGH,KAAH,EAAS;AACLE,aAAUJ,YAAYE,QAAM,CAAlB,CAAV;AACAG,WAAQN,mBAAmBO,eAAnB,CAAmCF,OAAnC,CAAR;;AAEH,QAAKlB,MAAL,CAAY,gDAAZ,EAA8DkB,OAA9D,EAAuEC,KAAvE;;AAEA;AACAN,sBAAmBQ,YAAnB,CAAgCH,OAAhC,EAAyCC,KAAzC,EAAgD,CAAhD;AACA,GARD,MAQK;AACJ,QAAKnB,MAAL,CAAY,oDAAZ,EAAkEkB,OAAlE,EAA2EC,KAA3E;AACAN,sBAAmBS,gBAAnB;AACA;AACJ,EAvFI;;AAyFL;;;AAGAC,UAAQ,iBAASC,OAAT,EAAkBC,OAAlB,EAA0B;AACjC,MAAGD,WAAW,WAAd,EAA0B;AACzB,OAAG,CAAC,KAAK7C,aAAL,CAAmB4B,SAAvB,EAAiC;AAChC,SAAKX,UAAL,CAAgB,oBAAhB;AACA;AACA;AACDzB,OAAI0B,MAAJ,CAAWC,OAAX,CAAmB,gBAAnB,EAAqC,EAAC,SAAQ,CAAT,EAArC;AACA,QAAKf,UAAL,CAAgB2C,UAAhB;AACH,OAAIC,UAAU,SAAVA,OAAU,CAASC,UAAT,EAAoB;AAC/B;AACAzD,QAAI0C,kBAAJ,GAAyBgB,YAAzB,CAAsC,KAAtC;AACA,IAHH;AAIA,QAAKC,YAAL,CAAkBH,OAAlB,EAA2B,GAA3B;AACG,GAZD,MAaE,IAAGH,WAAW,gBAAd,EAA+B;AAChC,OAAG,CAACnD,GAAG0D,GAAH,CAAOC,QAAX,EAAoB;AACnB;AACA;AACD,OAAG,CAAC,KAAKrD,aAAL,CAAmB4B,SAAvB,EAAiC;AAChC,SAAKX,UAAL,CAAgB,oBAAhB;AACA;AACA;AACDzB,OAAI0B,MAAJ,CAAWC,OAAX,CAAmB,gBAAnB,EAAqC,EAAC,SAAQ,CAAT,EAArC;AACA,QAAKf,UAAL,CAAgBkD,cAAhB;AACH,OAAIN,UAAU,SAAVA,OAAU,CAASC,UAAT,EAAoB;AAC/B;AACAzD,QAAI0C,kBAAJ,GAAyBgB,YAAzB,CAAsC,KAAtC;AACA,IAHH;AAIA,QAAKC,YAAL,CAAkBH,OAAlB,EAA2B,GAA3B;AACG,GAfC,MAgBG,IAAGH,WAAW,gBAAd,EAA+B;AACnC,QAAKU,WAAL,CAAiBC,QAAjB,CAA0B,gBAA1B;AACA,GAFI,MAGA,IAAGX,WAAW,iBAAd,EAAgC;AACpC,QAAKZ,YAAL;AACA,GAFI,MAEA;AACJ,QAAKwB,MAAL,CAAY,qBAAZ,EAAmCZ,OAAnC;AACA;AACD;;AAlII,CAAT","file":"UILogin02.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\ui","sourcesContent":["/*\r\n    UILogin02 登陆界面\r\n*/\r\nvar app = require(\"app\");\r\n\r\ncc.Class({\r\n    extends: require(\"BaseForm\"),\r\n\r\n    properties: {\r\n        btnLogin:cc.Button,\r\n        toggle_agrgee:cc.Toggle,\r\n        btn_userAgree:cc.Button\r\n    },\r\n\r\n\tOnCreateInit:function(){\r\n\t\tthis.SDKManager = app.SDKManager();\r\n\t\tthis.RegEvent(\"CodeError\", this.Event_CodeError);\r\n\t\tthis.RegEvent(\"ConnectFail\", this.Event_ConnectFail);\r\n\t\tthis.RegEvent(\"ChangeBtnState\", this.Event_ChangeBtnState);\r\n\t},\r\n\r\n\t//登录错误码\r\n\tEvent_CodeError:function(event){\r\n\t\tlet argDict = event.detail;\r\n\t\tlet code = argDict[\"Code\"];\r\n\t\tif(code == this.ShareDefine.KickOut_ServerClose){\r\n\t\t\tthis.WaitForConfirm(\"Code_10016\", [], [], this.ShareDefine.ConfirmYN)\r\n\t\t}\r\n\t},\r\n\r\n\t//连接服务器失败\r\n\tEvent_ConnectFail:function(event){\r\n\t\tlet argDict = event.detail;\r\n\t\tif(!argDict['bCloseByLogout'])\r\n\t\t\tthis.ShowSysMsg(\"Net_ConnectFail\");\r\n\t\tapp.Client.OnEvent(\"ChangeBtnState\", {\"state\":0});\r\n\t\t//关闭模态层\r\n\t\tapp.Client.OnEvent(\"ModalLayer\", \"ReceiveNet\");\r\n\t},\r\n\r\n\t//设置登录按钮的可点击状态\r\n    Event_ChangeBtnState:function(event)\r\n    {\r\n    \tlet BtnState = event.detail[\"state\"];\r\n    \tthis.SysLog(\"Event_ChangeBtnState BtnState:%s\",BtnState);\r\n\r\n    \tlet isWebAnstanll = app.NativeManager().CallToNative(\"isWXAppInstalled\", []);\r\n\r\n    \tif (BtnState == 1) {\r\n    \t\tthis.btnLogin.interactable = 0;\r\n        \tthis.btnLogin.enableAutoGrayEffect = 1;\r\n    \t} else if(isWebAnstanll) {\r\n    \t\tthis.btnLogin.interactable = 1;\r\n        \tthis.btnLogin.enableAutoGrayEffect = 0;\r\n        \t//关闭模态层\r\n\t\t\tapp.Client.OnEvent(\"ModalLayer\", \"ReceiveNet\");\r\n    \t}\r\n    },\r\n    OnShow:function(){\r\n    \tthis.toggle_agrgee.isChecked = true;\r\n    \tconsole.log(\"UILogin01 OnShow\");\r\n\r\n    \tlet isWebAnstanll = app.NativeManager().CallToNative(\"isWXAppInstalled\", []);\r\n    \tif(!isWebAnstanll){\r\n    \t\t//app.Client.OnEvent(\"ChangeBtnState\", {\"state\":1});\r\n    \t\tthis.btnLogin.node.active = 0;\r\n    \t}else{\r\n    \t\tthis.btnLogin.node.active = 1;\r\n    \t}\r\n    },\r\n\r\n    onLoginYouKe:function(){\r\n    \tthis.SysLog(\"onLoginYouKe\");\r\n    \tlet HeroAccountManager = app.HeroAccountManager();\r\n    \tlet accountList = HeroAccountManager.GetLocalAccountList();\r\n        let count = accountList.length;\r\n\r\n        let account = \"\";\r\n        let token = \"\";\r\n\r\n        if(count){\r\n            account = accountList[count-1];\r\n            token = HeroAccountManager.GetAccountToken(account);\r\n\t        \r\n\t        this.SysLog(\"onLoginYouKe AccountLogin account:%s, token:%s\", account, token);\r\n\r\n\t        //账号密码登陆\r\n        \tHeroAccountManager.AccountLogin(account, token, 1);\r\n        }else{\r\n        \tthis.SysLog(\"onLoginYouKe OneKeyRegAccount account:%s, token:%s\", account, token);\r\n        \tHeroAccountManager.OneKeyRegAccount();\r\n        }\r\n    },\r\n\r\n    //---------点击函数---------------------\r\n\r\n\r\n    OnClick:function(btnName, btnNode){\r\n\t    if(btnName == \"btn_login\"){\r\n\t    \tif(!this.toggle_agrgee.isChecked){\r\n\t    \t\tthis.ShowSysMsg(\"MSG_NOT_USER_AGREE\");\r\n\t    \t\treturn;\r\n\t    \t}\r\n\t    \tapp.Client.OnEvent(\"ChangeBtnState\", {\"state\":1});\r\n\t\t    this.SDKManager.LoginBySDK();\r\n\t\t\tvar OnTimer = function(passSecond){\r\n\t\t\t\t\t\t//app.Client.OnEvent(\"ChangeBtnState\", {\"state\":0});\r\n\t\t\t\t\t\tapp.HeroAccountManager().IsDoLogining(false);\r\n\t\t\t\t\t};\r\n\t\t\tthis.scheduleOnce(OnTimer, 5.0);  \r\n\t    }\r\n\t\telse if(btnName == \"btn_login_line\"){\r\n\t    \tif(!cc.sys.isNative){\r\n\t    \t\treturn;\r\n\t    \t}\r\n\t    \tif(!this.toggle_agrgee.isChecked){\r\n\t    \t\tthis.ShowSysMsg(\"MSG_NOT_USER_AGREE\");\r\n\t    \t\treturn;\r\n\t    \t}\r\n\t    \tapp.Client.OnEvent(\"ChangeBtnState\", {\"state\":1});\r\n\t\t    this.SDKManager.LoginByLineSDK();\r\n\t\t\tvar OnTimer = function(passSecond){\r\n\t\t\t\t\t\t//app.Client.OnEvent(\"ChangeBtnState\", {\"state\":0});\r\n\t\t\t\t\t\tapp.HeroAccountManager().IsDoLogining(false);\r\n\t\t\t\t\t};\r\n\t\t\tthis.scheduleOnce(OnTimer, 5.0);  \r\n\t    }    \r\n\t    else if(btnName == 'btn_user_agree'){\r\n\t    \tthis.FormManager.ShowForm(\"UIFuWuTiaoKuan\");\r\n\t    }\r\n\t    else if(btnName == 'btn_login_youke'){\r\n\t    \tthis.onLoginYouKe();\r\n\t    }else{\r\n\t\t    this.ErrLog(\"OnClick not find:%s\", btnName);\r\n\t    }\r\n    },\r\n    \r\n});\r\n"]}