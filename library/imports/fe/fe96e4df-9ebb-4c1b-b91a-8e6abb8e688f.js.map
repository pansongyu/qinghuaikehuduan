{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\dbmanager\\HeroAccount/assets\\script\\dbmanager\\HeroAccount\\HeroAccountManager.js"],"names":["app","require","HeroAccountManager","BaseClass","extend","Init","JS_Name","NetManager","LocalDataManager","ShareDefine","SysNotifyManager","SysDataManager","RegHttpNetPack","OnHttpPack_AccountLogin","OnHttpPack_RegAccountResult","OnHttpPack_ChangeAccountPswResult","Client","RegEvent","Event_CodeError","Event_ConnectFail","Event_ConnectHttpFail","Event_ConnectSuccess","console","log","PswReg","AccountReg","AccountFirstStrReg","OnReload","localAccountDict","logInAccountList","InitLocalAccount","lastChangeTime","Log","SysLog","IsDoLogining","dataInfo","event","codeInfo","KickOut_AccountAuthorizationFail","accountType","GetClientConfigProperty","SDKType_WeChat","gameLoadUrl","window","location","href","SetConfigProperty","FormManager","IsFormShow","KickOut_MobileAuthorizationFail","ShowSysMsg","UpdateAccessPoint","now","Date","getTime","ChangeAccessPoint","InitServerAddress","cc","sys","isNative","AccessPoint","GetConfigProperty","accountDict","accountList","charAccount","InArray","ErrLog","AddNewAccountList","account","token","Remove","push","SavePlayerAccount","DeleteLocalAccount","DeleteAllLocalAccount","GetAccountToken","hasOwnProperty","GetLocalAccountList","GetAccountProperty","property","SetAccountProperty","value","GetAccountInfo","CheckCanUseAccount","test","CheckCanUsePassWord","psw","CheckAccountFirstStr","NetWork","isReconnecting","isConnectIng","accountID","uuid","SendPack","serverID","isMobile","sendPack","ClientVersion","HeroManager","GetHeroID","version","reloginSign","LoadLogin","signString","toString","sign","MD5","hex_md5","SendReConnect","JSON","stringify","serverPack","result","Result","Psw","sdkToken","accessTokenInfo","SDKType_WeChatApp","SDKType_LineApp","SDKType_FacebookApp","SDKType_Company","InitConnectServer","AccountLogin","isToken","isDoLogin","GetHttpSendPack","CharAccount","CharAccountPsw","IsToken","SendHttpPack","OneKeyRegAccount","SendRegAccount","accountPsw","SendChangeAccountPsw","oldPsw","newPsw","AccountID","OldPsw","NewPsw","LoginAccountBySDK","sdkType","mpID","sdkAccountID","that","setTimeout","SDKType","Token","UserData","SDKAccountID","LoginAccountByMobile","mobile","state","OnEvent","g_HeroAccountManager","exports","GetModel"],"mappings":"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","file":"HeroAccountManager.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\dbmanager\\HeroAccount","sourcesContent":["/*\n    玩家账号数据管理器\n*/\nvar app = require('app');\n\nvar HeroAccountManager = app.BaseClass.extend({\n\n    Init: function () {\n        this.JS_Name = \"HeroAccountManager\";\n\n        this.NetManager = app.NetManager();\n        this.LocalDataManager = app.LocalDataManager();\n        this.ShareDefine = app.ShareDefine();\n        this.SysNotifyManager = app.SysNotifyManager();\n        this.SysDataManager = app.SysDataManager();\n\n        this.NetManager.RegHttpNetPack(0x0000, this.OnHttpPack_AccountLogin, this);\n        this.NetManager.RegHttpNetPack(0x0005, this.OnHttpPack_RegAccountResult, this);\n        this.NetManager.RegHttpNetPack(0x0006, this.OnHttpPack_ChangeAccountPswResult, this);\n\n        app.Client.RegEvent(\"CodeError\", this.Event_CodeError, this);\n        app.Client.RegEvent(\"ConnectFail\", this.Event_ConnectFail, this);\n        app.Client.RegEvent(\"ConnectHttpFail\", this.Event_ConnectHttpFail, this);\n        app.Client.RegEvent(\"ConnectSuccess\", this.Event_ConnectSuccess, this);\n        console.log(\"大厅注册事件监听\");\n\n        //密码正则表达式(长度5~11之间,只能包含字符,数字和下划线)\n        this.PswReg = /^(\\w){5,11}$/;\n        //账号正则表达式(字符开头,长度5~16之间,只能包含字符,数字和下划线)\n        this.AccountReg = /^[a-zA-Z]\\w{4,15}$/;\n\n        //账号首字符正则表达式(首字符字母)\n        this.AccountFirstStrReg = /^[a-zA-z]/;\n\n        this.OnReload();\n\n        //本地缓存账号密码字典 {account:psw}\n        this.localAccountDict = {};\n        //登陆账号顺序列表 晚登陆的在后面\n        this.logInAccountList = [];\n\n        this.InitLocalAccount();\n        this.lastChangeTime = 0;\n        this.Log(\"Init\");\n\n    },\n\n    //切换账号\n    OnReload: function () {\n        this.SysLog(\"OnReload\");\n        this.IsDoLogining(false);\n        this.dataInfo = {};\n    },\n\n    Event_CodeError: function (event) {\n        let codeInfo = event;\n        //如果是授权失败,过期了,重新授权\n        if (codeInfo[\"Code\"] == this.ShareDefine.KickOut_AccountAuthorizationFail) {\n            let accountType = app.Client.GetClientConfigProperty(\"AccountType\");\n            if (accountType == this.ShareDefine.SDKType_WeChat) {\n                //微信浏览器登录情况\n                let gameLoadUrl = app.Client.GetClientConfigProperty(\"GameLoadUrl\");\n                window.location.href = gameLoadUrl;\n            }\n            this.LocalDataManager.SetConfigProperty(\"Account\", \"AccessTokenInfo\", {});\n\n            this.SysLog(\"Event_CodeError uilogin01 is show:%d\", app.FormManager().IsFormShow(\"UILogin01\"));\n            if (app.FormManager().IsFormShow(\"UILogin01\") == false) {\n                app.FormManager().IsFormShow(\"UILogin01\");\n            }\n        }\n        if (codeInfo[\"Code\"] == this.ShareDefine.KickOut_MobileAuthorizationFail) {\n            this.LocalDataManager.SetConfigProperty(\"Account\", \"AccountMobile\", {});\n            app.SysNotifyManager().ShowSysMsg(\"短信验证已过期或出错\", [], 3);\n            if (app.FormManager().IsFormShow(\"UILogin01\") == false) {\n                app.FormManager().IsFormShow(\"UILogin01\");\n            }\n        }\n        //密码错误等异常,需要清除登录标示\n        this.IsDoLogining(false);\n\n    },\n    //连接服务器失败\n    Event_ConnectFail: function (event) {\n        console.log(\"大厅连接服务器失败\");\n        this.IsDoLogining(false);\n        this.UpdateAccessPoint();\n    },\n\n    Event_ConnectHttpFail: function (event) {\n        this.IsDoLogining(false);\n        this.UpdateAccessPoint();\n    },\n    UpdateAccessPoint: function () {\n        let now = new Date().getTime();\n        if (now - this.lastChangeTime < 5000) {\n            return;\n        }\n        this.lastChangeTime = now;\n        this.ChangeAccessPoint();\n        app.NetManager().InitServerAddress();\n    },\n    ChangeAccessPoint: function () {\n        if (!cc.sys.isNative) {\n            return;  //浏览器不用切换节点\n        }\n        let AccessPoint = app.LocalDataManager().GetConfigProperty(\"Account\", \"AccessPoint\");\n        if (AccessPoint == 0) {\n            app.LocalDataManager().SetConfigProperty(\"Account\", \"AccessPoint\", 1);\n        } else if (AccessPoint == 1) {\n            app.LocalDataManager().SetConfigProperty(\"Account\", \"AccessPoint\", 2);\n        } else if (AccessPoint == 2) {\n            app.LocalDataManager().SetConfigProperty(\"Account\", \"AccessPoint\", 3);\n        } else if (AccessPoint == 3) {\n            app.LocalDataManager().SetConfigProperty(\"Account\", \"AccessPoint\", 0);\n        }\n    },\n    //---------------------本地账号逻辑-----------------\n\n    //解析本地缓存账号记录\n    InitLocalAccount: function () {\n        let accountDict = this.LocalDataManager.GetConfigProperty(\"Account\", \"AccountDict\");\n        let accountList = this.LocalDataManager.GetConfigProperty(\"Account\", \"AccountList\");\n\n        this.logInAccountList = accountList;\n\n        for (var charAccount in accountDict) {\n            if (this.logInAccountList.InArray(charAccount, true)) {\n                this.localAccountDict[charAccount] = accountDict[charAccount];\n            }\n            else {\n                this.ErrLog(\"InitLocalAccount logInAccountList not find :%s\", charAccount);\n            }\n        }\n    },\n\n    /**\n     * 增加本地缓存账号\n     * @param account\n     * @param psw\n     */\n    AddNewAccountList: function (account, token) {\n\n        if (this.logInAccountList.InArray(account)) {\n            this.logInAccountList.Remove(account);\n            this.logInAccountList.push(account);\n        }\n        else {\n            this.logInAccountList.push(account);\n        }\n\n        this.localAccountDict[account] = token;\n\n        this.SavePlayerAccount();\n    },\n\n    /**\n     * 删除本地账号\n     * @param account\n     */\n    DeleteLocalAccount: function (account) {\n\n        if (this.logInAccountList.InArray(account)) {\n            this.logInAccountList.Remove(account);\n\n        }\n        delete this.localAccountDict[account];\n\n        this.SavePlayerAccount();\n\n    },\n\n    /**\n     * 清除本地所有账号\n     * @param account\n     */\n    DeleteAllLocalAccount: function () {\n        this.localAccountDict = {};\n        this.logInAccountList = [];\n        this.SavePlayerAccount();\n    },\n\n    /**\n     * 保存账号数据\n     */\n    SavePlayerAccount: function () {\n        this.LocalDataManager.SetConfigProperty(\"Account\", \"AccountDict\", this.localAccountDict);\n        this.LocalDataManager.SetConfigProperty(\"Account\", \"AccountList\", this.logInAccountList);\n    },\n\n    /**\n     * 获取账号密码\n     * @param account\n     */\n    GetAccountToken: function (account) {\n        if (!this.localAccountDict.hasOwnProperty(account)) {\n            this.Log(\"GetAccountToken not find:%s\", account);\n            return \"\"\n        }\n        return this.localAccountDict[account]\n    },\n\n    /**\n     * 获取缓存账号列表\n     */\n    GetLocalAccountList: function () {\n        return this.logInAccountList\n    },\n\n    GetAccountProperty: function (property) {\n        if (!this.dataInfo.hasOwnProperty(property)) {\n            this.ErrLog(\"GetAccountProperty not find:%s\", property);\n            return\n        }\n        return this.dataInfo[property];\n    },\n\n    SetAccountProperty: function (property, value) {\n        console.log(\"SetAccountProperty property:\" + property + \",value:\" + value);\n        this.dataInfo[property] = value;\n    },\n\n    //获取账号属性\n    GetAccountInfo: function () {\n        return this.dataInfo;\n    },\n\n    /**\n     * 检测账号是否合法\n     */\n    CheckCanUseAccount: function (account) {\n        return this.AccountReg.test(account)\n    },\n\n    /**\n     * 检测密码合法\n     * @param psw\n     */\n    CheckCanUsePassWord: function (psw) {\n        return this.PswReg.test(psw)\n    },\n\n    CheckAccountFirstStr: function (account) {\n        return this.AccountFirstStrReg.test(account);\n    },\n\n    //---------------------事件回掉函数-----------------\n\n    //连接服务器成功\n    Event_ConnectSuccess: function (event) {\n        console.log(\"连接服务器成功\");\n        app.NetWork().isReconnecting = false;\n        app.NetWork().isConnectIng = true;\n        if (!this.dataInfo[\"AccountID\"]) {\n            this.ErrLog(\"Event_ConnectSuccess not dataInfo\");\n            this.IsDoLogining(false);\n            //本地开发项目跳过登录，请求一个游客账号\n            if (!cc.sys.isNative) {\n                //                this.NetManager.SendPack(\"base.C1111RoleReLogin\", {\"accountID\":0, \"uuid\":0, \"gameName\":\"hall\"});\n            } else {\n                let accountID = this.LocalDataManager.GetConfigProperty(\"Account\", \"AccountID\");\n                let uuid = this.LocalDataManager.GetConfigProperty(\"Account\", \"uuid\");\n                console.log(\"base.C1111RoleReLogin uuid:\" + uuid);\n                // let isSendSuccess = false;\n                this.NetManager.SendPack(\"base.C1111RoleReLogin\", { \"accountID\": accountID, \"uuid\": uuid, \"gameName\": \"hall\" }, function (event) {\n                    // isSendSuccess = true;\n                }, function (event) {\n                    // isSendSuccess = true;\n                });\n                this.dataInfo[\"AccountID\"] = accountID;\n                // //如果2秒后还是在reload场景，则说明没发送成功再发送一遍\n                // let self = this;\n                // this.scheduleOnce(function(){\n                //     if (!isSendSuccess) {\n                //         console.log(\"发送C1111RoleReLogin失败，重新发送\");\n                //         self.NetManager.SendPack(\"base.C1111RoleReLogin\", {\"accountID\":accountID, \"uuid\":uuid, \"gameName\":\"hall\"});\n                //     }else{\n                //         console.log(\"发送C1111RoleReLogin成功\");\n                //     }\n                // },2);\n            }\n            return\n        }\n        //如果是重连\n        // if(app.HeroManager().GetHeroID()){\n        //     let accountID = this.dataInfo[\"AccountID\"];\n        //     let version = \"1.0.1\";\n        //     let reloginSign = this.dataInfo[\"reloginSign\"];\n        //     let signString = \"accountID=\" + accountID.toString() + \"&version=\" + version + \"&\" + reloginSign.toString();\n        //     let sign = app.MD5.hex_md5(signString);\n        //     this.NetManager.SendReConnect(\"base.C1008Login\", {\"accountID\":accountID, \"version\":version, \"sign\":sign});\n        // }\n        let serverID = app.Client.GetClientConfigProperty(\"ServerID\");\n        let isMobile = 0;\n        if (this.dataInfo[\"isMobile\"] == 1) {\n            isMobile = 1;\n        } else {\n            this.dataInfo[\"isMobile\"] = 0;\n        }\n        let sendPack = {\n            \"accountID\": this.dataInfo[\"AccountID\"],\n            \"openid\": this.dataInfo[\"Openid\"],\n            \"unionid\": this.dataInfo[\"Unionid\"],\n            \"token\": this.dataInfo[\"Token\"],\n            \"nickName\": this.dataInfo[\"NickName\"],\n            \"sex\": this.dataInfo[\"Sex\"],\n            \"headImageUrl\": this.dataInfo[\"HeadImageUrl\"],\n            \"isMobile\": isMobile,\n            \"serverID\": serverID,\n            \"version\": this.ShareDefine.ClientVersion,\n        };\n\n        //如果是重连\n        if (app.HeroManager().GetHeroID()) {\n            // this.SysLog(\"C1004Login 1:\",JSON.stringify(sendPack));\n            // this.NetManager.SendReConnect(\"base.C1004Login\", sendPack);\n            let accountID = this.dataInfo[\"AccountID\"];\n            // let uuid = this.LocalDataManager.GetConfigProperty(\"Account\", \"uuid\");\n            let version = \"1.0.1\";\n            let reloginSign = this.dataInfo[\"reloginSign\"];\n            // console.log(\"reloginSign ==== \" + reloginSign);\n            if (typeof (accountID) == \"undefined\") {\n                console.log(\"未取到accountID...\");\n                app.Client.LoadLogin();\n                return;\n            }\n            if (typeof (reloginSign) == \"undefined\") {\n                console.log(\"未取到reloginSign...\");\n                app.Client.LoadLogin();\n                return;\n            }\n            let signString = \"accountID=\" + accountID.toString() + \"&version=\" + version + \"&\" + reloginSign.toString();\n            console.log(\"signString === \" + signString);\n            let sign = app.MD5.hex_md5(signString);\n            this.NetManager.SendReConnect(\"base.C1008Login\", { \"accountID\": accountID, \"version\": version, \"sign\": sign });\n        }\n        else {\n            //登录过程完成\n            this.IsDoLogining(false);\n            //发送登陆token到connector\n            this.SysLog(\"C1004Login 2:\", JSON.stringify(sendPack));\n            console.log(\"登录过程完成:\", JSON.stringify(sendPack));\n            this.NetManager.SendPack(\"base.C1004Login\", sendPack);\n        }\n    },\n\n    //注册账号结果\n    OnHttpPack_RegAccountResult: function (serverPack) {\n        let result = serverPack.Result;\n        if (result == 1) {\n            this.SysNotifyManager.ShowSysMsg(\"Account_RegAccountFind\");\n        }\n        this.IsDoLogining(false);\n    },\n\n    //修改密码结果\n    OnHttpPack_ChangeAccountPswResult: function (serverPack) {\n        this.dataInfo[\"CharAccountPsw\"] = serverPack.Psw;\n\n        this.SysNotifyManager.ShowSysMsg(\"Account_ChangeAccountPswSuccess\");\n    },\n\n\n    //账号服务器登录账号回复\n    OnHttpPack_AccountLogin: function (serverPack) {\n        this.SysLog(\"OnHttpPack_AccountLogin serverPack:%s\", JSON.stringify(serverPack));\n        this.dataInfo = serverPack;\n\n        //每次登陆都覆盖缓存的sdkToken(客户端只记录一个玩家登陆token)\n        let sdkToken = this.dataInfo[\"SDKToken\"];\n        let accountType = this.dataInfo[\"AccountType\"];\n        let accountID = this.dataInfo[\"AccountID\"];\n\n        let accessTokenInfo = {};\n        //如果是微信APP,sdk授权登录\n        if (sdkToken && accountType == this.ShareDefine.SDKType_WeChatApp) {\n            accessTokenInfo = {\n                \"SDKToken\": sdkToken,\n                \"AccountType\": accountType,\n                \"AccountID\": accountID,\n            };\n        }\n        if (sdkToken && accountType == this.ShareDefine.SDKType_LineApp) {\n            accessTokenInfo = {\n                \"SDKToken\": sdkToken,\n                \"AccountType\": accountType,\n                \"AccountID\": accountID,\n                \"headImgUrl\": this.dataInfo[\"HeadImageUrl\"],\n                \"nickName\": this.dataInfo[\"NickName\"],\n                \"userId\": this.dataInfo[\"Unionid\"],\n                \"accessToken\": this.dataInfo[\"SDKToken\"],\n            };\n        }\n        if (sdkToken && accountType == this.ShareDefine.SDKType_FacebookApp) {\n            accessTokenInfo = {\n                \"SDKToken\": sdkToken,\n                \"AccountType\": accountType,\n                \"AccountID\": accountID,\n                \"headImgUrl\": this.dataInfo[\"HeadImageUrl\"],\n                \"nickName\": this.dataInfo[\"NickName\"],\n                \"userId\": this.dataInfo[\"Unionid\"],\n                \"accessToken\": this.dataInfo[\"SDKToken\"],\n            };\n        }\n        this.ErrLog(\"OnHttpPack_AccountLogin sdkToken:%s, accessTokenInfo:%s\", sdkToken, JSON.stringify(accessTokenInfo));\n        this.LocalDataManager.SetConfigProperty(\"Account\", \"AccessTokenInfo\", accessTokenInfo);\n        this.LocalDataManager.SetConfigProperty(\"Account\", \"AccountID\", accountID);\n\n        //如果是公司内部账号,需要保存账号记录\n        if (accountType == this.ShareDefine.SDKType_Company) {\n            this.AddNewAccountList(this.dataInfo[\"CharAccount\"], this.dataInfo[\"Token\"])\n        }\n\n        this.NetManager.InitConnectServer();\n\n    },\n\n    //----------------------操作函数--------------------\n\n    //账号密码连接\n    AccountLogin: function (charAccount, psw, isToken) {\n\n        if (this.isDoLogin) {\n            this.ErrLog(\"AccountLogin(%s,%s) is doing login\", charAccount, psw);\n            return\n        }\n        this.IsDoLogining(true);\n\n        let sendPack = this.NetManager.GetHttpSendPack(0xFF03);\n        sendPack.CharAccount = charAccount;\n        sendPack.CharAccountPsw = psw;\n        sendPack.IsToken = isToken;\n        this.NetManager.SendHttpPack(sendPack);\n    },\n\n    //一键注册账号密码\n    OneKeyRegAccount: function () {\n\n        if (this.isDoLogin) {\n            this.ErrLog(\"OneKeyRegAccount is doing login\");\n            return\n        }\n        this.IsDoLogining(true);\n\n        let sendPack = this.NetManager.GetHttpSendPack(0xFF00);\n        this.NetManager.SendHttpPack(sendPack);\n\n    },\n\n    SendRegAccount: function (charAccount, accountPsw) {\n        if (this.isDoLogin) {\n            this.ErrLog(\"SendRegAccount is doing login\");\n            return\n        }\n        this.IsDoLogining(true);\n\n        let sendPack = this.NetManager.GetHttpSendPack(0xFF07);\n        sendPack.CharAccount = charAccount;\n        sendPack.Psw = accountPsw;\n        this.NetManager.SendHttpPack(sendPack);\n    },\n\n    SendChangeAccountPsw: function (accountID, oldPsw, newPsw) {\n        let sendPack = this.NetManager.GetHttpSendPack(0xFF08);\n        sendPack.AccountID = accountID;\n        sendPack.OldPsw = oldPsw;\n        sendPack.NewPsw = newPsw;\n        this.NetManager.SendHttpPack(sendPack);\n    },\n\n    //sdk授权登录\n    //sdkType:sdk类型\n    //token:授权code\n    //mpID:使用到的对应第3方标示(公众号)\n    LoginAccountBySDK: function (sdkType, token, mpID, sdkAccountID) {\n        console.log(\"LoginAccountBySDK\");\n        if (this.isDoLogin) {\n            this.ErrLog(\"LoginAccountBySDK is doing (%s,%s) login\", sdkType, token);\n            this.IsDoLogining(false);\n            let that = this;\n            setTimeout(function () {\n                console.log(\"LoginAccountBySDK 0123456\");\n                that.IsDoLogining(false);\n            }, 50);\n            return\n        }\n        this.IsDoLogining(true);\n\n        console.log(\"LoginAccountBySDK sdkType: \",sdkType);\n        console.log(\"LoginAccountBySDK token: \",token);\n        console.log(\"LoginAccountBySDK mpID: \",mpID);\n        console.log(\"LoginAccountBySDK sdkAccountID: \",sdkAccountID);\n\n        if (!sdkAccountID) {\n            sdkAccountID = 0;\n        }\n        let sendPack = this.NetManager.GetHttpSendPack(0xFF02);\n        sendPack.SDKType = sdkType;\n        sendPack.Token = token;\n        sendPack.UserData = mpID;\n        sendPack.SDKAccountID = sdkAccountID;\n\n\n        // sendPack.SDKType = 6;\n        // sendPack.Token = \"EAAK56cTRIkcBABIKc0bdwd2CgyrA0Bi9kUDiSr3jMpZAIVJrfm9AJCB014ArHdWRwIZCa32maKfZAQFj2kvZAvV3pdZCyJ8pcQVmG3Qwor78nVrnqEeZBbruKWmZCbr8ZBqlW1yUdjSoTWGhkVZC8rWZCZAyJK5IBXP54i8OXdd4xk59OGOUWsg4w5hL9lTowxCOSbHnPILMvTphZBXWKQ9lNsaq6M51oqVCYvoKYBiR0P0HI4fV88WJsZAcS\";\n        // sendPack.UserData = {\n        //     \"headImgUrl\": \"https://scontent-nrt1-1.xx.fbcdn.net/v/t1.30497-1/cp0/c15.0.50.50a/p50x50/84628273_176159830277856_972693363922829312_n.jpg?_nc_cat=1&ccb=1-3&_nc_sid=12b3be&_nc_ohc=4sHVVQlGkU0AX-pVZXF&_nc_ht=scontent-nrt1-1.xx&tp=27&oh=3f7fe0619f9d1e1bc88852fd8e9b805b&oe=60DD4438\",\n        //     \"userId\": \"123926876510672\",\n        //     \"nickName\": \"Jun Huang\",\n        // };\n        // sendPack.SDKAccountID = sdkAccountID;\n\n        this.NetManager.SendHttpPack(sendPack);\n    },\n    LoginAccountByMobile: function (mobile, token, sdkAccountID) {\n        console.log(\"LoginAccountByMobile\");\n        if (this.isDoLogin) {\n            this.IsDoLogining(false);\n            let that = this;\n            setTimeout(function () {\n                that.IsDoLogining(false);\n            }, 50);\n            return\n        }\n        this.IsDoLogining(true);\n        if (!sdkAccountID) {\n            sdkAccountID = 0;\n        }\n        let sendPack = this.NetManager.GetHttpSendPack(0xFF02);\n        sendPack.SDKType = 4;\n        sendPack.Token = token;\n        sendPack.UserData = mobile;\n        sendPack.SDKAccountID = sdkAccountID;\n        this.NetManager.SendHttpPack(sendPack);\n    },\n\n    //设置是否是在登录\n    IsDoLogining: function (state) {\n        this.SysLog(\"IsDoLogining state:%s\", state);\n        this.isDoLogin = state;\n        if (state) {\n            app.Client.OnEvent(\"ChangeBtnState\", { \"state\": 1 });\n        } else {\n            app.Client.OnEvent(\"ChangeBtnState\", { \"state\": 0 });\n        }\n    },\n});\n\nvar g_HeroAccountManager = null;\n\n/**\n * 绑定模块外部方法\n */\nexports.GetModel = function () {\n    if (!g_HeroAccountManager) {\n        g_HeroAccountManager = new HeroAccountManager();\n    }\n    return g_HeroAccountManager;\n}"]}