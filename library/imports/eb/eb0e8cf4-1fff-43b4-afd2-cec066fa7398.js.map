{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\dbmanager\\Notice/assets\\script\\dbmanager\\Notice\\NoticeManager.js"],"names":["app","require","NoticeManager","DBBaseClass","extend","Init","JS_Name","ComTool","ShareDefine","NetManager","RegNetPack","OnPack_InitNotice","sysText","Log","InitReload","sysDataInfo","dataInfo","allNoticeInfo","OnInitData","Client","OnEvent","OnFailInitData","failInfo","ErrLog","serverPack","OnSuccessInitDBData","GetAllNoticeInfo","AutoInitDataPack","allNotice","DeepCopy","allNoticeKeyArray","Object","keys","allNoticeKeyArrayMax","ListMaxNum","count","length","localTime","Date","getTime","i","notice","noticeBeginTime","noticeEndTime","GetNoticeInfo","NoticeID","LoadInitDB","g_NoticeManager","exports","GetModel"],"mappings":"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","file":"NoticeManager.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\dbmanager\\Notice","sourcesContent":["/*\n *  ----------------------------------------------------------------------------------------------------\n *  @copyright: Copyright (c) 2004, 2010 Xiamen DDM Network Technology Co.,Ltd., All rights reserved.\n *  ----------------------------------------------------------------------------------------------------\n *  @package NoticeManager.js\n *  @todo: 公告管理器\n *\n *  @author hongdian\n *  @date 2014-10-30 16:04\n *  @version 1.0\n *\n *  修改时间 修改人 修改内容\n *  -------------------------------------------------------------------------------\n *\n */\nvar app = require('app');\n\n/**\n * 类构造\n */\nvar NoticeManager = app.DBBaseClass.extend({\n\n\t/**\n\t * 初始化\n\t */\n\tInit:function(){\n\n\t\tthis.JS_Name = \"NoticeManager\";\n\n\t\tthis.ComTool = app.ComTool();\n\t\tthis.ShareDefine = app.ShareDefine();\n\t\tthis.NetManager = app.NetManager();\n\n\t\tthis.NetManager.RegNetPack(\"base.C2226InitNotice\", this.OnPack_InitNotice, this);\n\n\t\t//服务器推送\n\t\tthis.NetManager.RegNetPack(\"S2226_InitNotice\", this.OnPack_InitNotice, this);\n\n\t\tthis.sysText=`1.1 牌数:\t\n包括1~9筒、1~9索、1~9万各4张，外加4张红中，共112张牌。骰子：2粒\n1.2\t庄家:\t\n第一局由创建房间的玩家做庄家，后续谁胡牌了，下局就由谁做庄。若出现荒庄，则最后摸牌的人做庄。\n1.3\t掷骰子&摸牌:\t\n庄家掷骰子，两个骰子的总和（以掷骰子逆时针计算）决定拿牌风位，骰子中较小的点数为起点摸牌；如：庄家掷骰子，骰子分别为2点和3点，骰子总和为5点，则从庄家所在风位牌墙中顺时针摸第3、4墩牌，下家摸后续两墩牌，循环3次等到每人手上有12张牌时从庄家起每人摸1张牌，最后庄家再摸1张牌。摸牌顺序为从庄家开始顺时针摸牌。\n起手庄家摸牌14张，其余三家摸牌13张。\n1.4\t打牌:\t\n起手庄家需从14张牌中挑1张最没用的打出，庄家打牌后，如果没人碰、杠，则下家摸牌，然后自主选择一张手上的牌打出，依次类推，直至有人胡牌。所有人打出的牌，其余的人都能碰和杠，不能吃牌，只可自摸/抢杠胡，不可抓炮。\n1.5\t一句话:\t\n同花色的三个连续的牌\n1.6\t一坎牌:\t\n三个一样的牌\n1.7\t碰牌:\t\n其他玩家打出的牌，自己手里有两个，则可以碰，碰完要出牌。\n1.8\t明杠:\t\n先碰了的牌，后面摸到一张一样的，则可以选择杠，（公杠必须第一时间杠，如果没有第一时间杠，则不能再杠）。\n1.9\t暗杠:\t\n手里有4张一样的牌，可以选择杠（暗杠不需要第一时间杠，只要有这个牌型，每一次轮到该玩家打牌，都可以选择“杠”）。\n1.10 放杠:\t\n自己打出一张牌，同桌有玩家手里有一坎相同的该牌，则该玩家可以“接杠”，打出该牌的玩家就是“放杠”。\n1.11 接杠:\t\n与“放杠”对应，有人“放”就对应有人“接”。杠后，需要摸进牌墙上的最后一张牌（补牌），补张牌后要出牌。\n1.12 自摸:\t\n轮到玩家摸牌时，刚好可以使自己胡牌。\n1.13 抢杠胡: \nA玩家选择“公杠”，而刚好此时B玩家可以胡这张牌，则B玩家可选择“抢杠”，抢杠就是B玩家胡牌，但是只有A玩家一个人输全部的分。多人抢杠，多人胡，被抢杠的玩家下局坐庄。\n1.14 扎码:\t\n根据扎码的数量，最后要留对应数量的牌不能摸，比如，选择4个码的玩法，那么到倒数第五张牌被摸后，依然无人胡牌，则荒庄。`;\n\n\t\tthis.Log(\"create NoticeManager\");\n\t},\n\n\t//切换账号\n    InitReload:function(){\n\t\t//{\n\t\t//\tnoticeID:{\n\t\t//\t\t\"mainTitle\":\"更新公告\",\n\t\t//\t\t\t\"title\":\"更新公告\",\n\t\t//\t\t\t\"time\":\"2017/02/13 11:00\",\n\t\t//\t\t\t\"text\":\"亲爱的玩家:为丰富广大玩家的娱乐生活,仙游将不断推出新的游戏,祝您游戏愉快\",\n\t\t//\t}\n\t\t//}\n\n\t\tthis.sysDataInfo = {\n            1:{\n                \"mainTitle\":\"系统公告\",\n                \"title\":\"系统公告\",\n                \"beginTime\":1490858700000,\n                \"endTime\":1490945100000,\n                \"content\":this.sysText,\n                \"clientType\":0,\n            },\n\t\t};\n\n\t\tthis.dataInfo = {};\n\n\t\tthis.allNoticeInfo = {};\n\t},\n\t//------------封包函数------------------\n\t//初始化成功\n    OnInitData:function(dataInfo){\n        this.dataInfo = dataInfo[\"noticeInfoList\"];\n        app.Client.OnEvent(\"InitNotice\", {});\n    },\n\n    //初始化失败\n    OnFailInitData:function(failInfo){\n        this.ErrLog(\"failInfo:\", failInfo);\n    },\n\n    //服务器推送初始化\n    OnPack_InitNotice:function(serverPack){\n        this.OnSuccessInitDBData(serverPack);\n    },\n\n\n\n\t//-----------------------获取接口-----------------------------\n    //获取所有公告\n    GetAllNoticeInfo:function(){\n        this.AutoInitDataPack();\n\n\t\t//用来存储全部公告的临时字典,初始化为本地默认配置的公告\n\t\tlet allNotice = this.ComTool.DeepCopy(this.sysDataInfo);\n\t\tlet allNoticeKeyArray = Object.keys(allNotice);\n        let allNoticeKeyArrayMax = this.ComTool.ListMaxNum(allNoticeKeyArray);\n        if(!allNoticeKeyArrayMax){\n            allNoticeKeyArrayMax = 1;\n\t\t}\n        let count = this.dataInfo.length;\n        let localTime = new Date().getTime();\n        //如果有新的公告就往allNtice里追加\n        for(let i = 0; i < count; i++){\n\n            let notice = this.dataInfo[i];\n            let noticeBeginTime = notice[\"beginTime\"];\n            let noticeEndTime = notice[\"endTime\"];\n            //如果当前时间在公告的开始时间和结束时间内\n            if(noticeEndTime > localTime && noticeBeginTime < localTime){\n                allNoticeKeyArrayMax++;\n                allNotice[allNoticeKeyArrayMax] = notice;\n            }\n\t\t}\n        this.allNoticeInfo = allNotice;\n\t\treturn this.allNoticeInfo;\n\t},\n    //获取指定ID的公告\n    GetNoticeInfo:function (NoticeID) {\n        if(!NoticeID){\n            this.ErrLog(\"GetNoticeInfo not find NoticeID:%s\", NoticeID);\n            return;\n        }\n        return this.allNoticeInfo[NoticeID];\n    },\n\t//-----------------发送接口----------------\n\t//自动初始化管理器数据封包\n    AutoInitDataPack:function(){\n        //发送初始化DB数据\n        this.LoadInitDB(\"base.C2226InitNotice\", {});\n\t},\n\n})\n\n\nvar g_NoticeManager = null;\n\n/**\n * 绑定模块外部方法\n */\nexports.GetModel = function(){\n\tif(!g_NoticeManager)\n\t\tg_NoticeManager = new NoticeManager();\n\treturn g_NoticeManager;\n\n}\n"]}