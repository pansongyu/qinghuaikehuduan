{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiEffect/assets\\script\\ui\\uiEffect\\LabelNumTransition.js"],"names":["cc","Class","extends","require","properties","TransDuration","UpdateDuration","OnLoad","JS_Name","node","name","UpdateCount","Math","ceil","Label","getComponent","isNeedChange","isAddProgress","passSeconds","endValue","nowValue","suffix","tarnsValue","SetLabelNum","startValue","parseInt","string","abs","update","dt","num","floor"],"mappings":"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","file":"LabelNumTransition.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiEffect","sourcesContent":["/*\n    LabelNumTransition 数字label渐变\n*/\n\ncc.Class({\n    extends: require(\"BaseComponent\"),\n\n    properties: {\n        //渐变总耗时秒\n        TransDuration: 3,\n        //更新间隔\n        UpdateDuration: 0.1,\n    },\n\n    // use this for initialization\n\tOnLoad: function () {\n\n\t    this.JS_Name = this.node.name + \"_LabelNumTransition\";\n\n        //总共可以更新的次数\n        this.UpdateCount = Math.ceil(this.TransDuration/this.UpdateDuration);\n        this.Label = this.node.getComponent(cc.Label);\n\n        //是否需要修改\n        this.isNeedChange = false;\n\n        //是否递增变化\n        this.isAddProgress = false;\n\n        //流失的秒\n        this.passSeconds = 0;\n\n        this.endValue = 0;\n\n        //因为渐变量可能是小数,是整数显示,所以需要记录当前变化的精确至\n        this.nowValue = 0;\n\n        //数字后缀\n        this.suffix = \"\";\n\n        //每次改变量\n        this.tarnsValue = 0;\n        \n    },\n\n    SetLabelNum:function(endValue, startValue=null, suffix=\"\"){\n\n        //取当前值开始变化\n        if(startValue == null){\n            //使用parseInt 会去除后缀字符串 比如%\n            startValue = parseInt(this.Label.string);\n            if(!startValue){\n                startValue = 0;\n            }\n        }\n\n        this.Label.string = startValue + suffix;\n        this.suffix = suffix;\n\n        //如果开始和结束一样,则停止之前的改变\n        if(endValue == startValue){\n            this.isNeedChange = false;\n            return\n        }\n\n        if(endValue > startValue){\n            this.isAddProgress = true;\n        }\n        else{\n            this.isAddProgress = false;\n        }\n\n        this.endValue = endValue;\n        this.isNeedChange = true;\n        this.passSeconds = 0;\n        this.nowValue = startValue;\n        this.tarnsValue = Math.abs(endValue - startValue)/this.UpdateCount;\n        if(this.tarnsValue < 1){\n            this.tarnsValue = 1;\n        }\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if(!this.isNeedChange){\n            return\n        }\n\n        this.passSeconds += dt;\n        if(this.passSeconds < this.UpdateDuration){\n            return\n        }\n        this.passSeconds = 0;\n\n        let num = 0;\n\n        if(this.isAddProgress){\n\n            this.nowValue += this.tarnsValue;\n\n            num = Math.floor(this.nowValue);\n\n            if(num >= this.endValue){\n                this.isNeedChange = false;\n                this.Label.string = this.endValue + this.suffix;\n                return\n            }\n        }\n        else{\n\n            this.nowValue -= this.tarnsValue;\n\n            num = Math.floor(this.nowValue);\n            if(num <= this.endValue){\n                this.isNeedChange = false;\n                this.Label.string = this.endValue + this.suffix;\n                return\n            }\n        }\n\n        this.Label.string = num + this.suffix;\n    },\n});\n"]}