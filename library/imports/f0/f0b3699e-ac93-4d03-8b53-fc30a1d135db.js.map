{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiEffect/assets\\script\\ui\\uiEffect\\ProgressTransition.js"],"names":["app","require","cc","Class","extends","properties","TransDuration","UpdateDuration","TimeLable","Label","OnLoad","JS_Name","node","name","SoundManager","InitData","onDisable","audioID","StopSoundByAudioID","transDuration","updateDuration","isPlaySound","UpdateCount","Math","ceil","ProgressBar","getComponent","isNeedChange","isWhetherHide","isAddProgress","passSeconds","endProgress","tarnsValue","endTick","SetProgressByTime","isNeedSound","nowTick","ServerTimeManager","GetServerTimeData","string","progress","startProgress","abs","SetProgress","WarnLog","update","dt","active","nowProgress","nowServerTick","leftSec","floor","that","PlaySound","then"],"mappings":";;;;;;AAAA;;;;AAIA,IAAIA,MAAMC,QAAQ,KAAR,CAAV;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASH,QAAQ,eAAR,CADJ;;AAGLI,gBAAY;AACR;AACAC,uBAAe,CAFP;AAGR;AACAC,wBAAgB,GAJR;;AAMRC,mBAAUN,GAAGO;AANL,KAHP;;AAYL;AACHC,YAAQ,kBAAY;AAChB,aAAKC,OAAL,GAAe,KAAKC,IAAL,CAAUC,IAAV,GAAiB,qBAAhC;;AAEH,aAAKC,YAAL,GAAoBd,IAAIc,YAAJ,EAApB;AACM,aAAKC,QAAL,CAAc,KAAKT,aAAnB,EAAkC,KAAKC,cAAvC;AAEH,KAnBI;;AAqBRS,eAAU,qBAAU;AACnB,YAAG,KAAKC,OAAR,EAAgB;AACf,iBAAKH,YAAL,CAAkBI,kBAAlB,CAAqC,KAAKD,OAA1C;AACA,iBAAKA,OAAL,GAAe,CAAf;AACA;AACD,KA1BO;;AA4BL;AACAF,cAAS,kBAASI,aAAT,EAAwBC,cAAxB,EAAuC;;AAE/C,aAAKC,WAAL,GAAmB,KAAnB;AACA,aAAKJ,OAAL,GAAe,CAAf;;AAEG,aAAKX,aAAL,GAAqBa,aAArB;AACA,aAAKZ,cAAL,GAAsBa,cAAtB;;AAEA;AACA,aAAKE,WAAL,GAAmBC,KAAKC,IAAL,CAAUL,gBAAcC,cAAxB,CAAnB;;AAEA,aAAKK,WAAL,GAAmB,KAAKb,IAAL,CAAUc,YAAV,CAAuBxB,GAAGuB,WAA1B,CAAnB;;AAEA;AACA,aAAKE,YAAL,GAAoB,KAApB;;AAEA;AACA,aAAKC,aAAL,GAAqB,KAArB;;AAEA;AACA,aAAKC,aAAL,GAAqB,KAArB;;AAEA;AACA,aAAKC,WAAL,GAAmB,CAAnB;;AAEA,aAAKC,WAAL,GAAmB,CAAnB;;AAEA;AACA,aAAKC,UAAL,GAAkB,CAAlB;;AAEA,aAAKC,OAAL,GAAe,CAAf;AACH,KA5DI;;AA8DL;AACAC,uBAAkB,6BAA4E;AAAA,YAAnEf,aAAmE,uEAArD,CAAqD;AAAA,YAAlDc,OAAkD,uEAA1C,CAA0C;AAAA,YAAvCE,WAAuC,uEAA3B,KAA2B;AAAA,YAApBP,aAAoB,uEAAN,KAAM;;;AAE1F;AACA,YAAG,CAACT,aAAJ,EAAkB;AACdA,4BAAgB,KAAKb,aAArB;AACH;AACD,aAAKS,QAAL,CAAcI,aAAd,EAA6B,KAAKZ,cAAlC;;AAEA,YAAI6B,UAAUpC,IAAIqC,iBAAJ,GAAwBC,iBAAxB,EAAd;AACA;AACA,YAAG,CAACL,OAAJ,EAAY;AACRA,sBAAUG,UAAU,KAAK9B,aAAL,GAAmB,IAAvC;AACH;AACD;AACA,YAAG,KAAKE,SAAR,EAAkB;AACd,iBAAKA,SAAL,CAAe+B,MAAf,GAAwB,EAAxB;AACH;;AAEJ,aAAKlB,WAAL,GAAmBc,WAAnB;AACA,aAAKlB,OAAL,GAAe,CAAf;;AAGG;AACA,YAAGmB,WAAWH,OAAd,EAAsB;AAClB,iBAAKR,WAAL,CAAiBe,QAAjB,GAA4B,CAA5B;AACA,iBAAKZ,aAAL,GAAqBA,aAArB;AACA,iBAAKD,YAAL,GAAoB,KAApB;AACA;AACH;;AAED,YAAIc,gBAAgB,CAACR,UAAUG,OAAX,KAAqB,KAAK9B,aAAL,GAAmB,IAAxC,CAApB;AACA,aAAKmB,WAAL,CAAiBe,QAAjB,GAA4BC,aAA5B;;AAEA,aAAKV,WAAL,GAAmB,CAAnB;AACA,aAAKJ,YAAL,GAAoB,IAApB;AACA,aAAKG,WAAL,GAAmB,CAAnB;AACA,aAAKG,OAAL,GAAeA,OAAf;;AAEA,aAAKD,UAAL,GAAkBT,KAAKmB,GAAL,CAAS,KAAKX,WAAL,GAAmBU,aAA5B,IAA2C,KAAKnB,WAAlE;AAEH,KAvGI;;AAyGL;AACAqB,iBAAY,qBAASZ,WAAT,EAAuC;AAAA,YAAjBU,aAAiB,uEAAH,CAAC,CAAE;;;AAE/C;AACA,YAAGA,gBAAgB,CAAnB,EAAqB;AACjBA,4BAAgB,KAAKhB,WAAL,CAAiBe,QAAjC;AACH,SAFD,MAGK,IAAGC,gBAAgB,CAAnB,EAAqB;AACtB,iBAAKG,OAAL,CAAa,oCAAb,EAAmDH,aAAnD;AACAA,4BAAgB,CAAhB;AACH;AACD,aAAKhB,WAAL,CAAiBe,QAAjB,GAA4BC,aAA5B;;AAGA,YAAGV,cAAc,CAAjB,EAAmB;AACf,iBAAKa,OAAL,CAAa,kCAAb,EAAiDb,WAAjD;AACAA,0BAAc,CAAd;AACH,SAHD,MAIK,IAAGA,cAAc,CAAjB,EAAmB;AACpB,iBAAKa,OAAL,CAAa,kCAAb,EAAiDb,WAAjD;AACAA,0BAAc,CAAd;AACH;;AAGD,YAAGA,eAAeU,aAAlB,EAAgC;AAC5B,iBAAKd,YAAL,GAAoB,KAApB;AACA;AACH;;AAED,YAAGI,cAAcU,aAAjB,EAA+B;AAC3B,iBAAKZ,aAAL,GAAqB,IAArB;AACH,SAFD,MAGI;AACA,iBAAKA,aAAL,GAAqB,KAArB;AACH;;AAED,aAAKE,WAAL,GAAmBA,WAAnB;AACA,aAAKJ,YAAL,GAAoB,IAApB;AACA,aAAKG,WAAL,GAAmB,CAAnB;;AAEA,aAAKE,UAAL,GAAkBT,KAAKmB,GAAL,CAASX,cAAcU,aAAvB,IAAsC,KAAKnB,WAA7D;AAEH,KAnJI;;AAqJL;AACAuB,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAG,CAAC,KAAKnB,YAAT,EAAsB;AAClB,iBAAKf,IAAL,CAAUmC,MAAV,GAAmB,KAAKnB,aAAxB;AACA;AACH;;AAED,aAAKE,WAAL,IAAoBgB,EAApB;AACA,YAAG,KAAKhB,WAAL,GAAmB,KAAKvB,cAA3B,EAA0C;AACtC;AACH;AACD,aAAKuB,WAAL,GAAmB,CAAnB;;AAEA,YAAIkB,cAAc,KAAKvB,WAAL,CAAiBe,QAAnC;;AAEA,YAAG,KAAKX,aAAR,EAAsB;;AAElBmB,2BAAe,KAAKhB,UAApB;;AAEA,gBAAGgB,eAAe,KAAKjB,WAAvB,EAAmC;AAC/B,qBAAKJ,YAAL,GAAoB,KAApB;AACA,qBAAKF,WAAL,CAAiBe,QAAjB,GAA4B,KAAKT,WAAjC;AACA;AACH;AACJ,SATD,MAUI;;AAEAiB,2BAAe,KAAKhB,UAApB;;AAEA,gBAAGgB,eAAe,KAAKjB,WAAvB,EAAmC;AAC/B,qBAAKJ,YAAL,GAAoB,KAApB;AACA,qBAAKF,WAAL,CAAiBe,QAAjB,GAA4B,KAAKT,WAAjC;AACA;AACH;AACJ;;AAED,aAAKN,WAAL,CAAiBe,QAAjB,GAA4BQ,WAA5B;;AAEA,YAAG,KAAKxC,SAAR,EAAkB;;AAEd,gBAAIyC,gBAAgBjD,IAAIqC,iBAAJ,GAAwBC,iBAAxB,EAApB;AACA,gBAAIY,UAAU3B,KAAK4B,KAAL,CAAW,CAAC,KAAKlB,OAAL,GAAegB,aAAhB,IAA+B,IAA1C,CAAd;AACA,gBAAGC,UAAU,CAAV,IAAe,KAAK7B,WAApB,IAAmC,CAAC,KAAKJ,OAA5C,EAAoD;;AAEhD,oBAAImC,OAAO,IAAX;AACA,qBAAKnC,OAAL,GAAe,CAAf;AACA,qBAAKH,YAAL,CAAkBuC,SAAlB,CAA4B,SAA5B,EACKC,IADL,CACU,UAASrC,OAAT,EAAiB;AACnBmC,yBAAKnC,OAAL,GAAeA,OAAf;AACH,iBAHL;AAIH;AACD,gBAAGiC,WAAW,CAAd,EAAgB;AACZ,qBAAK1C,SAAL,CAAe+B,MAAf,GAAwB,EAAxB;AACA,qBAAKvB,SAAL;AACH,aAHD,MAII;AACA,qBAAKR,SAAL,CAAe+B,MAAf,GAAwBW,OAAxB;AACH;AACJ;AACJ;AAhNI,CAAT","file":"ProgressTransition.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiEffect","sourcesContent":["/*\n    ProgressTransition 进度条渐变组件\n*/\n\nvar app = require(\"app\");\n\ncc.Class({\n    extends: require(\"BaseComponent\"),\n\n    properties: {\n        //渐变总耗时秒\n        TransDuration: 3,\n        //更新间隔\n        UpdateDuration: 0.1,\n\n        TimeLable:cc.Label,\n    },\n\n    // use this for initialization\n\tOnLoad: function () {\n\t    this.JS_Name = this.node.name + \"_ProgressTransition\";\n\n\t\tthis.SoundManager = app.SoundManager();\n        this.InitData(this.TransDuration, this.UpdateDuration);\n\n    },\n\n\tonDisable:function(){\n\t\tif(this.audioID){\n\t\t\tthis.SoundManager.StopSoundByAudioID(this.audioID);\n\t\t\tthis.audioID = 0;\n\t\t}\n\t},\n\n    //初始化数据\n    InitData:function(transDuration, updateDuration){\n\n\t    this.isPlaySound = false;\n\t    this.audioID = 0;\n\n        this.TransDuration = transDuration;\n        this.UpdateDuration = updateDuration;\n\n        //总共可以更新的次数\n        this.UpdateCount = Math.ceil(transDuration/updateDuration);\n\n        this.ProgressBar = this.node.getComponent(cc.ProgressBar);\n\n        //是否需要修改\n        this.isNeedChange = false;\n\n        //是否需要隐藏\n        this.isWhetherHide = false;\n\n        //是否递增变化\n        this.isAddProgress = false;\n\n        //流失的秒\n        this.passSeconds = 0;\n\n        this.endProgress = 0;\n\n        //每次改变量\n        this.tarnsValue = 0;\n\n        this.endTick = 0;\n    },\n\n    //时间倒计时\n    SetProgressByTime:function(transDuration=0, endTick=0, isNeedSound=false, isWhetherHide=false){\n\n        //如果没有传倒计时长,取默认配置表\n        if(!transDuration){\n            transDuration = this.TransDuration\n        }\n        this.InitData(transDuration, this.UpdateDuration);\n\n        let nowTick = app.ServerTimeManager().GetServerTimeData();\n        //如果没有传递结束时间,取当前事件加时长\n        if(!endTick){\n            endTick = nowTick + this.TransDuration*1000;\n        }\n        //清空数据\n        if(this.TimeLable){\n            this.TimeLable.string = \"\";\n        }\n\n\t    this.isPlaySound = isNeedSound;\n\t    this.audioID = 0;\n\n\n        //倒计时已经结束\n        if(nowTick >= endTick){\n            this.ProgressBar.progress = 0;\n            this.isWhetherHide = isWhetherHide;\n            this.isNeedChange = false;\n            return\n        }\n\n        let startProgress = (endTick - nowTick)/(this.TransDuration*1000)\n        this.ProgressBar.progress = startProgress;\n\n        this.endProgress = 0;\n        this.isNeedChange = true;\n        this.passSeconds = 0;\n        this.endTick = endTick;\n        \n        this.tarnsValue = Math.abs(this.endProgress - startProgress)/this.UpdateCount;\n\n    },\n\n    //非时间倒计时进度变化\n    SetProgress:function(endProgress, startProgress=-1){\n\n        //默认-1 取当前值开始变化\n        if(startProgress < 0){\n            startProgress = this.ProgressBar.progress;\n        }\n        else if(startProgress > 1){\n            this.WarnLog(\"SetProgress:%s startProgress error\", startProgress);\n            startProgress = 1;\n        }\n        this.ProgressBar.progress = startProgress;\n\n\n        if(endProgress > 1){\n            this.WarnLog(\"SetProgress:%s endProgress error\", endProgress);\n            endProgress = 1;\n        }\n        else if(endProgress < 0){\n            this.WarnLog(\"SetProgress:%s endProgress error\", endProgress);\n            endProgress = 0;\n        }\n\n\n        if(endProgress == startProgress){\n            this.isNeedChange = false;\n            return\n        }\n\n        if(endProgress > startProgress){\n            this.isAddProgress = true;\n        }\n        else{\n            this.isAddProgress = false;\n        }\n\n        this.endProgress = endProgress;\n        this.isNeedChange = true;\n        this.passSeconds = 0;\n        \n        this.tarnsValue = Math.abs(endProgress - startProgress)/this.UpdateCount;\n\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if(!this.isNeedChange){\n            this.node.active = this.isWhetherHide;\n            return\n        }\n\n        this.passSeconds += dt;\n        if(this.passSeconds < this.UpdateDuration){\n            return\n        }\n        this.passSeconds = 0;\n\n        let nowProgress = this.ProgressBar.progress;\n\n        if(this.isAddProgress){\n\n            nowProgress += this.tarnsValue;\n\n            if(nowProgress >= this.endProgress){\n                this.isNeedChange = false;\n                this.ProgressBar.progress = this.endProgress;\n                return\n            }\n        }\n        else{\n\n            nowProgress -= this.tarnsValue;\n\n            if(nowProgress <= this.endProgress){\n                this.isNeedChange = false;\n                this.ProgressBar.progress = this.endProgress;\n                return\n            }\n        }\n\n        this.ProgressBar.progress = nowProgress;\n\n        if(this.TimeLable){\n\n            let nowServerTick = app.ServerTimeManager().GetServerTimeData();\n            let leftSec = Math.floor((this.endTick - nowServerTick)/1000);\n            if(leftSec < 8 && this.isPlaySound && !this.audioID){\n\n                var that = this;\n                this.audioID = 0;\n                this.SoundManager.PlaySound(\"TimeOut\")\n                    .then(function(audioID){\n                        that.audioID = audioID;\n                    })\n            }\n            if(leftSec <= 0){\n                this.TimeLable.string = \"\";\n                this.onDisable();\n            }\n            else{\n                this.TimeLable.string = leftSec;\n            }\n        }\n    },\n});\n"]}