{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiEffect/assets\\script\\ui\\uiEffect\\SliderParagraph.js"],"names":["app","require","cc","Class","extends","properties","ParagraphCount","ScrollThreshold","EventNode","Node","OnLoad","isOnLoad","JS_Name","node","name","ComTool","slider","getComponent","Slider","on","OnSlideEvent","UpdateSecond","paragraphPositionDict","progressValueDict","keyIDList","showDataList","Range","InitData","isSend","passSecond","keyCount","length","ErrLog","push","offProgress","index","keyID","progress","minProgress","maxProgress","ShowBackgroundLabel","backGroundNode","getChildByName","count","childName","StringAddNumSuffix","childPath","join","labelNode","find","childLabel","Label","string","update","ResetProgress","nowProgress","hasOwnProperty","emit","_dragging","SetChooseKeyID","GetChooseKeyID","GetProgressNodeByKeyID","indexOf","progressNode"],"mappings":"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","file":"SliderParagraph.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiEffect","sourcesContent":["/*\n    SliderParagraph 滑动进度分段\n*/\n\nvar app = require(\"app\");\n\ncc.Class({\n    extends: require(\"BaseComponent\"),\n\n    properties: {\n        //拆分为几段\n        ParagraphCount: 4,\n        ScrollThreshold: 0.5,\n\t    EventNode:cc.Node,\n    },\n\n    // use this for initialization\n    OnLoad: function () {\n    \tif(this.isOnLoad)//艹尼玛的creator虾几把onload active=false不会onload\n    \t\treturn;\n    \tthis.isOnLoad = true;\n\t    this.JS_Name = this.node.name + \"_SliderParagraph\";\n\n\t    this.ComTool = app.ComTool();\n\n    \tthis.slider = this.node.getComponent(cc.Slider);\n\n\t    this.node.on('slide', this.OnSlideEvent, this);\n\n    \t//获取button对象\n\t    //let buttonNode = this.slider.handle.node;\n\t    //buttonNode.on('touchend', this.OnTouchEnded, this);\n\t    //buttonNode.on('touchcancel', this.OnTouchCancelled, this);\n\n\t    this.UpdateSecond = 0.1;\n\n        this.paragraphPositionDict = {};\n        this.progressValueDict = {};\n        this.keyIDList = [];\n        this.showDataList = [];\n\n\t    //设置默认的分段信息\n\t    let keyIDList = this.ComTool.Range(0, this.ParagraphCount+1);\n\t    this.InitData(keyIDList);\n\n    },\n\n\tOnSlideEvent:function(){\n\t\tthis.isSend = false;\n\t},\n\n\tInitData:function(keyIDList, showDataList=[]){\n\t\tif(!this.isOnLoad)\n\t\t\tthis.OnLoad();\n\t\tthis.passSecond = 0;\n\t\tthis.isSend = false;\n\n\t\tthis.paragraphPositionDict = {};\n\t\tthis.progressValueDict = {};\n\n\t\tlet keyCount = keyIDList.length;\n\t\tif(!keyCount){\n\t\t\tthis.ErrLog(\"InitData keyIDList empty\", keyIDList);\n\t\t\treturn\n\t\t}\n\t\t//如果只有一个则设置开始结束一样\n\t\telse if(keyCount == 1){\n\t\t\tkeyIDList.push(keyIDList[0]);\n\t\t\tkeyCount = keyIDList.length;\n\t\t}\n\t\tthis.keyIDList = keyIDList;\n\t\tthis.showDataList = showDataList;\n\n\t\tlet offProgress = this.ScrollThreshold*1/(keyCount-1);\n\n\t\tfor(let index=0; index<keyCount; index++){\n\n\t\t\tlet keyID = keyIDList[index];\n\t\t\tlet progress = index/(keyCount-1);\n\n\t\t\tlet minProgress = progress - offProgress;\n\t\t\tlet maxProgress = progress + offProgress;\n\n\t\t\tif(minProgress < 0){\n\t\t\t\tminProgress = 0;\n\t\t\t}\n\n\t\t\tif(maxProgress > 1){\n\t\t\t\tmaxProgress = 1;\n\t\t\t}\n\n\t\t\t//分段每个点的进度位置,最小最大进入范围\n\t\t\tthis.paragraphPositionDict[index] = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"KeyID\":keyID,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Progress\":progress,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"MinProgress\":minProgress,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"MaxProgress\":maxProgress,\n\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\tthis.progressValueDict[progress] = keyID;\n\t\t}\n\n\t\tthis.ShowBackgroundLabel(showDataList)\n\t\t//初始化默认从0开始\n\t\tthis.slider.progress = 0;\n\n\t},\n\n\tShowBackgroundLabel:function(showDataList){\n\n\t\tlet backGroundNode = this.node.getChildByName(\"Background\");\n\t\tlet count = showDataList.length;\n\n\t\tfor(let index=count; index>0; index--){\n\t\t\tlet childName = this.ComTool.StringAddNumSuffix(\"yuandian\", index, 2);\n\t\t\tlet childPath = [childName, \"lb\"].join(\"/\");\n\t\t\tlet labelNode = cc.find(childPath, backGroundNode);\n\t\t\tif(!labelNode){\n\t\t\t\tthis.ErrLog(\"ShowBackgroundLabel not find:%s,%s\", childPath, this.node.name);\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tlet childLabel = labelNode.getComponent(cc.Label);\n\t\t\tchildLabel.string = showDataList[index-1];\n\t\t}\n\t},\n\n\tupdate:function(passSecond){\n\t\tthis.passSecond += passSecond;\n\n\t\tif(this.passSecond >= this.UpdateSecond){\n\t\t\tthis.ResetProgress();\n\t\t\tthis.passSecond = 0;\n\t\t}\n\t},\n\n\n\tResetProgress:function(){\n\n\t\tlet nowProgress = this.slider.progress;\n\n\t\tif(this.progressValueDict.hasOwnProperty(nowProgress)){\n\t\t\tif(this.isSend){\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif(this.EventNode){\n\t\t\t\tthis.EventNode.emit(\"SliderParagraph\",  {\"KeyID\":this.progressValueDict[nowProgress],\"Node\":this.node});\n\t\t\t}\n\t\t\tthis.isSend = true;\n\t\t\treturn\n\t\t}\n\n\t\t//遍历所有的坐标进度点\n\t\tfor(let index in this.paragraphPositionDict){\n\t\t\tlet paragraphPositionDict = this.paragraphPositionDict[index];\n\t\t\t//查找当前进度位置停留值\n\t\t\tif(paragraphPositionDict[\"MinProgress\"] <= nowProgress && nowProgress <= paragraphPositionDict[\"MaxProgress\"]){\n\n\t\t\t\tlet progress = paragraphPositionDict[\"Progress\"];\n\t\t\t\t//如果正在滑动中跳出\n\t\t\t\tif( this.slider._dragging){\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.slider.progress = progress;\n\t\t\t\t}\n\t\t\t\tif(this.EventNode){\n\t\t\t\t\tthis.EventNode.emit(\"SliderParagraph\",  {\"KeyID\":paragraphPositionDict[\"KeyID\"],\"Node\":this.node});\n\t\t\t\t}\n\t\t\t\tthis.isSend = true;\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t},\n\n\t//设置滑动到指定key位置\n\tSetChooseKeyID:function(keyID){\n\t\tfor(let index in this.paragraphPositionDict){\n\t\t\tlet paragraphPositionDict = this.paragraphPositionDict[index];\n\t\t\tif(paragraphPositionDict[\"KeyID\"] == keyID){\n\t\t\t\tthis.slider.progress = paragraphPositionDict[\"Progress\"];\n\t\t\t\tif(this.EventNode){\n\t\t\t\t\tthis.EventNode.emit(\"SliderParagraph\",  {\"KeyID\":keyID,\"Node\":this.node});\n\t\t\t\t}\n\t\t\t\tthis.isSend = true;\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\tthis.ErrLog(\"SetChooseKeyID(%s) not find\", keyID);\n\t},\n\n\t//获取当前选中的keyID\n\tGetChooseKeyID:function(){\n\t\tlet nowProgress = this.slider.progress;\n\n\t\tfor(let index in this.paragraphPositionDict){\n\t\t\tlet paragraphPositionDict = this.paragraphPositionDict[index];\n\t\t\t//查找当前进度位置停留值\n\t\t\tif(paragraphPositionDict[\"MinProgress\"] <= nowProgress && nowProgress <= paragraphPositionDict[\"MaxProgress\"]){\n\t\t\t\treturn paragraphPositionDict[\"KeyID\"]\n\t\t\t}\n\t\t}\n\t\tthis.ErrLog(\"GetChooseKeyID not find:%s\", nowProgress, this.paragraphPositionDict);\n\t\treturn 0\n\t},\n\n\tGetProgressNodeByKeyID:function(keyID){\n\t\tlet index = this.keyIDList.indexOf(keyID);\n\t\tif(index == -1){\n\t\t\tthis.ErrLog(\"GetProgressNodeByKeyID(%s) not find\", keyID);\n\t\t\treturn\n\t\t}\n\n\t\tlet childName = this.ComTool.StringAddNumSuffix(\"yuandian\", index + 1, 2);\n\t\tlet backGroundNode = this.node.getChildByName(\"Background\");\n\t\tlet progressNode = cc.find(childName, backGroundNode);\n\t\tif(!progressNode){\n\t\t\tthis.ErrLog(\"GetProgressNodeByKeyID(%s) not find\", childName);\n\t\t\treturn\n\t\t}\n\t\treturn progressNode;\n\t},\n\n});\n"]}