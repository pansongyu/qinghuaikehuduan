{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\effect/assets\\script\\effect\\BaseEffect.js"],"names":["app","require","cc","Class","extends","properties","OnLoad","update","dt","OnCreate","effectName","effectRes","userData","componentName","zorderLv","JS_Name","animationNameList","animation","node","getComponent","Animation","clips","getClips","count","length","index","clip","push","name","defaultClip","defaultAnimationName","on","OnPlay","OnStop","OnFinished","OnCreateInit","InitEffectData","eventNode","Parent","dataInfo","AddModelToParent","parent","initPos","addChild","setPosition","event","argDict","getCurrentTarget","emit","OnModelAnimationEvent","eventType","hurtPercent","Math","floor","Client","OnEvent","ErrLog","unuse","stop","CloseEffect","reuse","active","ShowEffect","particleNode","getChildByName","childrenList","children","particle","ParticleSystem","resetSystem","play","stopSystem","Destroy","removeChild","destroy","PlayAnimation","actioName","indexOf","Log","SetModelDir","dir","scaleX","abs","SetModelProperty","property","value","zIndex","hasOwnProperty","GetModelProperty"],"mappings":"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","file":"BaseEffect.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\effect","sourcesContent":["/*\n    特效基类\n*/\n\n\nvar app = require('app');\ncc.Class({\n    extends: require(\"BaseComponent\"),\n\n    properties: {\n       \n    },\n\n    // 加载\n    OnLoad: function () {\n    },\n\n    //每帧回调\n    update: function (dt) {\n    },\n\n\n    OnCreate:function(effectName, effectRes, userData, componentName, zorderLv){\n        this.JS_Name = effectName;\n\n        this.animationNameList = [];\n        this.animation = this.node.getComponent(cc.Animation);\n\n        let clips = this.animation.getClips();\n        let count = clips.length;\n        for(let index=0; index<count; index++){\n            let clip = clips[index];\n            this.animationNameList.push(clip.name);\n        }\n\n        let defaultClip = this.animation.defaultClip;\n        this.defaultAnimationName = \"\";\n        if(defaultClip){\n            this.defaultAnimationName = defaultClip.name;\n        }\n\n        this.animation.on('play',      this.OnPlay,        this);\n        this.animation.on('stop',      this.OnStop,        this);\n        this.animation.on('finished',  this.OnFinished,    this);\n        //this.animation.on('lastframe', this.OnLastFrame,   this);\n        // this.animation.on('pause',     this.OnPause,       this);\n        // this.animation.on('resume',    this.OnResume,      this);\n\n        this.OnCreateInit();\n        this.InitEffectData(effectName, effectRes, userData, componentName, zorderLv);\n    },\n\n    InitEffectData:function(effectName, effectRes, userData, componentName, zorderLv){\n\n        //事件分发节点\n        this.eventNode = null;\n\n        //父类\n        this.Parent = null;\n        \n        this.dataInfo = {\n                            //模型名字\n                            \"EffectName\":effectName,\n                            //创建的模型资源名 ModelRes.txt\n                            \"EffectRes\":effectRes,\n                            //node的组件名(其实就是本类名)\n                            \"ComponentName\":componentName,\n                            //自定义数据\n                            \"UserData\":userData,\n                            //模型層\n                            \"CreateZOrderLv\":zorderLv,\n                            //界面特效控件路径\n                            \"WndPath\":\"\",\n                        };\n    },\n\n\n    //增加模型到父类\n    AddModelToParent:function(parent, eventNode, initPos=null){\n\n        this.eventNode = eventNode;\n        this.Parent = parent;\n        \n        //追加到父类 执行addChild,会回调执行OnLoad\n        this.Parent.addChild(this.node, this.dataInfo[\"CreateZOrderLv\"]);\n\n        //默认都是居中显示特效\n        if(initPos){\n            this.node.setPosition(initPos);\n        }\n\n    },\n\n    //---------回调函数---------------------\n\n    //动作开始播放 OnPlay->OnFinished -> OnStop;\n    OnPlay:function(event){\n        // let actionName = event.getCurrentTarget().name;\n        // this.Log(\"OnPlay:%s\", actionName);\n    },\n\n    //播放结束(循环中不会回掉)\n    OnFinished:function(event){\n        let argDict = {\n            \"Model\":this,\n            \"AnimationName\":event.getCurrentTarget().name,\n        };\n        this.eventNode.emit(\"EffectAnimationEnd\", argDict);\n    },\n\n    //动作被停止(循环中不会回掉)\n    OnStop:function(event){\n        // let actionName = event.getCurrentTarget().name;\n        // this.Log(\"OnStop:%s\", actionName);\n    },\n\n    //关键帧回掉\n\tOnModelAnimationEvent:function(eventType,hurtPercent){\n\t\tlet argDict = {};\n\t\thurtPercent = Math.floor(hurtPercent);\n\t\tif(!hurtPercent){\n\t\t\thurtPercent = 100;\n\t\t}\n\t\tswitch(eventType){\n\t\t\tcase \"zd\":\n\t\t\t\tapp.Client.OnEvent(\"ShakeScene\");\n\t\t\t\tbreak\n\n\t\t\tcase \"h\":\n\t\t\t\targDict[\"GeneralKey\"] = this.dataInfo[\"UserData\"];\n\t\t\t\targDict[\"HurtPercent\"] = hurtPercent;\n\n\t\t\t\tapp.Client.OnEvent(\"SkillHurt\", argDict);\n\t\t\t\tbreak\n\n\t\t\tcase \"zdh\":\n\t\t\t\targDict[\"GeneralKey\"] = this.dataInfo[\"UserData\"];\n\t\t\t\targDict[\"HurtPercent\"] = hurtPercent;\n\t\t\t\tapp.Client.OnEvent(\"ShakeScene\");\n\t\t\t\tapp.Client.OnEvent(\"SkillHurt\", argDict);\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t\t\tthis.ErrLog(\"OnEffectAnimationEvent eventType error\", eventType);\n\t\t\t\tbreak\n\t\t}\n    },\n\n    //被对象池回收\n    unuse: function () {\n        this.animation.stop();\n        //关闭HP Shadow的显示\n        this.CloseEffect();\n    },\n\n    //对象池释放复用\n    reuse: function () {\n        this.node.active = true;\n\n    },\n\n    //--------------操作函数-------------------\n\n    //显示模型\n    ShowEffect:function(){\n\n        if(!this.defaultAnimationName){\n            this.ErrLog(\"ShowEffect not defaultAnimationName\");\n            return\n        }\n        this.node.active = true;\n\n\t    //获取粒子特效节点\n\t    let particleNode = this.node.getChildByName(\"Particle\");\n\t    if(particleNode){\n\t\t    let childrenList = particleNode.children;\n\t\t    let count = childrenList.length;\n\t\t    //遍历所有子节点\n\t\t    for (var index = 0; index < count; ++index) {\n\t\t\t    let children = childrenList[index];\n\t\t\t    let particle = children.getComponent(cc.ParticleSystem);\n\t\t\t    //如果存在粒子这重新播放\n\t\t\t    if(particle){\n\t\t\t\t    particle.resetSystem();\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    return this.animation.play(this.defaultAnimationName)\n    },\n\n\n    //关闭模型\n    CloseEffect:function(){\n        this.node.active = false;\n\n\n\t    //获取粒子特效节点\n\t    let particleNode = this.node.getChildByName(\"Particle\");\n\t    if(particleNode){\n\t\t    let childrenList = particleNode.children;\n\t\t    let count = childrenList.length;\n\t\t    //遍历所有子节点\n\t\t    for (var index = 0; index < count; ++index) {\n\t\t\t    let children = childrenList[index];\n\t\t\t    let particle = children.getComponent(cc.ParticleSystem);\n\t\t\t    //如果存在粒子这重新播放\n\t\t\t    if(particle){\n\t\t\t\t    //闲重置会删除所有例子\n\t\t\t\t    particle.resetSystem();\n\t\t\t\t    //在停止发送粒子\n\t\t\t\t    particle.stopSystem();\n\t\t\t    }\n\t\t    }\n\t    }\n    },\n\n    //销毁界面\n    Destroy:function(){\n\n        this.Parent.removeChild(this.node);\n        //销毁节点\n        this.node.destroy();\n\n    },\n\n    //播放动画动作\n    PlayAnimation:function(actioName){\n        if(this.animationNameList.indexOf(actioName) < 0){\n            this.Log(\"PlayAnimation(%s) not in :\", actioName, this.animationNameList);\n            return\n        }\n\n        //停止当前动作\n        this.animation.stop();\n        //isPlaying isPaused \n        return this.animation.play(actioName);\n\n\n        //指动画播放多少次后结束\n        //animationState.repeatCount = 2;\n\n        // WrapMode\n        // Default Number\n        // 向 Animation Component 或者 AnimationClip 查找 wrapMode\n\n        // Normal Number\n        // 动画只播放一遍\n\n        // Reverse Number\n        // 从最后一帧或结束位置开始反向播放，到第一帧或开始位置停止\n\n        // Loop Number\n        // 循环播放\n\n        // LoopReverse Number\n        // 反向循环播放\n\n        // PingPong Number\n        // 从第一帧播放到最后一帧，然后反向播放回第一帧，到第一帧后再正向播放，如此循环\n\n        // PingPongReverse Number\n        // 从最后一帧开始反向播放，其他同 PingPong\n        //animationState.wrapMode  = 2;\n    },\n\n    //设置模型面向\n    SetModelDir:function(dir){\n\n        let scaleX = Math.abs(this.node.scaleX);\n\n        if(dir == \"left\"){\n            this.node.scaleX = -1*scaleX;\n        }\n        else{\n            this.node.scaleX = scaleX;\n        }\n    },\n\n    SetModelProperty:function(property, value){\n\n        if(\"ZOrderLv\" == property){\n            this.node.zIndex = value;\n        }\n        else if(this.dataInfo.hasOwnProperty(property)){\n            this.dataInfo[property] = value;\n        }\n        else{\n            this.ErrLog(\"SetModelProperty(%s) not find(%s)\", this.dataInfo, property);\n            return\n            \n        }\n    },\n\n    //--------------获取接口-----------------\n\n    //获取模型属性\n    GetModelProperty:function(property){\n        if(!this.dataInfo.hasOwnProperty(property)){\n            this.ErrLog(\"GetModelProperty(%s) not find(%s)\", this.dataInfo, property);\n            return\n        }\n        return this.dataInfo[property];\n    },\n\n\n    //-----子类重载----------------\n\n    OnCreateInit:function(){\n\n    },\n\n\n});\n"]}