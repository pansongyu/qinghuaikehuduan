{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\hotupdate/assets\\script\\hotupdate\\ApkUpdateMgr.js"],"names":["app","require","ApkUpdateMgr","BaseClass","extend","HotUpdate","SysLog","HotUpdateMgr","Check","localVersion","localVersionlist","split","ServerVersionlist","ApkVersion","IsUpdateByVersion","updateApk","IsNeedUpdate","bNeedUpdate","serverVersion","length","i","local","parseInt","server","storagePath","jsb","fileUtils","getWritablePath","argList","getApkRUl","downLoadMgr","DownLoadMgr","DownFile","CheckVersion","ComTool","IsAndroid","IsIOS","ErrLog","cc","sys","os","g_ApkUpdateMgr","exports","GetModel"],"mappings":"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","file":"ApkUpdateMgr.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\hotupdate","sourcesContent":["var app = require('app');\nvar ApkUpdateMgr = app.BaseClass.extend({\n    \n    HotUpdate: function () {\n        this.SysLog(\"HotUpdate\");\n        app.HotUpdateMgr().HotUpdate();\n    },\n\n    //版本比较\n    Check:function(){\n        //var localVersion = app.NativeManager().CallToNative(\"getVersion\", [], \"String\");\n        var localVersion ='';\n        if(!localVersion){\n            this.HotUpdate();\n            return;\n        }\n        var localVersionlist = localVersion.split(\".\");\n        var ServerVersionlist = this.ApkVersion.split(\".\");\n        this.SysLog(\"Check local=%s, server=%s\", localVersion, this.ApkVersion);\n        if(this.IsUpdateByVersion(localVersionlist, ServerVersionlist)) {\n            this.SysLog(\"updateApk\");\n            this.updateApk();\n        }\n        else {\n            this.HotUpdate();\n        }\n    },\n\n\n     //是否需要更新\n    IsNeedUpdate:function(){\n        let bNeedUpdate = false;\n        //var localVersion = app.NativeManager().CallToNative(\"getVersion\", [], \"String\");\n        var localVersion = '';\n        if(localVersion) {\n            var localVersionlist = localVersion.split(\".\");\n            var ServerVersionlist = this.ApkVersion.split(\".\");\n            bNeedUpdate = this.IsUpdateByVersion(localVersionlist, ServerVersionlist);\n        }\n       \n\n        return bNeedUpdate;\n    },\n\n    //android版本检查\n    // CheckAndroidVersion:function()\n    // {\n    //     var url = this.getApkVersionURl; //\"http://www.zle.com/zle.txt\";\n\n    //     //每次都实例化一个，否则会引起请求结束，实例被释放了\n    //     var httpRequest = null;\n    //     try {\n    //             httpRequest =  new ActiveXObject (\"Microsoft.XMLHTTP\");\n    //     }catch(e){\n    //         try {\n    //             httpRequest = new XMLHttpRequest();\n    //         }catch(e) {\n    //             this.SysLog(\"CheckAndroidVersion\");\n    //         }\n    //     }\n    //     httpRequest.open(\"GET\", url, true);\n    //     httpRequest.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n    //     //服务器json解码\n    //     httpRequest.setRequestHeader(\"Content-Type\", \"text/html\");\n\n    //     var that = this;\n    //     httpRequest.onerror = function(){\n    //         that.ErrLog(\"httpRequest.error:%s\", url);\n    //         that.HotUpdate();\n    //     };\n        \n    //     httpRequest.onreadystatechange = function(){\n    //         //执行成功\n    //         if (httpRequest.status == 200){\n                \n    //             var localVersion = app.NativeManager().CallToNative(\"getVersion\", [], \"String\");//app.LocalDataManager().HaveConfigProperty(\"SysSetting\",\"localVersion\") ?  app.LocalDataManager().GetConfigProperty(\"SysSetting\",\"localVersion\") : \"0.0\";\n    //             if(!localVersion){\n    //                 that.HotUpdate();\n    //                 return;\n    //             }\n    //             var localVersionlist = localVersion.split(\".\");\n    //             var ServerVersionlist = httpRequest.responseText.split(\".\");\n    //             that.SysLog(\"CheckAndroidVersion local=%s, server=%s\", localVersion, httpRequest.responseText);\n    //             if(that.IsUpdateByVersion(localVersionlist, ServerVersionlist))\n    //             {\n    //                 that.SysLog(\"updateApk\");\n    //                 that.updateApk();\n    //             }\n    //             else\n    //             {\n    //                 that.HotUpdate();\n    //             }\n    //         }\n    //         else{\n                \n    //             that.ErrLog(\"onreadystatechange(%s,%s)\", httpRequest.readyState, httpRequest.status);\n    //             that.HotUpdate();\n    //         }\n    //     };\n    //     httpRequest.send(\"\");\n    // },\n\n    //比较字符串大小\n    IsUpdateByVersion:function(localVersion, serverVersion){\n        if(serverVersion.length > localVersion.length){\n            return true;\n        }\n        for (var i = 0; i < localVersion.length; i++) {\n            let local = parseInt(localVersion[i]);\n            let server = i < serverVersion.length ? parseInt(serverVersion[i]) : 0;\n            if(parseInt(localVersion[i]) < parseInt(serverVersion[i])){\n                return true;\n            }\n        }\n        return false;\n    },\n\n    //更新apk \n    updateApk:function(){    \n            let storagePath = jsb.fileUtils ? jsb.fileUtils.getWritablePath() : '/';\n            let argList = [{\"Name\":\"urls\",\"Value\":this.getApkRUl},{\"Name\":\"fileName\",\"Value\":\"HZ-release.apk\"},{\"Name\":\"savePath\",\"Value\":storagePath}];   \n            let downLoadMgr = app.DownLoadMgr();\n            downLoadMgr.DownFile(this.getApkRUl, storagePath, \"HZ-release.apk\", \"LoadApkProess\");  \n    },\n\n    //版本检查\n    CheckVersion:function(getApkRUl, ApkVersion){\n        this.getApkRUl = getApkRUl;\n        this.ApkVersion = ApkVersion;\n        if(this.getApkRUl == null || this.getApkRUl == \"\")\n        {\n            this.getApkRUl = \"http://www.qp993/HZ-release.apk\";\n        }\n        if(this.ApkVersion == null || this.ApkVersion == \"\")\n        {\n            this.ApkVersion = \"1.0.0\";\n        }\n        this.SysLog(\"CheckVersion this.getApkRUl:%s, this.getApkVersionURl:%s\", this.getApkRUl, this.ApkVersion);\n        if(app.ComTool().IsAndroid()){\n            return this.Check();\n            //return this.CheckAndroidVersion();\n        }\n        else if(app.ComTool().IsIOS()){\n            return this.HotUpdate();\n        }\n        else{\n            this.ErrLog(\"CallToNative:%s error\", cc.sys.os);\n        }\n    },\n});\n\nvar g_ApkUpdateMgr = null;\n\nexports.GetModel = function(){\n    if(!g_ApkUpdateMgr)\n        g_ApkUpdateMgr = new ApkUpdateMgr();\n    return g_ApkUpdateMgr;\n\n}\n"]}