{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\common/assets\\script\\common\\LogManager.js"],"names":["LogManager","isDevelopment","Init","prototype","logFilePath","id","debugLogList","sendLogList","outPutLogList","isOpenLog","MaxLogCount","HookLogs","cc","log","self","hook","argList","AddSysLog","warn","error","GetMsg","count","length","index","value","valueType","Object","toString","call","slice","JSON","stringify","js","formatStr","apply","logType","msg","stack","push","Math","floor","IsOpenLog","GetNowDateTimeStr","dateStr","myDate","Date","dataList","getFullYear","getMonth","getDate","OutPutLog","sys","isNative","timeStr","toLocaleString","logText","logID","join","fileUtils","jsb","clientPath","getWritablePath","isDirectoryExist","createDirectory","logName","logPathFileName","writeStringToFile","SendLogToServer","GetLogMsgList","splice","ClearLogMsgList","GetDebugMsgList","g_LogManager","exports","GetModel"],"mappings":"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","file":"LogManager.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\common","sourcesContent":["/*\n    Log管理器\n*/\n\nvar LogManager = function(isDevelopment) {\n    this.Init(isDevelopment);\n};\n\n/**\n * Area filter\n */\nLogManager.prototype.Init = function(){\n\n\tthis.logFilePath = \"\";\n\n\tthis.id = 0;\n    this.debugLogList = [];\n    this.sendLogList = [];\n\tthis.outPutLogList = [];\n\n\t//默认开启,可以接收初始化阶段的log\n\tthis.isOpenLog = true;\n\n\t//超过多少条清除一半长度\n\tthis.MaxLogCount = 2000;\n\n\tthis.HookLogs();\n\n    cc.log(\"create LogManager\")\n};\n\nLogManager.prototype.HookLogs = function () {\n    var self = this;\n\n\tcc.log.hook('cc', function (...argList) {\n\t\tself.AddSysLog(argList, \"log\");\n\t}, 'log');\n\n\t// cc.log.hook('cc', function (...argList) {\n //        self.AddSysLog(argList, \"info\");\n //    }, 'info');\n\n    cc.warn.hook('cc', function (...argList) {              \n        self.AddSysLog(argList, \"warn\"); \n    }, 'warn');\n\n    cc.error.hook('cc', function (...argList) {          \n        self.AddSysLog(argList, \"error\"); \n    }, 'error');\n};\n\n//格式化 字典和列表为字符串\nLogManager.prototype.GetMsg = function(argList){\n    let count = argList.length;\n\n    //转化字典和列表参数\n    for(let index=1; index<count; index++){\n        let value = argList[index];\n        if(!value){\n            continue\n        }\n\n        let valueType = Object.prototype.toString.call(value).slice(\"[object \".length, -1);\n\n        if(valueType == \"Array\"){\n            value = JSON.stringify(value);\n        }\n        else if(valueType == \"Object\"){\n            value = JSON.stringify(value);\n        }\n        argList[index] = value;\n    }\n    return cc.js.formatStr.apply(null, argList);\n},\n\nLogManager.prototype.AddSysLog = function(argList, logType){\n    if(this.isOpenLog || logType==\"error\" || logType == \"info\"){\n\n\t    let msg = \"\";\n\t    try{\n\t\t    msg = this.GetMsg(argList);\n\t\t}\n\t    catch (error){\n\t\t    cc.error(\"error:%s\", error.stack);\n\t\t    msg = \"AddSysLog error\";\n\t    }\n\t    this.id += 1;\n        this.sendLogList.push([msg, logType, this.id]);\n        this.outPutLogList.push([msg, logType, this.id]);\n\t    this.debugLogList.push([msg, logType, this.id]);\n\n\t    if(this.sendLogList.length >= this.MaxLogCount){\n\t\t    this.sendLogList = this.sendLogList.slice(Math.floor(this.MaxLogCount/2), this.sendLogList.length);\n\t    }\n\n\t    if(this.debugLogList.length >= this.MaxLogCount){\n\t\t    this.debugLogList = this.debugLogList.slice(Math.floor(this.MaxLogCount/2), this.debugLogList.length);\n\t    }\n\n\t    if(this.outPutLogList.length >= this.MaxLogCount){\n\t\t    this.outPutLogList = this.outPutLogList.slice(Math.floor(this.MaxLogCount/2), this.outPutLogList.length);\n\t    }\n    }\n};\n\n//是否开启发送LOG到log服务器\nLogManager.prototype.IsOpenLog = function(isOpenLog){\n    this.isOpenLog = isOpenLog;\n};\n\nLogManager.prototype.GetNowDateTimeStr = function(){\n\tvar dateStr = \"\";\n\tvar myDate = new Date();\n\tvar dataList = [myDate.getFullYear(), myDate.getMonth() + 1, myDate.getDate()];\n\n\tfor (var index in dataList){\n\n\t\tvar value = dataList[index];\n\t\tif (value < 10){\n\t\t\tvalue = \"0\" + value;\n\t\t}\n\t\tif (index != dataList.length - 1){\n\n\t\t\tdateStr += value + \"-\";\n\t\t}\n\t\telse{\n\n\t\t\tdateStr += value;\n\t\t}\n\t}\n\treturn dateStr\n};\n\n//原生平台可以输出log文件\nLogManager.prototype.OutPutLog = function(){\n\n\tif (!cc.sys.isNative){\n\t\treturn\n\t}\n\tvar timeStr = new Date().toLocaleString();\n\n\tvar logText = \"\";\n\tfor(var index=0,count=this.outPutLogList.length-1; index<= count; index++){\n\n\t\tvar logType = this.outPutLogList[index][1];\n\t\tvar logID = this.outPutLogList[index][2];\n\t\tif(logType == \"error\"){\n\t\t\tlogText += [timeStr, \"\\t[\" + logID, \"]\\t###\", this.outPutLogList[index][0], \"\\n\"].join(\"\");\n\t\t}\n\t\telse{\n\t\t\tlogText += [timeStr, \"\\t[\" + logID, \"]\\t\", this.outPutLogList[index][0], \"\\n\"].join(\"\");\n\t\t}\n\t}\n\n\tif(!logText){\n\t\treturn\n\t}\n\n\tthis.outPutLogList = [];\n\n\tvar fileUtils = jsb.fileUtils;\n\n\tif(!this.logFilePath){\n\t\tvar clientPath = fileUtils.getWritablePath();\n\t\tif(!clientPath){\n\t\t\treturn\n\t\t}\n\t\t//输出Log路径\n\t\tthis.logFilePath = clientPath + \"Log/\";\n\t}\n\n\tif(!fileUtils.isDirectoryExist(this.logFilePath)){\n\t\tfileUtils.createDirectory(this.logFilePath);\n\t}\n\tvar logName = this.GetNowDateTimeStr();\n\t//Log文件完整路径\n\tvar logPathFileName= [this.logFilePath, logName, \".txt\"].join(\"\");\n\n\tfileUtils.writeStringToFile(logText, logPathFileName);\n};\n\n//--------------回掉函数---------------\n\n\n//发送log到服务器\nLogManager.prototype.SendLogToServer = function(){\n    //TODO:send log to server\n    this.sendLogList = [];\n};\n\n//截取多少条数据\nLogManager.prototype.GetLogMsgList = function(count){\n    if(!count){\n        count = this.sendLogList.length;\n    }\n    return this.sendLogList.splice(0, count);\n};\n\nLogManager.prototype.ClearLogMsgList = function(){\n    this.sendLogList = [];\n};\n\n//debug层显示信息\nLogManager.prototype.GetDebugMsgList = function(count){\n\tif(!count){\n\t\tcount = this.debugLogList.length;\n\t}\n\treturn this.debugLogList.splice(0, count);\n}\n\n    \nvar g_LogManager = null;\n\n/**\n * 绑定模块外部方法\n */\nexports.GetModel = function(isDevelopment){\n    if(!g_LogManager){\n        g_LogManager = new LogManager(isDevelopment);\n    }\n    return g_LogManager;\n}"]}