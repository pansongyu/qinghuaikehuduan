{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\ui/assets\\script\\ui\\UILogin.js"],"names":["app","require","cc","Class","extends","properties","EditBoxAccount","EditBox","EditBoxPsw","OnCreateInit","HeroAccountManager","ShareDefine","RegEvent","Event_CodeError","Event_ConnectFail","isToken","event","argDict","code","KickOut_AccountTokenError","string","KickOut_ServerClose","WaitForConfirm","ConfirmYN","UpdateAccessPoint","ShowSysMsg","OnShow","sys","isNative","FormManager","ShowForm","CloseForm","httpPath","Client","GetClientConfigProperty","length","substring","NetRequest","SendHttpRequestGet","serverUrl","responseText","httpRequest","data","JSON","parse","Config","ShowAccountInfo","accountList","GetLocalAccountList","count","account","token","OnClick","btnName","btnNode","Click_btnLogin","Click_btnReg","ErrLog","charAccount","psw","AccountLogin","OneKeyRegAccount","OnEditBoxBegin","sender","OnConFirm","clickType","msgID","backArgList","QQQunLink","openURL","ChangeAccessPoint"],"mappings":"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","file":"UILogin.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\ui","sourcesContent":["/*\n    UILogin 登陆界面\n*/\nvar app = require(\"app\");\n\ncc.Class({\n    extends: require(\"BaseForm\"),\n\n    properties: {\n        EditBoxAccount: cc.EditBox,\n        EditBoxPsw: cc.EditBox,\n\n    },\n\n    //初始化\n    OnCreateInit: function () {\n        this.HeroAccountManager = app.HeroAccountManager();\n        this.ShareDefine = app.ShareDefine();\n\n        this.RegEvent(\"CodeError\", this.Event_CodeError);\n        this.RegEvent(\"ConnectFail\", this.Event_ConnectFail);\n\n        this.isToken = 0;\n    },\n\n    //登录错误码\n    Event_CodeError: function (event) {\n        let argDict = event;\n        let code = argDict[\"Code\"];\n        if (code == this.ShareDefine.KickOut_AccountTokenError) {\n            this.EditBoxPsw.string = \"\";\n        }\n        else if (code == this.ShareDefine.KickOut_ServerClose) {\n            this.WaitForConfirm(\"Code_10016\", [], [], this.ShareDefine.ConfirmYN)\n        }\n    },\n\n    //连接服务器失败\n    Event_ConnectFail: function (event) {\n        this.UpdateAccessPoint();\n        let argDict = event;\n        if (!argDict['bCloseByLogout'])\n            this.ShowSysMsg(\"Net_ConnectFail\");\n    },\n\n    //--------------------显示函数----------------\n\n    OnShow: function () {\n        if (cc.sys.isNative) {\n            app.FormManager().ShowForm(\"UILogin01\");\n            this.CloseForm();\n            return\n        }\n        let httpPath = app.Client.GetClientConfigProperty(\"WebSiteUrl\");\n        if (httpPath[httpPath.length - 1] == \"/\") {\n            httpPath = httpPath.substring(0, httpPath.length - 1)\n        }\n        httpPath = httpPath + \"/index.php?module=Api&action=Config\"\n        app.NetRequest().SendHttpRequestGet(httpPath, \"\", {}, 15000, (serverUrl, responseText, httpRequest) => {\n            let data = JSON.parse(responseText)\n            app.Config = data.data\n        });\n        this.ShowAccountInfo();\n    },\n\n    //显示账号信息\n    ShowAccountInfo: function () {\n        let accountList = this.HeroAccountManager.GetLocalAccountList();\n        let count = accountList.length;\n\n        let account = \"\";\n        let token = \"\";\n\n        if (count) {\n            account = accountList[count - 1];\n            //token = this.HeroAccountManager.GetAccountToken(account);\n            //this.isToken = 1;\n        }\n\n        this.EditBoxAccount.string = account;\n        this.EditBoxPsw.string = '123456';\n\n    },\n\n    //---------点击函数---------------------\n\n    OnClick: function (btnName, btnNode) {\n        // this.HeroAccountManager.LoginAccountBySDK();\n        if (btnName == \"btnLogin\") {\n            this.Click_btnLogin();\n        }\n        else if (btnName == \"btnReg\") {\n            this.Click_btnReg();\n        }\n        else {\n            this.ErrLog(\"OnClick:%s not find\", btnName);\n        }\n    },\n\n    //点击登陆\n    Click_btnLogin: function () {\n        let charAccount = this.EditBoxAccount.string;\n        if (!charAccount) {\n            this.ShowSysMsg(\"AccountLogin_NotInputAccount\")\n            return\n        }\n        let psw = '123456';\n        if (!psw) {\n            this.ShowSysMsg(\"AccountLogin_NotInputPsw\")\n            return\n        }\n\n        //如果密码等于token为token登录\n        /*if(this.isToken){\n            psw = this.HeroAccountManager.GetAccountToken(charAccount);\n        }*/\n\n        //账号密码登陆\n        this.HeroAccountManager.AccountLogin(charAccount, psw, this.isToken);\n\n    },\n\n    //点击注册\n    Click_btnReg: function () {\n        this.HeroAccountManager.OneKeyRegAccount();\n    },\n\n    OnEditBoxBegin: function (sender) {\n\n        //如果点击了密码输入,则清除token标示\n        /*if(sender == this.EditBoxPsw){\n            this.isToken = 0;\n            sender.string = \"\";\n        }*/\n    },\n\n    //2次确认回调\n    OnConFirm: function (clickType, msgID, backArgList) {\n\n        if (clickType != \"Sure\") {\n            return\n        }\n        if (msgID == \"Code_10016\") {\n            let QQQunLink = app.Client.GetClientConfigProperty(\"QQQunLink\");\n            cc.sys.openURL(QQQunLink);\n        }\n    },\n    UpdateAccessPoint: function () {\n        app.HeroAccountManager().ChangeAccessPoint();\n    },\n});\n"]}