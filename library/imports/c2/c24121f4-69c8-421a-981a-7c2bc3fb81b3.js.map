{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\effect/assets\\script\\effect\\EffectManager.js"],"names":["app","require","EffectManager","BaseClass","extend","Init","JS_Name","SysDataManager","Effect","GetTableDict","cacheEffectDict","loadPrefabDict","Log","CreateEffectByEffectRes","effectName","effectRes","userData","that","console","log","hasOwnProperty","ErrLog","bluebird","reject","Error","resInfo","prefabPath","componentName","zorderLv","CreateEffect","catch","error","stack","effectNode","get","effectComponent","getComponent","active","InitEffectData","resolve","LoadPrefab","then","effePrefabObj","cc","instantiate","OnCreate","ControlManager","CreateLoadPromise","prefab","DeleteEffect","GetModelProperty","CacheModelNode","DeleteEffectByDict","effectComponentDict","effectNameList","Object","keys","count","length","index","component","NodePool","modelPool","put","node","g_EffectManager","exports","GetModel"],"mappings":"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","file":"EffectManager.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\effect","sourcesContent":["/*\n    特效管理器\n*/\nvar app = require('app');\n\nvar EffectManager = app.BaseClass.extend({\n\n    Init:function(){\n        this.JS_Name = \"EffectManager\";\n        this.SysDataManager = app.SysDataManager();\n        this.Effect = this.SysDataManager.GetTableDict(\"Effect\");\n\n        //特效回收池\n        this.cacheEffectDict = {};\n\n        //预制缓存字典\n        this.loadPrefabDict = {};\n\n        this.Log(\"Init\");\n    },\n\n    //-----------创建接口--------------------\n    //根据模型资源创建模型\n    CreateEffectByEffectRes:function(effectName, effectRes, userData=0){\n\n        let that = this;\n\t\tconsole.log(\"EFFENT DATA TABLE:\",this.Effect);\n        if(!this.Effect.hasOwnProperty(effectRes)){\n            this.ErrLog(\"CreateEffectByEffectRes Effect.txt not find(%s)\", effectRes);\n            return app.bluebird.reject(new Error(\"CreateEffectByEffectRes effectRes not find\"));\n        }\n        let resInfo = this.Effect[effectRes];\n        let prefabPath = resInfo[\"FilePath\"];\n        let componentName = resInfo[\"ComponentName\"];\n        let zorderLv = resInfo[\"ZorderLv\"];\n\n        return this.CreateEffect(effectName, effectRes, userData, prefabPath, componentName, zorderLv)\n                    .catch(function(error){\n                        that.ErrLog(\"CreateEffectByEffectRes(%s,%s,%s) error:%s\", effectName, effectRes, userData, error.stack);\n                    })\n\n    },\n\n\n    //创建模型\n    CreateEffect:function(effectName, effectRes, userData, prefabPath, componentName, zorderLv){\n        let that = this;\n        let effectNode = null;\n\n        if(this.cacheEffectDict.hasOwnProperty(effectRes)){\n            effectNode = this.cacheEffectDict[effectRes].get();\n        }\n\n        //如缓存池中有对象\n        if(effectNode){\n            //直接获取脚本组件对象\n            let effectComponent = effectNode.getComponent(componentName);\n\t        effectNode.active = false;\n            //不需要调用OnCreate接口创建\n            effectComponent.InitEffectData(effectName, effectRes, userData, componentName, zorderLv)\n            return app.bluebird.resolve(effectComponent)\n        }\n        else{\n            return this.LoadPrefab(prefabPath)\n                        .then(function(effePrefabObj){\n\n                            //that.Log(\"CreateEffect(%s,%s,%s)\", effectName, effectRes, prefabPath);\n                            console.log(\"CreateEffect effectName:\"+effectName);\n                            console.log(\"CreateEffect effectRes:\"+effectRes);\n                            console.log(\"CreateEffect prefabPath:\"+prefabPath);\n                            console.log(\"CreateEffect componentName:\"+componentName);\n                            let effectNode = cc.instantiate(effePrefabObj);\n                            //设置模型不可以见,需要模型自动ShowModel\n                            effectNode.active = false;\n                            //预制名和组件名相同,获取脚本组件名\n                            let effectComponent = effectNode.getComponent(componentName);\n                            if(!effectComponent){\n                                that.ErrLog(\"CreateEffect(%s,%s) not find Component (%s)\", effectName, effectRes, componentName);\n                                return null\n                            }\n                           \n                            effectComponent.OnCreate(effectName, effectRes, userData, componentName, zorderLv);\n\n                            return effectComponent\n                        })\n\n        }\n    },\n\n    //载入模型预制\n    LoadPrefab:function(prefabPath){\n\n        let loadPrefabDict = this.loadPrefabDict;\n\n        //缓存处理,预制可能已经加载过了\n        if(loadPrefabDict.hasOwnProperty(prefabPath)){\n            return app.bluebird.resolve(loadPrefabDict[prefabPath]);\n        }\n        let that = this;\n\n        return app.ControlManager().CreateLoadPromise(prefabPath)\n                            .then(function(prefab){\n                                loadPrefabDict[prefabPath] = prefab;\n                                return prefab\n                            })\n\n    },\n\n    //----------------操作接口--------------------\n    //删除特效\n    DeleteEffect:function(effectComponent){\n        let effectRes = effectComponent.GetModelProperty(\"EffectRes\");\n\n        this.CacheModelNode(effectRes, effectComponent)\n\n        // if(this.NeedCacheEffectResDict.hasOwnProperty(effectRes)){\n\n        // }\n        // else{\n        //     effectComponent.Destroy();\n        // }\n    },\n\n\t//删除特效通过字典\n\tDeleteEffectByDict:function(effectComponentDict){\n\t\tlet effectNameList = Object.keys(effectComponentDict);\n\t\tlet count = effectNameList.length;\n\t\tfor(let index=0; index<count; index++){\n\t\t\tlet effectComponent = effectComponentDict[effectNameList[index]];\n\t\t\tlet effectRes = effectComponent.GetModelProperty(\"EffectRes\");\n\t\t\tthis.CacheModelNode(effectRes, effectComponent)\n\t\t}\n\t},\n\n    //回收节点\n    CacheModelNode:function(effectRes, component){\n\n        //如果是模型对象缓存\n        let componentName = component.GetModelProperty(\"ComponentName\");\n        //如果是需要记录到缓冲池的\n        if(!this.cacheEffectDict.hasOwnProperty(effectRes)){\n            this.cacheEffectDict[effectRes] = new cc.NodePool(componentName);\n        }\n        let modelPool = this.cacheEffectDict[effectRes];\n        modelPool.put(component.node);\n\n    },\n\n});\n\n\nvar g_EffectManager = null;\n\n/**\n * 绑定模块外部方法\n */\nexports.GetModel = function(){\n    if(!g_EffectManager){\n        g_EffectManager = new EffectManager();\n    }\n    return g_EffectManager;\n}"]}